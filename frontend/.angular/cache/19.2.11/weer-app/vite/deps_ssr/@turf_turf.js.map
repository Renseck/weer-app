{
  "version": 3,
  "sources": ["../../../../../../node_modules/quickselect/index.js", "../../../../../../node_modules/rbush/index.js", "../../../../../../node_modules/fast-deep-equal/index.js", "../../../../../../node_modules/@turf/jsts/dist/jsts.min.js", "../../../../../../node_modules/tinyqueue/index.js", "../../../../../../node_modules/point-in-polygon/flat.js", "../../../../../../node_modules/point-in-polygon/nested.js", "../../../../../../node_modules/point-in-polygon/index.js", "../../../../../../node_modules/concaveman/node_modules/robust-predicates/umd/orient2d.min.js", "../../../../../../node_modules/concaveman/index.js", "../../../../../../node_modules/skmeans/dist/node/distance.js", "../../../../../../node_modules/skmeans/dist/node/kinit.js", "../../../../../../node_modules/skmeans/dist/node/main.js", "../../../../../../node_modules/earcut/src/earcut.js", "../../../../../../node_modules/@turf/helpers/dist/esm/index.js", "../../../../../../node_modules/@turf/invariant/dist/esm/index.js", "../../../../../../node_modules/@turf/bearing/dist/esm/index.js", "../../../../../../node_modules/@turf/destination/dist/esm/index.js", "../../../../../../node_modules/@turf/distance/dist/esm/index.js", "../../../../../../node_modules/@turf/along/dist/esm/index.js", "../../../../../../node_modules/@turf/rhumb-bearing/dist/esm/index.js", "../../../../../../node_modules/@turf/angle/dist/esm/index.js", "../../../../../../node_modules/@turf/meta/dist/esm/index.js", "../../../../../../node_modules/@turf/area/dist/esm/index.js", "../../../../../../node_modules/@turf/bbox/dist/esm/index.js", "../../../../../../node_modules/@turf/bbox-clip/dist/esm/index.js", "../../../../../../node_modules/@turf/bbox-polygon/dist/esm/index.js", "../../../../../../node_modules/@turf/bezier-spline/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-clockwise/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-concave/dist/esm/index.js", "../../../../../../node_modules/robust-predicates/esm/util.js", "../../../../../../node_modules/robust-predicates/esm/orient2d.js", "../../../../../../node_modules/robust-predicates/esm/orient3d.js", "../../../../../../node_modules/robust-predicates/esm/incircle.js", "../../../../../../node_modules/robust-predicates/esm/insphere.js", "../../../../../../node_modules/point-in-polygon-hao/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-point-in-polygon/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-point-on-line/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-contains/dist/esm/index.js", "../../../../../../node_modules/sweepline-intersections/dist/sweeplineIntersections.esm.js", "../../../../../../node_modules/@turf/line-intersect/dist/esm/index.js", "../../../../../../node_modules/@turf/polygon-to-line/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-crosses/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-disjoint/dist/esm/index.js", "../../../../../../node_modules/geojson-equality-ts/dist/esm/index.js", "../../../../../../node_modules/@turf/clean-coords/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-equal/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-intersects/dist/esm/index.js", "../../../../../../node_modules/@turf/geojson-rbush/dist/esm/index.js", "../../../../../../node_modules/@turf/line-segment/dist/esm/index.js", "../../../../../../node_modules/@turf/nearest-point-on-line/dist/esm/index.js", "../../../../../../node_modules/@turf/line-overlap/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-overlap/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-parallel/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-touches/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-valid/dist/esm/index.js", "../../../../../../node_modules/@turf/boolean-within/dist/esm/index.js", "../../../../../../node_modules/@turf/center/dist/esm/index.js", "../../../../../../node_modules/@turf/buffer/dist/esm/index.js", "../../../../../../node_modules/d3-geo/src/adder.js", "../../../../../../node_modules/d3-geo/src/math.js", "../../../../../../node_modules/d3-geo/src/noop.js", "../../../../../../node_modules/d3-geo/src/stream.js", "../../../../../../node_modules/d3-geo/src/area.js", "../../../../../../node_modules/d3-geo/src/cartesian.js", "../../../../../../node_modules/d3-geo/src/bounds.js", "../../../../../../node_modules/d3-geo/src/compose.js", "../../../../../../node_modules/d3-geo/src/rotation.js", "../../../../../../node_modules/d3-geo/src/circle.js", "../../../../../../node_modules/d3-geo/src/clip/buffer.js", "../../../../../../node_modules/d3-geo/src/clip/line.js", "../../../../../../node_modules/d3-geo/src/pointEqual.js", "../../../../../../node_modules/d3-geo/src/clip/polygon.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/ascending.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/bisector.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/bisect.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/array.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/ticks.js", "../../../../../../node_modules/d3-geo/node_modules/d3-array/src/merge.js", "../../../../../../node_modules/d3-geo/src/clip/extent.js", "../../../../../../node_modules/d3-geo/src/polygonContains.js", "../../../../../../node_modules/d3-geo/src/length.js", "../../../../../../node_modules/d3-geo/src/identity.js", "../../../../../../node_modules/d3-geo/src/path/area.js", "../../../../../../node_modules/d3-geo/src/path/bounds.js", "../../../../../../node_modules/d3-geo/src/path/context.js", "../../../../../../node_modules/d3-geo/src/path/measure.js", "../../../../../../node_modules/d3-geo/src/path/string.js", "../../../../../../node_modules/d3-geo/src/clip/index.js", "../../../../../../node_modules/d3-geo/src/clip/antimeridian.js", "../../../../../../node_modules/d3-geo/src/clip/circle.js", "../../../../../../node_modules/d3-geo/src/transform.js", "../../../../../../node_modules/d3-geo/src/projection/fit.js", "../../../../../../node_modules/d3-geo/src/projection/resample.js", "../../../../../../node_modules/d3-geo/src/projection/index.js", "../../../../../../node_modules/d3-geo/src/projection/azimuthal.js", "../../../../../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js", "../../../../../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js", "../../../../../../node_modules/d3-geo/src/projection/mercator.js", "../../../../../../node_modules/d3-geo/src/projection/equirectangular.js", "../../../../../../node_modules/d3-geo/src/projection/gnomonic.js", "../../../../../../node_modules/d3-geo/src/projection/naturalEarth1.js", "../../../../../../node_modules/d3-geo/src/projection/orthographic.js", "../../../../../../node_modules/d3-geo/src/projection/stereographic.js", "../../../../../../node_modules/d3-geo/src/projection/transverseMercator.js", "../../../../../../node_modules/@turf/center-mean/dist/esm/index.js", "../../../../../../node_modules/@turf/centroid/dist/esm/index.js", "../../../../../../node_modules/@turf/center-median/dist/esm/index.js", "../../../../../../node_modules/@turf/convex/dist/esm/index.js", "../../../../../../node_modules/@turf/center-of-mass/dist/esm/index.js", "../../../../../../node_modules/@turf/circle/dist/esm/index.js", "../../../../../../node_modules/@turf/clone/dist/esm/index.js", "../../../../../../node_modules/@turf/clusters/dist/esm/index.js", "../../../../../../node_modules/@turf/clusters-dbscan/dist/esm/index.js", "../../../../../../node_modules/@turf/clusters-kmeans/dist/esm/index.js", "../../../../../../node_modules/@turf/collect/dist/esm/index.js", "../../../../../../node_modules/@turf/combine/dist/esm/index.js", "../../../../../../node_modules/@turf/tin/dist/esm/index.js", "../../../../../../node_modules/topojson-client/src/identity.js", "../../../../../../node_modules/topojson-client/src/transform.js", "../../../../../../node_modules/topojson-client/src/reverse.js", "../../../../../../node_modules/topojson-client/src/feature.js", "../../../../../../node_modules/topojson-client/src/stitch.js", "../../../../../../node_modules/topojson-client/src/merge.js", "../../../../../../node_modules/topojson-server/src/object.js", "../../../../../../node_modules/topojson-server/src/bounds.js", "../../../../../../node_modules/topojson-server/src/hash/hashset.js", "../../../../../../node_modules/topojson-server/src/hash/hashmap.js", "../../../../../../node_modules/topojson-server/src/hash/point-equal.js", "../../../../../../node_modules/topojson-server/src/hash/point-hash.js", "../../../../../../node_modules/topojson-server/src/join.js", "../../../../../../node_modules/topojson-server/src/cut.js", "../../../../../../node_modules/topojson-server/src/dedup.js", "../../../../../../node_modules/topojson-server/src/delta.js", "../../../../../../node_modules/topojson-server/src/extract.js", "../../../../../../node_modules/topojson-server/src/geometry.js", "../../../../../../node_modules/topojson-server/src/prequantize.js", "../../../../../../node_modules/topojson-server/src/topology.js", "../../../../../../node_modules/@turf/concave/dist/esm/index.js", "../../../../../../node_modules/polyclip-ts/dist/esm/index.js", "../../../../../../node_modules/bignumber.js/bignumber.mjs", "../../../../../../node_modules/splaytree-ts/dist/esm/index.js", "../../../../../../node_modules/@turf/difference/dist/esm/index.js", "../../../../../../node_modules/@turf/flatten/dist/esm/index.js", "../../../../../../node_modules/@turf/dissolve/dist/esm/index.js", "../../../../../../node_modules/@turf/distance-weight/dist/esm/index.js", "../../../../../../node_modules/@turf/rhumb-destination/dist/esm/index.js", "../../../../../../node_modules/@turf/rhumb-distance/dist/esm/index.js", "../../../../../../node_modules/@turf/transform-rotate/dist/esm/index.js", "../../../../../../node_modules/@turf/ellipse/dist/esm/index.js", "../../../../../../node_modules/@turf/envelope/dist/esm/index.js", "../../../../../../node_modules/@turf/explode/dist/esm/index.js", "../../../../../../node_modules/@turf/flip/dist/esm/index.js", "../../../../../../node_modules/@turf/great-circle/dist/esm/index.js", "../../../../../../node_modules/@turf/intersect/dist/esm/index.js", "../../../../../../node_modules/@turf/hex-grid/dist/esm/index.js", "../../../../../../node_modules/@turf/point-grid/dist/esm/index.js", "../../../../../../node_modules/@turf/rectangle-grid/dist/esm/index.js", "../../../../../../node_modules/@turf/square-grid/dist/esm/index.js", "../../../../../../node_modules/@turf/triangle-grid/dist/esm/index.js", "../../../../../../node_modules/@turf/interpolate/dist/esm/index.js", "../../../../../../node_modules/marchingsquares/dist/marchingsquares-esm.js", "../../../../../../node_modules/@turf/isobands/dist/esm/index.js", "../../../../../../node_modules/@turf/isolines/dist/esm/index.js", "../../../../../../node_modules/@turf/kinks/dist/esm/index.js", "../../../../../../node_modules/@turf/length/dist/esm/index.js", "../../../../../../node_modules/@turf/line-arc/dist/esm/index.js", "../../../../../../node_modules/@turf/line-slice-along/dist/esm/index.js", "../../../../../../node_modules/@turf/line-chunk/dist/esm/index.js", "../../../../../../node_modules/@turf/line-offset/dist/esm/index.js", "../../../../../../node_modules/@turf/line-slice/dist/esm/index.js", "../../../../../../node_modules/@turf/square/dist/esm/index.js", "../../../../../../node_modules/@turf/truncate/dist/esm/index.js", "../../../../../../node_modules/@turf/line-split/dist/esm/index.js", "../../../../../../node_modules/@turf/line-to-polygon/dist/esm/index.js", "../../../../../../node_modules/@turf/mask/dist/esm/index.js", "../../../../../../node_modules/@turf/midpoint/dist/esm/index.js", "../../../../../../node_modules/@turf/moran-index/dist/esm/index.js", "../../../../../../node_modules/@turf/nearest-point/dist/esm/index.js", "../../../../../../node_modules/@turf/nearest-neighbor-analysis/dist/esm/index.js", "../../../../../../node_modules/@turf/point-to-line-distance/dist/esm/index.js", "../../../../../../node_modules/@turf/nearest-point-to-line/dist/esm/index.js", "../../../../../../node_modules/@turf/planepoint/dist/esm/index.js", "../../../../../../node_modules/@turf/point-on-feature/dist/esm/index.js", "../../../../../../node_modules/@turf/points-within-polygon/dist/esm/index.js", "../../../../../../node_modules/@turf/point-to-polygon-distance/dist/esm/index.js", "../../../../../../node_modules/@turf/polygonize/dist/esm/index.js", "../../../../../../node_modules/@turf/polygon-smooth/dist/esm/index.js", "../../../../../../node_modules/@turf/polygon-tangents/dist/esm/index.js", "../../../../../../node_modules/@turf/projection/dist/esm/index.js", "../../../../../../node_modules/@turf/quadrat-analysis/dist/esm/index.js", "../../../../../../node_modules/@turf/random/dist/esm/index.js", "../../../../../../node_modules/@turf/rewind/dist/esm/index.js", "../../../../../../node_modules/@turf/sample/dist/esm/index.js", "../../../../../../node_modules/@turf/sector/dist/esm/index.js", "../../../../../../node_modules/@turf/transform-scale/dist/esm/index.js", "../../../../../../node_modules/@turf/shortest-path/dist/esm/index.js", "../../../../../../node_modules/@turf/simplify/dist/esm/index.js", "../../../../../../node_modules/@turf/standard-deviational-ellipse/dist/esm/index.js", "../../../../../../node_modules/@turf/tag/dist/esm/index.js", "../../../../../../node_modules/@turf/tesselate/dist/esm/index.js", "../../../../../../node_modules/@turf/transform-translate/dist/esm/index.js", "../../../../../../node_modules/@turf/union/dist/esm/index.js", "../../../../../../node_modules/@turf/unkink-polygon/dist/esm/index.js", "../../../../../../node_modules/d3-voronoi/src/constant.js", "../../../../../../node_modules/d3-voronoi/src/point.js", "../../../../../../node_modules/d3-voronoi/src/RedBlackTree.js", "../../../../../../node_modules/d3-voronoi/src/Edge.js", "../../../../../../node_modules/d3-voronoi/src/Cell.js", "../../../../../../node_modules/d3-voronoi/src/Circle.js", "../../../../../../node_modules/d3-voronoi/src/Beach.js", "../../../../../../node_modules/d3-voronoi/src/Diagram.js", "../../../../../../node_modules/d3-voronoi/src/voronoi.js", "../../../../../../node_modules/@turf/voronoi/dist/esm/index.js"],
  "sourcesContent": ["export default function quickselect(arr, k, left, right, compare) {\n  quickselectStep(arr, k, left || 0, right || arr.length - 1, compare || defaultCompare);\n}\nfunction quickselectStep(arr, k, left, right, compare) {\n  while (right > left) {\n    if (right - left > 600) {\n      var n = right - left + 1;\n      var m = k - left + 1;\n      var z = Math.log(n);\n      var s = 0.5 * Math.exp(2 * z / 3);\n      var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselectStep(arr, k, newLeft, newRight, compare);\n    }\n    var t = arr[k];\n    var i = left;\n    var j = right;\n    swap(arr, left, k);\n    if (compare(arr[right], t) > 0) swap(arr, left, right);\n    while (i < j) {\n      swap(arr, i, j);\n      i++;\n      j--;\n      while (compare(arr[i], t) < 0) i++;\n      while (compare(arr[j], t) > 0) j--;\n    }\n    if (compare(arr[left], t) === 0) swap(arr, left, j);else {\n      j++;\n      swap(arr, j, right);\n    }\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n}\nfunction swap(arr, i, j) {\n  var tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\nfunction defaultCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}", "import quickselect from 'quickselect';\nexport default class RBush {\n  constructor(maxEntries = 9) {\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n  }\n  all() {\n    return this._all(this.data, []);\n  }\n  search(bbox) {\n    let node = this.data;\n    const result = [];\n    if (!intersects(bbox, node)) return result;\n    const toBBox = this.toBBox;\n    const nodesToSearch = [];\n    while (node) {\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const childBBox = node.leaf ? toBBox(child) : child;\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf) result.push(child);else if (contains(bbox, childBBox)) this._all(child, result);else nodesToSearch.push(child);\n        }\n      }\n      node = nodesToSearch.pop();\n    }\n    return result;\n  }\n  collides(bbox) {\n    let node = this.data;\n    if (!intersects(bbox, node)) return false;\n    const nodesToSearch = [];\n    while (node) {\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const childBBox = node.leaf ? this.toBBox(child) : child;\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf || contains(bbox, childBBox)) return true;\n          nodesToSearch.push(child);\n        }\n      }\n      node = nodesToSearch.pop();\n    }\n    return false;\n  }\n  load(data) {\n    if (!(data && data.length)) return this;\n    if (data.length < this._minEntries) {\n      for (let i = 0; i < data.length; i++) {\n        this.insert(data[i]);\n      }\n      return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    let node = this._build(data.slice(), 0, data.length - 1, 0);\n    if (!this.data.children.length) {\n      // save as is if tree is empty\n      this.data = node;\n    } else if (this.data.height === node.height) {\n      // split root if trees have the same height\n      this._splitRoot(this.data, node);\n    } else {\n      if (this.data.height < node.height) {\n        // swap trees if inserted one is bigger\n        const tmpNode = this.data;\n        this.data = node;\n        node = tmpNode;\n      }\n\n      // insert the small tree into the large tree at appropriate level\n      this._insert(node, this.data.height - node.height - 1, true);\n    }\n    return this;\n  }\n  insert(item) {\n    if (item) this._insert(item, this.data.height - 1);\n    return this;\n  }\n  clear() {\n    this.data = createNode([]);\n    return this;\n  }\n  remove(item, equalsFn) {\n    if (!item) return this;\n    let node = this.data;\n    const bbox = this.toBBox(item);\n    const path = [];\n    const indexes = [];\n    let i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n      if (!node) {\n        // go up\n        node = path.pop();\n        parent = path[path.length - 1];\n        i = indexes.pop();\n        goingUp = true;\n      }\n      if (node.leaf) {\n        // check current node\n        const index = findItem(item, node.children, equalsFn);\n        if (index !== -1) {\n          // item found, remove the item and condense tree upwards\n          node.children.splice(index, 1);\n          path.push(node);\n          this._condense(path);\n          return this;\n        }\n      }\n      if (!goingUp && !node.leaf && contains(node, bbox)) {\n        // go down\n        path.push(node);\n        indexes.push(i);\n        i = 0;\n        parent = node;\n        node = node.children[0];\n      } else if (parent) {\n        // go right\n        i++;\n        node = parent.children[i];\n        goingUp = false;\n      } else node = null; // nothing found\n    }\n    return this;\n  }\n  toBBox(item) {\n    return item;\n  }\n  compareMinX(a, b) {\n    return a.minX - b.minX;\n  }\n  compareMinY(a, b) {\n    return a.minY - b.minY;\n  }\n  toJSON() {\n    return this.data;\n  }\n  fromJSON(data) {\n    this.data = data;\n    return this;\n  }\n  _all(node, result) {\n    const nodesToSearch = [];\n    while (node) {\n      if (node.leaf) result.push(...node.children);else nodesToSearch.push(...node.children);\n      node = nodesToSearch.pop();\n    }\n    return result;\n  }\n  _build(items, left, right, height) {\n    const N = right - left + 1;\n    let M = this._maxEntries;\n    let node;\n    if (N <= M) {\n      // reached leaf level; return leaf\n      node = createNode(items.slice(left, right + 1));\n      calcBBox(node, this.toBBox);\n      return node;\n    }\n    if (!height) {\n      // target height of the bulk-loaded tree\n      height = Math.ceil(Math.log(N) / Math.log(M));\n\n      // target number of root entries to maximize storage utilization\n      M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    const N2 = Math.ceil(N / M);\n    const N1 = N2 * Math.ceil(Math.sqrt(M));\n    multiSelect(items, left, right, N1, this.compareMinX);\n    for (let i = left; i <= right; i += N1) {\n      const right2 = Math.min(i + N1 - 1, right);\n      multiSelect(items, i, right2, N2, this.compareMinY);\n      for (let j = i; j <= right2; j += N2) {\n        const right3 = Math.min(j + N2 - 1, right2);\n\n        // pack each entry recursively\n        node.children.push(this._build(items, j, right3, height - 1));\n      }\n    }\n    calcBBox(node, this.toBBox);\n    return node;\n  }\n  _chooseSubtree(bbox, node, level, path) {\n    while (true) {\n      path.push(node);\n      if (node.leaf || path.length - 1 === level) break;\n      let minArea = Infinity;\n      let minEnlargement = Infinity;\n      let targetNode;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const area = bboxArea(child);\n        const enlargement = enlargedArea(bbox, child) - area;\n\n        // choose entry with the least area enlargement\n        if (enlargement < minEnlargement) {\n          minEnlargement = enlargement;\n          minArea = area < minArea ? area : minArea;\n          targetNode = child;\n        } else if (enlargement === minEnlargement) {\n          // otherwise choose one with the smallest area\n          if (area < minArea) {\n            minArea = area;\n            targetNode = child;\n          }\n        }\n      }\n      node = targetNode || node.children[0];\n    }\n    return node;\n  }\n  _insert(item, level, isNode) {\n    const bbox = isNode ? item : this.toBBox(item);\n    const insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n      if (insertPath[level].children.length > this._maxEntries) {\n        this._split(insertPath, level);\n        level--;\n      } else break;\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n  }\n\n  // split overflowed node into two\n  _split(insertPath, level) {\n    const node = insertPath[level];\n    const M = node.children.length;\n    const m = this._minEntries;\n    this._chooseSplitAxis(node, m, M);\n    const splitIndex = this._chooseSplitIndex(node, m, M);\n    const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n    if (level) insertPath[level - 1].children.push(newNode);else this._splitRoot(node, newNode);\n  }\n  _splitRoot(node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n  }\n  _chooseSplitIndex(node, m, M) {\n    let index;\n    let minOverlap = Infinity;\n    let minArea = Infinity;\n    for (let i = m; i <= M - m; i++) {\n      const bbox1 = distBBox(node, 0, i, this.toBBox);\n      const bbox2 = distBBox(node, i, M, this.toBBox);\n      const overlap = intersectionArea(bbox1, bbox2);\n      const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n      // choose distribution with minimum overlap\n      if (overlap < minOverlap) {\n        minOverlap = overlap;\n        index = i;\n        minArea = area < minArea ? area : minArea;\n      } else if (overlap === minOverlap) {\n        // otherwise choose distribution with minimum area\n        if (area < minArea) {\n          minArea = area;\n          index = i;\n        }\n      }\n    }\n    return index || M - m;\n  }\n\n  // sorts node children by the best axis for split\n  _chooseSplitAxis(node, m, M) {\n    const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    const xMargin = this._allDistMargin(node, m, M, compareMinX);\n    const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) node.children.sort(compareMinX);\n  }\n\n  // total margin of all possible split distributions where each node is at least m full\n  _allDistMargin(node, m, M, compare) {\n    node.children.sort(compare);\n    const toBBox = this.toBBox;\n    const leftBBox = distBBox(node, 0, m, toBBox);\n    const rightBBox = distBBox(node, M - m, M, toBBox);\n    let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n    for (let i = m; i < M - m; i++) {\n      const child = node.children[i];\n      extend(leftBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(leftBBox);\n    }\n    for (let i = M - m - 1; i >= m; i--) {\n      const child = node.children[i];\n      extend(rightBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(rightBBox);\n    }\n    return margin;\n  }\n  _adjustParentBBoxes(bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (let i = level; i >= 0; i--) {\n      extend(path[i], bbox);\n    }\n  }\n  _condense(path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (let i = path.length - 1, siblings; i >= 0; i--) {\n      if (path[i].children.length === 0) {\n        if (i > 0) {\n          siblings = path[i - 1].children;\n          siblings.splice(siblings.indexOf(path[i]), 1);\n        } else this.clear();\n      } else calcBBox(path[i], this.toBBox);\n    }\n  }\n}\nfunction findItem(item, items, equalsFn) {\n  if (!equalsFn) return items.indexOf(item);\n  for (let i = 0; i < items.length; i++) {\n    if (equalsFn(item, items[i])) return i;\n  }\n  return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n  distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n  if (!destNode) destNode = createNode(null);\n  destNode.minX = Infinity;\n  destNode.minY = Infinity;\n  destNode.maxX = -Infinity;\n  destNode.maxY = -Infinity;\n  for (let i = k; i < p; i++) {\n    const child = node.children[i];\n    extend(destNode, node.leaf ? toBBox(child) : child);\n  }\n  return destNode;\n}\nfunction extend(a, b) {\n  a.minX = Math.min(a.minX, b.minX);\n  a.minY = Math.min(a.minY, b.minY);\n  a.maxX = Math.max(a.maxX, b.maxX);\n  a.maxY = Math.max(a.maxY, b.maxY);\n  return a;\n}\nfunction compareNodeMinX(a, b) {\n  return a.minX - b.minX;\n}\nfunction compareNodeMinY(a, b) {\n  return a.minY - b.minY;\n}\nfunction bboxArea(a) {\n  return (a.maxX - a.minX) * (a.maxY - a.minY);\n}\nfunction bboxMargin(a) {\n  return a.maxX - a.minX + (a.maxY - a.minY);\n}\nfunction enlargedArea(a, b) {\n  return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) * (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\nfunction intersectionArea(a, b) {\n  const minX = Math.max(a.minX, b.minX);\n  const minY = Math.max(a.minY, b.minY);\n  const maxX = Math.min(a.maxX, b.maxX);\n  const maxY = Math.min(a.maxY, b.maxY);\n  return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n}\nfunction contains(a, b) {\n  return a.minX <= b.minX && a.minY <= b.minY && b.maxX <= a.maxX && b.maxY <= a.maxY;\n}\nfunction intersects(a, b) {\n  return b.minX <= a.maxX && b.minY <= a.maxY && b.maxX >= a.minX && b.maxY >= a.minY;\n}\nfunction createNode(children) {\n  return {\n    children,\n    height: 1,\n    leaf: true,\n    minX: Infinity,\n    minY: Infinity,\n    maxX: -Infinity,\n    maxY: -Infinity\n  };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n  const stack = [left, right];\n  while (stack.length) {\n    right = stack.pop();\n    left = stack.pop();\n    if (right - left <= n) continue;\n    const mid = left + Math.ceil((right - left) / n / 2) * n;\n    quickselect(arr, mid, left, right, compare);\n    stack.push(left, mid, mid, right);\n  }\n}", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a !== a && b !== b;\n};", "!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).jsts = e();\n}(this, function () {\n  \"use strict\";\n\n  function t(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n    for (var n = 0, i = Array(e); n < e; n++) i[n] = t[n];\n    return i;\n  }\n  function e(t, e, n) {\n    return e = u(e), function (t, e) {\n      if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n      if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n      return function (t) {\n        if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return t;\n      }(t);\n    }(t, h() ? Reflect.construct(e, n || [], u(t).constructor) : e.apply(t, n));\n  }\n  function n(t, e) {\n    if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function i(t, e, n) {\n    if (h()) return Reflect.construct.apply(null, arguments);\n    var i = [null];\n    i.push.apply(i, e);\n    var r = new (t.bind.apply(t, i))();\n    return n && c(r, n.prototype), r;\n  }\n  function r(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var i = e[n];\n      i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, v(i.key), i);\n    }\n  }\n  function s(t, e, n) {\n    return e && r(t.prototype, e), n && r(t, n), Object.defineProperty(t, \"prototype\", {\n      writable: !1\n    }), t;\n  }\n  function a(t, e) {\n    var n = \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n    if (!n) {\n      if (Array.isArray(t) || (n = y(t)) || e) {\n        n && (t = n);\n        var i = 0,\n          r = function () {};\n        return {\n          s: r,\n          n: function () {\n            return i >= t.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: t[i++]\n            };\n          },\n          e: function (t) {\n            throw t;\n          },\n          f: r\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var s,\n      a = !0,\n      o = !1;\n    return {\n      s: function () {\n        n = n.call(t);\n      },\n      n: function () {\n        var t = n.next();\n        return a = t.done, t;\n      },\n      e: function (t) {\n        o = !0, s = t;\n      },\n      f: function () {\n        try {\n          a || null == n.return || n.return();\n        } finally {\n          if (o) throw s;\n        }\n      }\n    };\n  }\n  function o() {\n    return o = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (t, e, n) {\n      var i = function (t, e) {\n        for (; !{}.hasOwnProperty.call(t, e) && null !== (t = u(t)););\n        return t;\n      }(t, e);\n      if (i) {\n        var r = Object.getOwnPropertyDescriptor(i, e);\n        return r.get ? r.get.call(arguments.length < 3 ? t : n) : r.value;\n      }\n    }, o.apply(null, arguments);\n  }\n  function u(t) {\n    return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n      return t.__proto__ || Object.getPrototypeOf(t);\n    }, u(t);\n  }\n  function l(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n    t.prototype = Object.create(e && e.prototype, {\n      constructor: {\n        value: t,\n        writable: !0,\n        configurable: !0\n      }\n    }), Object.defineProperty(t, \"prototype\", {\n      writable: !1\n    }), e && c(t, e);\n  }\n  function h() {\n    try {\n      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (t) {}\n    return (h = function () {\n      return !!t;\n    })();\n  }\n  function c(t, e) {\n    return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n      return t.__proto__ = e, t;\n    }, c(t, e);\n  }\n  function f(t, e, n, i) {\n    var r = o(u(1 & i ? t.prototype : t), e, n);\n    return 2 & i && \"function\" == typeof r ? function (t) {\n      return r.apply(n, t);\n    } : r;\n  }\n  function g(e) {\n    return function (e) {\n      if (Array.isArray(e)) return t(e);\n    }(e) || function (t) {\n      if (\"undefined\" != typeof Symbol && null != t[Symbol.iterator] || null != t[\"@@iterator\"]) return Array.from(t);\n    }(e) || y(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n  }\n  function v(t) {\n    var e = function (t, e) {\n      if (\"object\" != typeof t || !t) return t;\n      var n = t[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var i = n.call(t, e);\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n      }\n      return String(t);\n    }(t, \"string\");\n    return \"symbol\" == typeof e ? e : e + \"\";\n  }\n  function y(e, n) {\n    if (e) {\n      if (\"string\" == typeof e) return t(e, n);\n      var i = {}.toString.call(e).slice(8, -1);\n      return \"Object\" === i && e.constructor && (i = e.constructor.name), \"Map\" === i || \"Set\" === i ? Array.from(e) : \"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? t(e, n) : void 0;\n    }\n  }\n  function d(t) {\n    var e = \"function\" == typeof Map ? new Map() : void 0;\n    return d = function (t) {\n      if (null === t || !function (t) {\n        try {\n          return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n        } catch (e) {\n          return \"function\" == typeof t;\n        }\n      }(t)) return t;\n      if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n      if (void 0 !== e) {\n        if (e.has(t)) return e.get(t);\n        e.set(t, n);\n      }\n      function n() {\n        return i(t, arguments, u(this).constructor);\n      }\n      return n.prototype = Object.create(t.prototype, {\n        constructor: {\n          value: n,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), c(n, t);\n    }, d(t);\n  }\n  var _ = function () {\n    function t() {\n      n(this, t), t.constructor_.apply(this, arguments);\n    }\n    return s(t, [{\n      key: \"getEndCapStyle\",\n      value: function () {\n        return this._endCapStyle;\n      }\n    }, {\n      key: \"isSingleSided\",\n      value: function () {\n        return this._isSingleSided;\n      }\n    }, {\n      key: \"setQuadrantSegments\",\n      value: function (e) {\n        this._quadrantSegments = e, 0 === this._quadrantSegments && (this._joinStyle = t.JOIN_BEVEL), this._quadrantSegments < 0 && (this._joinStyle = t.JOIN_MITRE, this._mitreLimit = Math.abs(this._quadrantSegments)), e <= 0 && (this._quadrantSegments = 1), this._joinStyle !== t.JOIN_ROUND && (this._quadrantSegments = t.DEFAULT_QUADRANT_SEGMENTS);\n      }\n    }, {\n      key: \"getJoinStyle\",\n      value: function () {\n        return this._joinStyle;\n      }\n    }, {\n      key: \"setJoinStyle\",\n      value: function (t) {\n        this._joinStyle = t;\n      }\n    }, {\n      key: \"setSimplifyFactor\",\n      value: function (t) {\n        this._simplifyFactor = t < 0 ? 0 : t;\n      }\n    }, {\n      key: \"getSimplifyFactor\",\n      value: function () {\n        return this._simplifyFactor;\n      }\n    }, {\n      key: \"getQuadrantSegments\",\n      value: function () {\n        return this._quadrantSegments;\n      }\n    }, {\n      key: \"setEndCapStyle\",\n      value: function (t) {\n        this._endCapStyle = t;\n      }\n    }, {\n      key: \"getMitreLimit\",\n      value: function () {\n        return this._mitreLimit;\n      }\n    }, {\n      key: \"setMitreLimit\",\n      value: function (t) {\n        this._mitreLimit = t;\n      }\n    }, {\n      key: \"setSingleSided\",\n      value: function (t) {\n        this._isSingleSided = t;\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        if (this._quadrantSegments = t.DEFAULT_QUADRANT_SEGMENTS, this._endCapStyle = t.CAP_ROUND, this._joinStyle = t.JOIN_ROUND, this._mitreLimit = t.DEFAULT_MITRE_LIMIT, this._isSingleSided = !1, this._simplifyFactor = t.DEFAULT_SIMPLIFY_FACTOR, 0 === arguments.length) ;else if (1 === arguments.length) {\n          var e = arguments[0];\n          this.setQuadrantSegments(e);\n        } else if (2 === arguments.length) {\n          var n = arguments[0],\n            i = arguments[1];\n          this.setQuadrantSegments(n), this.setEndCapStyle(i);\n        } else if (4 === arguments.length) {\n          var r = arguments[0],\n            s = arguments[1],\n            a = arguments[2],\n            o = arguments[3];\n          this.setQuadrantSegments(r), this.setEndCapStyle(s), this.setJoinStyle(a), this.setMitreLimit(o);\n        }\n      }\n    }, {\n      key: \"bufferDistanceError\",\n      value: function (t) {\n        var e = Math.PI / 2 / t;\n        return 1 - Math.cos(e / 2);\n      }\n    }]);\n  }();\n  _.CAP_ROUND = 1, _.CAP_FLAT = 2, _.CAP_SQUARE = 3, _.JOIN_ROUND = 1, _.JOIN_MITRE = 2, _.JOIN_BEVEL = 3, _.DEFAULT_QUADRANT_SEGMENTS = 8, _.DEFAULT_MITRE_LIMIT = 5, _.DEFAULT_SIMPLIFY_FACTOR = .01;\n  var p = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          Exception: i\n        })[0], r;\n      }\n      return l(i, t), s(i, [{\n        key: \"toString\",\n        value: function () {\n          return this.message;\n        }\n      }]);\n    }(d(Error)),\n    m = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          IllegalArgumentException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    k = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"filter\",\n        value: function (t) {}\n      }]);\n    }();\n  function x() {}\n  function I() {}\n  function E() {}\n  var N,\n    T,\n    S,\n    L,\n    C,\n    R,\n    w,\n    O,\n    b = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"equalsWithTolerance\",\n        value: function (t, e, n) {\n          return Math.abs(t - e) <= n;\n        }\n      }]);\n    }(),\n    M = function () {\n      return s(function t(e, i) {\n        n(this, t), this.low = i || 0, this.high = e || 0;\n      }, null, [{\n        key: \"toBinaryString\",\n        value: function (t) {\n          var e,\n            n = \"\";\n          for (e = 2147483648; e > 0; e >>>= 1) n += (t.high & e) === e ? \"1\" : \"0\";\n          for (e = 2147483648; e > 0; e >>>= 1) n += (t.low & e) === e ? \"1\" : \"0\";\n          return n;\n        }\n      }]);\n    }();\n  function A() {}\n  function P() {}\n  A.NaN = NaN, A.isNaN = function (t) {\n    return Number.isNaN(t);\n  }, A.isInfinite = function (t) {\n    return !Number.isFinite(t);\n  }, A.MAX_VALUE = Number.MAX_VALUE, A.POSITIVE_INFINITY = Number.POSITIVE_INFINITY, A.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY, \"function\" == typeof Float64Array && \"function\" == typeof Int32Array ? (R = 2146435072, w = new Float64Array(1), O = new Int32Array(w.buffer), A.doubleToLongBits = function (t) {\n    w[0] = t;\n    var e = 0 | O[0],\n      n = 0 | O[1];\n    return (n & R) === R && 1048575 & n && 0 !== e && (e = 0, n = 2146959360), new M(n, e);\n  }, A.longBitsToDouble = function (t) {\n    return O[0] = t.low, O[1] = t.high, w[0];\n  }) : (N = 1023, T = Math.log2, S = Math.floor, L = Math.pow, C = function () {\n    for (var t = 53; t > 0; t--) {\n      var e = L(2, t) - 1;\n      if (S(T(e)) + 1 === t) return e;\n    }\n    return 0;\n  }(), A.doubleToLongBits = function (t) {\n    var e, n, i, r, s, a, o, u, l;\n    if (t < 0 || 1 / t === Number.NEGATIVE_INFINITY ? (a = 1 << 31, t = -t) : a = 0, 0 === t) return new M(u = a, l = 0);\n    if (t === 1 / 0) return new M(u = 2146435072 | a, l = 0);\n    if (t != t) return new M(u = 2146959360, l = 0);\n    if (r = 0, l = 0, (e = S(t)) > 1) if (e <= C) (r = S(T(e))) <= 20 ? (l = 0, u = e << 20 - r & 1048575) : (l = e % (n = L(2, i = r - 20)) << 32 - i, u = e / n & 1048575);else for (i = e, l = 0; 0 !== (i = S(n = i / 2));) r++, l >>>= 1, l |= (1 & u) << 31, u >>>= 1, n !== i && (u |= 524288);\n    if (o = r + N, s = 0 === e, e = t - e, r < 52 && 0 !== e) for (i = 0;;) {\n      if ((n = 2 * e) >= 1 ? (e = n - 1, s ? (o--, s = !1) : (i <<= 1, i |= 1, r++)) : (e = n, s ? 0 == --o && (r++, s = !1) : (i <<= 1, r++)), 20 === r) u |= i, i = 0;else if (52 === r) {\n        l |= i;\n        break;\n      }\n      if (1 === n) {\n        r < 20 ? u |= i << 20 - r : r < 52 && (l |= i << 52 - r);\n        break;\n      }\n    }\n    return u |= o << 20, new M(u |= a, l);\n  }, A.longBitsToDouble = function (t) {\n    var e,\n      n,\n      i,\n      r,\n      s = t.high,\n      a = t.low,\n      o = s & 1 << 31 ? -1 : 1;\n    for (i = ((2146435072 & s) >> 20) - N, r = 0, n = 1 << 19, e = 1; e <= 20; e++) s & n && (r += L(2, -e)), n >>>= 1;\n    for (n = 1 << 31, e = 21; e <= 52; e++) a & n && (r += L(2, -e)), n >>>= 1;\n    if (-1023 === i) {\n      if (0 === r) return 0 * o;\n      i = -1022;\n    } else {\n      if (1024 === i) return 0 === r ? o / 0 : NaN;\n      r += 1;\n    }\n    return o * r * L(2, i);\n  });\n  var D = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          RuntimeException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    F = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, null, [{\n        key: \"constructor_\",\n        value: function () {\n          if (0 === arguments.length) D.constructor_.call(this);else if (1 === arguments.length) {\n            var t = arguments[0];\n            D.constructor_.call(this, t);\n          }\n        }\n      }]);\n    }(D),\n    G = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"shouldNeverReachHere\",\n        value: function () {\n          if (0 === arguments.length) t.shouldNeverReachHere(null);else if (1 === arguments.length) {\n            var e = arguments[0];\n            throw new F(\"Should never reach here\" + (null !== e ? \": \" + e : \"\"));\n          }\n        }\n      }, {\n        key: \"isTrue\",\n        value: function () {\n          if (1 === arguments.length) {\n            var e = arguments[0];\n            t.isTrue(e, null);\n          } else if (2 === arguments.length) {\n            var n = arguments[1];\n            if (!arguments[0]) throw null === n ? new F() : new F(n);\n          }\n        }\n      }, {\n        key: \"equals\",\n        value: function () {\n          if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            t.equals(e, n, null);\n          } else if (3 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1],\n              s = arguments[2];\n            if (!r.equals(i)) throw new F(\"Expected \" + i + \" but encountered \" + r + (null !== s ? \": \" + s : \"\"));\n          }\n        }\n      }]);\n    }(),\n    q = new ArrayBuffer(8),\n    Y = new Float64Array(q),\n    z = new Int32Array(q),\n    X = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getM\",\n        value: function () {\n          return A.NaN;\n        }\n      }, {\n        key: \"setOrdinate\",\n        value: function (e, n) {\n          switch (e) {\n            case t.X:\n              this.x = n;\n              break;\n            case t.Y:\n              this.y = n;\n              break;\n            case t.Z:\n              this.setZ(n);\n              break;\n            default:\n              throw new m(\"Invalid ordinate index: \" + e);\n          }\n        }\n      }, {\n        key: \"equals2D\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.x === t.x && this.y === t.y;\n          }\n          if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            return !!b.equalsWithTolerance(this.x, e.x, n) && !!b.equalsWithTolerance(this.y, e.y, n);\n          }\n        }\n      }, {\n        key: \"setM\",\n        value: function (e) {\n          throw new m(\"Invalid ordinate index: \" + t.M);\n        }\n      }, {\n        key: \"getZ\",\n        value: function () {\n          return this.z;\n        }\n      }, {\n        key: \"getOrdinate\",\n        value: function (e) {\n          switch (e) {\n            case t.X:\n              return this.x;\n            case t.Y:\n              return this.y;\n            case t.Z:\n              return this.getZ();\n          }\n          throw new m(\"Invalid ordinate index: \" + e);\n        }\n      }, {\n        key: \"equals3D\",\n        value: function (t) {\n          return this.x === t.x && this.y === t.y && (this.getZ() === t.getZ() || A.isNaN(this.getZ()) && A.isNaN(t.getZ()));\n        }\n      }, {\n        key: \"equals\",\n        value: function (e) {\n          return e instanceof t && this.equals2D(e);\n        }\n      }, {\n        key: \"equalInZ\",\n        value: function (t, e) {\n          return b.equalsWithTolerance(this.getZ(), t.getZ(), e);\n        }\n      }, {\n        key: \"setX\",\n        value: function (t) {\n          this.x = t;\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this.x < e.x ? -1 : this.x > e.x ? 1 : this.y < e.y ? -1 : this.y > e.y ? 1 : 0;\n        }\n      }, {\n        key: \"getX\",\n        value: function () {\n          return this.x;\n        }\n      }, {\n        key: \"setZ\",\n        value: function (t) {\n          this.z = t;\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          try {\n            return null;\n          } catch (t) {\n            if (t instanceof CloneNotSupportedException) return G.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\"), null;\n            throw t;\n          }\n        }\n      }, {\n        key: \"copy\",\n        value: function () {\n          return new t(this);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return \"(\" + this.x + \", \" + this.y + \", \" + this.getZ() + \")\";\n        }\n      }, {\n        key: \"distance3D\",\n        value: function (t) {\n          var e = this.x - t.x,\n            n = this.y - t.y,\n            i = this.getZ() - t.getZ();\n          return Math.sqrt(e * e + n * n + i * i);\n        }\n      }, {\n        key: \"getY\",\n        value: function () {\n          return this.y;\n        }\n      }, {\n        key: \"setY\",\n        value: function (t) {\n          this.y = t;\n        }\n      }, {\n        key: \"distance\",\n        value: function (t) {\n          var e = this.x - t.x,\n            n = this.y - t.y;\n          return Math.sqrt(e * e + n * n);\n        }\n      }, {\n        key: \"hashCode\",\n        value: function () {\n          var e = 17;\n          return e = 37 * (e = 37 * e + t.hashCode(this.x)) + t.hashCode(this.y);\n        }\n      }, {\n        key: \"setCoordinate\",\n        value: function (t) {\n          this.x = t.x, this.y = t.y, this.z = t.getZ();\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x, I, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.x = null, this.y = null, this.z = null, 0 === arguments.length) t.constructor_.call(this, 0, 0);else if (1 === arguments.length) {\n            var e = arguments[0];\n            t.constructor_.call(this, e.x, e.y, e.getZ());\n          } else if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1];\n            t.constructor_.call(this, n, i, t.NULL_ORDINATE);\n          } else if (3 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1],\n              a = arguments[2];\n            this.x = r, this.y = s, this.z = a;\n          }\n        }\n      }, {\n        key: \"hashCode\",\n        value: function (t) {\n          return Y[0] = t, z[0] ^ z[1];\n        }\n      }]);\n    }(),\n    B = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"compare\",\n        value: function (e, n) {\n          var i = t.compare(e.x, n.x);\n          if (0 !== i) return i;\n          var r = t.compare(e.y, n.y);\n          return 0 !== r ? r : this._dimensionsToTest <= 2 ? 0 : t.compare(e.getZ(), n.getZ());\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [P];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._dimensionsToTest = 2, 0 === arguments.length) t.constructor_.call(this, 2);else if (1 === arguments.length) {\n            var e = arguments[0];\n            if (2 !== e && 3 !== e) throw new m(\"only 2 or 3 dimensions may be specified\");\n            this._dimensionsToTest = e;\n          }\n        }\n      }, {\n        key: \"compare\",\n        value: function (t, e) {\n          return t < e ? -1 : t > e ? 1 : A.isNaN(t) ? A.isNaN(e) ? 0 : -1 : A.isNaN(e) ? 1 : 0;\n        }\n      }]);\n    }();\n  X.DimensionalComparator = B, X.NULL_ORDINATE = A.NaN, X.X = 0, X.Y = 1, X.Z = 2, X.M = 3;\n  var U = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getArea\",\n        value: function () {\n          return this.getWidth() * this.getHeight();\n        }\n      }, {\n        key: \"equals\",\n        value: function (e) {\n          if (!(e instanceof t)) return !1;\n          var n = e;\n          return this.isNull() ? n.isNull() : this._maxx === n.getMaxX() && this._maxy === n.getMaxY() && this._minx === n.getMinX() && this._miny === n.getMinY();\n        }\n      }, {\n        key: \"intersection\",\n        value: function (e) {\n          if (this.isNull() || e.isNull() || !this.intersects(e)) return new t();\n          var n = this._minx > e._minx ? this._minx : e._minx,\n            i = this._miny > e._miny ? this._miny : e._miny;\n          return new t(n, this._maxx < e._maxx ? this._maxx : e._maxx, i, this._maxy < e._maxy ? this._maxy : e._maxy);\n        }\n      }, {\n        key: \"isNull\",\n        value: function () {\n          return this._maxx < this._minx;\n        }\n      }, {\n        key: \"getMaxX\",\n        value: function () {\n          return this._maxx;\n        }\n      }, {\n        key: \"covers\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof X) {\n              var e = arguments[0];\n              return this.covers(e.x, e.y);\n            }\n            if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              return !this.isNull() && !n.isNull() && n.getMinX() >= this._minx && n.getMaxX() <= this._maxx && n.getMinY() >= this._miny && n.getMaxY() <= this._maxy;\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            return !this.isNull() && i >= this._minx && i <= this._maxx && r >= this._miny && r <= this._maxy;\n          }\n        }\n      }, {\n        key: \"intersects\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof t) {\n              var e = arguments[0];\n              return !this.isNull() && !e.isNull() && !(e._minx > this._maxx || e._maxx < this._minx || e._miny > this._maxy || e._maxy < this._miny);\n            }\n            if (arguments[0] instanceof X) {\n              var n = arguments[0];\n              return this.intersects(n.x, n.y);\n            }\n          } else if (2 === arguments.length) {\n            if (arguments[0] instanceof X && arguments[1] instanceof X) {\n              var i = arguments[0],\n                r = arguments[1];\n              return !this.isNull() && !((i.x < r.x ? i.x : r.x) > this._maxx) && !((i.x > r.x ? i.x : r.x) < this._minx) && !((i.y < r.y ? i.y : r.y) > this._maxy) && !((i.y > r.y ? i.y : r.y) < this._miny);\n            }\n            if (\"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n              var s = arguments[0],\n                a = arguments[1];\n              return !this.isNull() && !(s > this._maxx || s < this._minx || a > this._maxy || a < this._miny);\n            }\n          }\n        }\n      }, {\n        key: \"getMinY\",\n        value: function () {\n          return this._miny;\n        }\n      }, {\n        key: \"getDiameter\",\n        value: function () {\n          if (this.isNull()) return 0;\n          var t = this.getWidth(),\n            e = this.getHeight();\n          return Math.sqrt(t * t + e * e);\n        }\n      }, {\n        key: \"getMinX\",\n        value: function () {\n          return this._minx;\n        }\n      }, {\n        key: \"expandToInclude\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof X) {\n              var e = arguments[0];\n              this.expandToInclude(e.x, e.y);\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              if (n.isNull()) return null;\n              this.isNull() ? (this._minx = n.getMinX(), this._maxx = n.getMaxX(), this._miny = n.getMinY(), this._maxy = n.getMaxY()) : (n._minx < this._minx && (this._minx = n._minx), n._maxx > this._maxx && (this._maxx = n._maxx), n._miny < this._miny && (this._miny = n._miny), n._maxy > this._maxy && (this._maxy = n._maxy));\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this.isNull() ? (this._minx = i, this._maxx = i, this._miny = r, this._maxy = r) : (i < this._minx && (this._minx = i), i > this._maxx && (this._maxx = i), r < this._miny && (this._miny = r), r > this._maxy && (this._maxy = r));\n          }\n        }\n      }, {\n        key: \"minExtent\",\n        value: function () {\n          if (this.isNull()) return 0;\n          var t = this.getWidth(),\n            e = this.getHeight();\n          return t < e ? t : e;\n        }\n      }, {\n        key: \"getWidth\",\n        value: function () {\n          return this.isNull() ? 0 : this._maxx - this._minx;\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this.isNull() ? e.isNull() ? 0 : -1 : e.isNull() ? 1 : this._minx < e._minx ? -1 : this._minx > e._minx ? 1 : this._miny < e._miny ? -1 : this._miny > e._miny ? 1 : this._maxx < e._maxx ? -1 : this._maxx > e._maxx ? 1 : this._maxy < e._maxy ? -1 : this._maxy > e._maxy ? 1 : 0;\n        }\n      }, {\n        key: \"translate\",\n        value: function (t, e) {\n          if (this.isNull()) return null;\n          this.init(this.getMinX() + t, this.getMaxX() + t, this.getMinY() + e, this.getMaxY() + e);\n        }\n      }, {\n        key: \"copy\",\n        value: function () {\n          return new t(this);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n        }\n      }, {\n        key: \"setToNull\",\n        value: function () {\n          this._minx = 0, this._maxx = -1, this._miny = 0, this._maxy = -1;\n        }\n      }, {\n        key: \"disjoint\",\n        value: function (t) {\n          return !(!this.isNull() && !t.isNull()) || t._minx > this._maxx || t._maxx < this._minx || t._miny > this._maxy || t._maxy < this._miny;\n        }\n      }, {\n        key: \"getHeight\",\n        value: function () {\n          return this.isNull() ? 0 : this._maxy - this._miny;\n        }\n      }, {\n        key: \"maxExtent\",\n        value: function () {\n          if (this.isNull()) return 0;\n          var t = this.getWidth(),\n            e = this.getHeight();\n          return t > e ? t : e;\n        }\n      }, {\n        key: \"expandBy\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.expandBy(t, t);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            if (this.isNull()) return null;\n            this._minx -= e, this._maxx += e, this._miny -= n, this._maxy += n, (this._minx > this._maxx || this._miny > this._maxy) && this.setToNull();\n          }\n        }\n      }, {\n        key: \"contains\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof t) {\n              var e = arguments[0];\n              return this.covers(e);\n            }\n            if (arguments[0] instanceof X) {\n              var n = arguments[0];\n              return this.covers(n);\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            return this.covers(i, r);\n          }\n        }\n      }, {\n        key: \"centre\",\n        value: function () {\n          return this.isNull() ? null : new X((this.getMinX() + this.getMaxX()) / 2, (this.getMinY() + this.getMaxY()) / 2);\n        }\n      }, {\n        key: \"init\",\n        value: function () {\n          if (0 === arguments.length) this.setToNull();else if (1 === arguments.length) {\n            if (arguments[0] instanceof X) {\n              var e = arguments[0];\n              this.init(e.x, e.x, e.y, e.y);\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              this._minx = n._minx, this._maxx = n._maxx, this._miny = n._miny, this._maxy = n._maxy;\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this.init(i.x, r.x, i.y, r.y);\n          } else if (4 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2],\n              u = arguments[3];\n            s < a ? (this._minx = s, this._maxx = a) : (this._minx = a, this._maxx = s), o < u ? (this._miny = o, this._maxy = u) : (this._miny = u, this._maxy = o);\n          }\n        }\n      }, {\n        key: \"getMaxY\",\n        value: function () {\n          return this._maxy;\n        }\n      }, {\n        key: \"distance\",\n        value: function (t) {\n          if (this.intersects(t)) return 0;\n          var e = 0;\n          this._maxx < t._minx ? e = t._minx - this._maxx : this._minx > t._maxx && (e = this._minx - t._maxx);\n          var n = 0;\n          return this._maxy < t._miny ? n = t._miny - this._maxy : this._miny > t._maxy && (n = this._miny - t._maxy), 0 === e ? n : 0 === n ? e : Math.sqrt(e * e + n * n);\n        }\n      }, {\n        key: \"hashCode\",\n        value: function () {\n          var t = 17;\n          return t = 37 * (t = 37 * (t = 37 * (t = 37 * t + X.hashCode(this._minx)) + X.hashCode(this._maxx)) + X.hashCode(this._miny)) + X.hashCode(this._maxy);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._minx = null, this._maxx = null, this._miny = null, this._maxy = null, 0 === arguments.length) this.init();else if (1 === arguments.length) {\n            if (arguments[0] instanceof X) {\n              var e = arguments[0];\n              this.init(e.x, e.x, e.y, e.y);\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              this.init(n);\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this.init(i.x, r.x, i.y, r.y);\n          } else if (4 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2],\n              u = arguments[3];\n            this.init(s, a, o, u);\n          }\n        }\n      }, {\n        key: \"intersects\",\n        value: function () {\n          if (3 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1],\n              n = arguments[2];\n            return n.x >= (t.x < e.x ? t.x : e.x) && n.x <= (t.x > e.x ? t.x : e.x) && n.y >= (t.y < e.y ? t.y : e.y) && n.y <= (t.y > e.y ? t.y : e.y);\n          }\n          if (4 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1],\n              s = arguments[2],\n              a = arguments[3],\n              o = Math.min(s.x, a.x),\n              u = Math.max(s.x, a.x),\n              l = Math.min(i.x, r.x),\n              h = Math.max(i.x, r.x);\n            return !(l > u) && !(h < o) && (o = Math.min(s.y, a.y), u = Math.max(s.y, a.y), l = Math.min(i.y, r.y), h = Math.max(i.y, r.y), !(l > u) && !(h < o));\n          }\n        }\n      }]);\n    }(),\n    V = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"isGeometryCollection\",\n        value: function () {\n          return this.getTypeCode() === t.TYPECODE_GEOMETRYCOLLECTION;\n        }\n      }, {\n        key: \"getFactory\",\n        value: function () {\n          return this._factory;\n        }\n      }, {\n        key: \"getGeometryN\",\n        value: function (t) {\n          return this;\n        }\n      }, {\n        key: \"getArea\",\n        value: function () {\n          return 0;\n        }\n      }, {\n        key: \"isRectangle\",\n        value: function () {\n          return !1;\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function (t) {\n          return this === t || this.equalsExact(t, 0);\n        }\n      }, {\n        key: \"geometryChanged\",\n        value: function () {\n          this.apply(t.geometryChangedFilter);\n        }\n      }, {\n        key: \"geometryChangedAction\",\n        value: function () {\n          this._envelope = null;\n        }\n      }, {\n        key: \"equalsNorm\",\n        value: function (t) {\n          return null !== t && this.norm().equalsExact(t.norm());\n        }\n      }, {\n        key: \"getLength\",\n        value: function () {\n          return 0;\n        }\n      }, {\n        key: \"getNumGeometries\",\n        value: function () {\n          return 1;\n        }\n      }, {\n        key: \"compareTo\",\n        value: function () {\n          var t;\n          if (1 === arguments.length) {\n            var e = arguments[0];\n            return t = e, this.getTypeCode() !== t.getTypeCode() ? this.getTypeCode() - t.getTypeCode() : this.isEmpty() && t.isEmpty() ? 0 : this.isEmpty() ? -1 : t.isEmpty() ? 1 : this.compareToSameClass(e);\n          }\n          if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1];\n            return t = n, this.getTypeCode() !== t.getTypeCode() ? this.getTypeCode() - t.getTypeCode() : this.isEmpty() && t.isEmpty() ? 0 : this.isEmpty() ? -1 : t.isEmpty() ? 1 : this.compareToSameClass(n, i);\n          }\n        }\n      }, {\n        key: \"getUserData\",\n        value: function () {\n          return this._userData;\n        }\n      }, {\n        key: \"getSRID\",\n        value: function () {\n          return this._SRID;\n        }\n      }, {\n        key: \"getEnvelope\",\n        value: function () {\n          return this.getFactory().toGeometry(this.getEnvelopeInternal());\n        }\n      }, {\n        key: \"checkNotGeometryCollection\",\n        value: function (e) {\n          if (e.getTypeCode() === t.TYPECODE_GEOMETRYCOLLECTION) throw new m(\"This method does not support GeometryCollection arguments\");\n        }\n      }, {\n        key: \"equal\",\n        value: function (t, e, n) {\n          return 0 === n ? t.equals(e) : t.distance(e) <= n;\n        }\n      }, {\n        key: \"norm\",\n        value: function () {\n          var t = this.copy();\n          return t.normalize(), t;\n        }\n      }, {\n        key: \"reverse\",\n        value: function () {\n          var t = this.reverseInternal();\n          return null != this.envelope && (t.envelope = this.envelope.copy()), t.setSRID(this.getSRID()), t;\n        }\n      }, {\n        key: \"copy\",\n        value: function () {\n          var t = this.copyInternal();\n          return t.envelope = null == this._envelope ? null : this._envelope.copy(), t._SRID = this._SRID, t._userData = this._userData, t;\n        }\n      }, {\n        key: \"getPrecisionModel\",\n        value: function () {\n          return this._factory.getPrecisionModel();\n        }\n      }, {\n        key: \"getEnvelopeInternal\",\n        value: function () {\n          return null === this._envelope && (this._envelope = this.computeEnvelopeInternal()), new U(this._envelope);\n        }\n      }, {\n        key: \"setSRID\",\n        value: function (t) {\n          this._SRID = t;\n        }\n      }, {\n        key: \"setUserData\",\n        value: function (t) {\n          this._userData = t;\n        }\n      }, {\n        key: \"compare\",\n        value: function (t, e) {\n          for (var n = t.iterator(), i = e.iterator(); n.hasNext() && i.hasNext();) {\n            var r = n.next(),\n              s = i.next(),\n              a = r.compareTo(s);\n            if (0 !== a) return a;\n          }\n          return n.hasNext() ? 1 : i.hasNext() ? -1 : 0;\n        }\n      }, {\n        key: \"hashCode\",\n        value: function () {\n          return this.getEnvelopeInternal().hashCode();\n        }\n      }, {\n        key: \"isEquivalentClass\",\n        value: function (t) {\n          return this.getClass() === t.getClass();\n        }\n      }, {\n        key: \"isGeometryCollectionOrDerived\",\n        value: function () {\n          return this.getTypeCode() === t.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === t.TYPECODE_MULTIPOINT || this.getTypeCode() === t.TYPECODE_MULTILINESTRING || this.getTypeCode() === t.TYPECODE_MULTIPOLYGON;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [I, x, E];\n        }\n      }, {\n        key: \"getClass\",\n        value: function () {\n          return t;\n        }\n      }], [{\n        key: \"hasNonEmptyElements\",\n        value: function (t) {\n          for (var e = 0; e < t.length; e++) if (!t[e].isEmpty()) return !0;\n          return !1;\n        }\n      }, {\n        key: \"hasNullElements\",\n        value: function (t) {\n          for (var e = 0; e < t.length; e++) if (null === t[e]) return !0;\n          return !1;\n        }\n      }]);\n    }();\n  V.constructor_ = function (t) {\n    t && (this._envelope = null, this._userData = null, this._factory = t, this._SRID = t.getSRID());\n  }, V.TYPECODE_POINT = 0, V.TYPECODE_MULTIPOINT = 1, V.TYPECODE_LINESTRING = 2, V.TYPECODE_LINEARRING = 3, V.TYPECODE_MULTILINESTRING = 4, V.TYPECODE_POLYGON = 5, V.TYPECODE_MULTIPOLYGON = 6, V.TYPECODE_GEOMETRYCOLLECTION = 7, V.TYPENAME_POINT = \"Point\", V.TYPENAME_MULTIPOINT = \"MultiPoint\", V.TYPENAME_LINESTRING = \"LineString\", V.TYPENAME_LINEARRING = \"LinearRing\", V.TYPENAME_MULTILINESTRING = \"MultiLineString\", V.TYPENAME_POLYGON = \"Polygon\", V.TYPENAME_MULTIPOLYGON = \"MultiPolygon\", V.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\", V.geometryChangedFilter = {\n    get interfaces_() {\n      return [k];\n    },\n    filter: function (t) {\n      t.geometryChangedAction();\n    }\n  };\n  var H = function () {\n    function t() {\n      n(this, t);\n    }\n    return s(t, null, [{\n      key: \"toLocationSymbol\",\n      value: function (e) {\n        switch (e) {\n          case t.EXTERIOR:\n            return \"e\";\n          case t.BOUNDARY:\n            return \"b\";\n          case t.INTERIOR:\n            return \"i\";\n          case t.NONE:\n            return \"-\";\n        }\n        throw new m(\"Unknown location value: \" + e);\n      }\n    }]);\n  }();\n  H.INTERIOR = 0, H.BOUNDARY = 1, H.EXTERIOR = 2, H.NONE = -1;\n  var Z = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"add\",\n        value: function () {}\n      }, {\n        key: \"addAll\",\n        value: function () {}\n      }, {\n        key: \"isEmpty\",\n        value: function () {}\n      }, {\n        key: \"iterator\",\n        value: function () {}\n      }, {\n        key: \"size\",\n        value: function () {}\n      }, {\n        key: \"toArray\",\n        value: function () {}\n      }, {\n        key: \"remove\",\n        value: function () {}\n      }]);\n    }(),\n    j = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          NoSuchElementException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    W = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          UnsupportedOperationException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    K = function (t) {\n      function i() {\n        return n(this, i), e(this, i, arguments);\n      }\n      return l(i, t), s(i, [{\n        key: \"contains\",\n        value: function () {}\n      }]);\n    }(Z),\n    J = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i)).map = new Map(), t instanceof Z && r.addAll(t), r;\n      }\n      return l(i, t), s(i, [{\n        key: \"contains\",\n        value: function (t) {\n          var e = t.hashCode ? t.hashCode() : t;\n          return !!this.map.has(e);\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          var e = t.hashCode ? t.hashCode() : t;\n          return !this.map.has(e) && !!this.map.set(e, t);\n        }\n      }, {\n        key: \"addAll\",\n        value: function (t) {\n          var e,\n            n = a(t);\n          try {\n            for (n.s(); !(e = n.n()).done;) {\n              var i = e.value;\n              this.add(i);\n            }\n          } catch (t) {\n            n.e(t);\n          } finally {\n            n.f();\n          }\n          return !0;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          throw new W();\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.map.size;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this.map.size;\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          return Array.from(this.map.values());\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return new Q(this.map);\n        }\n      }, {\n        key: Symbol.iterator,\n        value: function () {\n          return this.map;\n        }\n      }]);\n    }(K),\n    Q = function () {\n      return s(function t(e) {\n        n(this, t), this.iterator = e.values();\n        var i = this.iterator.next(),\n          r = i.done,\n          s = i.value;\n        this.done = r, this.value = s;\n      }, [{\n        key: \"next\",\n        value: function () {\n          if (this.done) throw new j();\n          var t = this.value,\n            e = this.iterator.next(),\n            n = e.done,\n            i = e.value;\n          return this.done = n, this.value = i, t;\n        }\n      }, {\n        key: \"hasNext\",\n        value: function () {\n          return !this.done;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          throw new W();\n        }\n      }]);\n    }(),\n    $ = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"opposite\",\n        value: function (e) {\n          return e === t.LEFT ? t.RIGHT : e === t.RIGHT ? t.LEFT : e;\n        }\n      }]);\n    }();\n  $.ON = 0, $.LEFT = 1, $.RIGHT = 2;\n  var tt = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          EmptyStackException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    et = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i, [t])).name = Object.keys({\n          IndexOutOfBoundsException: i\n        })[0], r;\n      }\n      return l(i, t), s(i);\n    }(p),\n    nt = function (t) {\n      function i() {\n        return n(this, i), e(this, i, arguments);\n      }\n      return l(i, t), s(i, [{\n        key: \"get\",\n        value: function () {}\n      }, {\n        key: \"set\",\n        value: function () {}\n      }, {\n        key: \"isEmpty\",\n        value: function () {}\n      }]);\n    }(Z),\n    it = function (t) {\n      function i() {\n        var t;\n        return n(this, i), (t = e(this, i)).array = [], t;\n      }\n      return l(i, t), s(i, [{\n        key: \"add\",\n        value: function (t) {\n          return this.array.push(t), !0;\n        }\n      }, {\n        key: \"get\",\n        value: function (t) {\n          if (t < 0 || t >= this.size()) throw new et();\n          return this.array[t];\n        }\n      }, {\n        key: \"push\",\n        value: function (t) {\n          return this.array.push(t), t;\n        }\n      }, {\n        key: \"pop\",\n        value: function () {\n          if (0 === this.array.length) throw new tt();\n          return this.array.pop();\n        }\n      }, {\n        key: \"peek\",\n        value: function () {\n          if (0 === this.array.length) throw new tt();\n          return this.array[this.array.length - 1];\n        }\n      }, {\n        key: \"empty\",\n        value: function () {\n          return 0 === this.array.length;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return this.empty();\n        }\n      }, {\n        key: \"search\",\n        value: function (t) {\n          return this.array.indexOf(t);\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.array.length;\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          return this.array.slice();\n        }\n      }]);\n    }(nt);\n  function rt(t, e) {\n    return t.interfaces_ && t.interfaces_.indexOf(e) > -1;\n  }\n  var st = function () {\n      return s(function t(e) {\n        n(this, t), this.str = e;\n      }, [{\n        key: \"append\",\n        value: function (t) {\n          this.str += t;\n        }\n      }, {\n        key: \"setCharAt\",\n        value: function (t, e) {\n          this.str = this.str.substr(0, t) + e + this.str.substr(t + 1);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this.str;\n        }\n      }]);\n    }(),\n    at = function () {\n      function t(e) {\n        n(this, t), this.value = e;\n      }\n      return s(t, [{\n        key: \"intValue\",\n        value: function () {\n          return this.value;\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          return this.value < t ? -1 : this.value > t ? 1 : 0;\n        }\n      }], [{\n        key: \"compare\",\n        value: function (t, e) {\n          return t < e ? -1 : t > e ? 1 : 0;\n        }\n      }, {\n        key: \"isNan\",\n        value: function (t) {\n          return Number.isNaN(t);\n        }\n      }, {\n        key: \"valueOf\",\n        value: function (e) {\n          return new t(e);\n        }\n      }]);\n    }(),\n    ot = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"isWhitespace\",\n        value: function (t) {\n          return t <= 32 && t >= 0 || 127 === t;\n        }\n      }, {\n        key: \"toUpperCase\",\n        value: function (t) {\n          return t.toUpperCase();\n        }\n      }]);\n    }(),\n    ut = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"le\",\n        value: function (t) {\n          return this._hi < t._hi || this._hi === t._hi && this._lo <= t._lo;\n        }\n      }, {\n        key: \"extractSignificantDigits\",\n        value: function (e, n) {\n          var i = this.abs(),\n            r = t.magnitude(i._hi),\n            s = t.TEN.pow(r);\n          (i = i.divide(s)).gt(t.TEN) ? (i = i.divide(t.TEN), r += 1) : i.lt(t.ONE) && (i = i.multiply(t.TEN), r -= 1);\n          for (var a = r + 1, o = new st(), u = t.MAX_PRINT_DIGITS - 1, l = 0; l <= u; l++) {\n            e && l === a && o.append(\".\");\n            var h = Math.trunc(i._hi);\n            if (h < 0) break;\n            var c = !1,\n              f = 0;\n            h > 9 ? (c = !0, f = \"9\") : f = \"0\" + h, o.append(f), i = i.subtract(t.valueOf(h)).multiply(t.TEN), c && i.selfAdd(t.TEN);\n            var g = !0,\n              v = t.magnitude(i._hi);\n            if (v < 0 && Math.abs(v) >= u - l && (g = !1), !g) break;\n          }\n          return n[0] = r, o.toString();\n        }\n      }, {\n        key: \"sqr\",\n        value: function () {\n          return this.multiply(this);\n        }\n      }, {\n        key: \"doubleValue\",\n        value: function () {\n          return this._hi + this._lo;\n        }\n      }, {\n        key: \"subtract\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return this.add(e.negate());\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            return this.add(-n);\n          }\n        }\n      }, {\n        key: \"equals\",\n        value: function () {\n          if (1 === arguments.length && arguments[0] instanceof t) {\n            var e = arguments[0];\n            return this._hi === e._hi && this._lo === e._lo;\n          }\n        }\n      }, {\n        key: \"isZero\",\n        value: function () {\n          return 0 === this._hi && 0 === this._lo;\n        }\n      }, {\n        key: \"selfSubtract\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return this.isNaN() ? this : this.selfAdd(-e._hi, -e._lo);\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            return this.isNaN() ? this : this.selfAdd(-n, 0);\n          }\n        }\n      }, {\n        key: \"getSpecialNumberString\",\n        value: function () {\n          return this.isZero() ? \"0.0\" : this.isNaN() ? \"NaN \" : null;\n        }\n      }, {\n        key: \"min\",\n        value: function (t) {\n          return this.le(t) ? this : t;\n        }\n      }, {\n        key: \"selfDivide\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof t) {\n              var e = arguments[0];\n              return this.selfDivide(e._hi, e._lo);\n            }\n            if (\"number\" == typeof arguments[0]) {\n              var n = arguments[0];\n              return this.selfDivide(n, 0);\n            }\n          } else if (2 === arguments.length) {\n            var i,\n              r,\n              s,\n              a,\n              o = arguments[0],\n              u = arguments[1],\n              l = null,\n              h = null,\n              c = null,\n              f = null;\n            return s = this._hi / o, f = (l = (c = t.SPLIT * s) - (l = c - s)) * (h = (f = t.SPLIT * o) - (h = f - o)) - (a = s * o) + l * (r = o - h) + (i = s - l) * h + i * r, f = s + (c = (this._hi - a - f + this._lo - s * u) / o), this._hi = f, this._lo = s - f + c, this;\n          }\n        }\n      }, {\n        key: \"dump\",\n        value: function () {\n          return \"DD<\" + this._hi + \", \" + this._lo + \">\";\n        }\n      }, {\n        key: \"divide\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e,\n              n,\n              i,\n              r,\n              s = arguments[0],\n              a = null,\n              o = null,\n              u = null,\n              l = null;\n            return e = (i = this._hi / s._hi) - (a = (u = t.SPLIT * i) - (a = u - i)), l = a * (o = (l = t.SPLIT * s._hi) - (o = l - s._hi)) - (r = i * s._hi) + a * (n = s._hi - o) + e * o + e * n, new t(l = i + (u = (this._hi - r - l + this._lo - i * s._lo) / s._hi), i - l + u);\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var h = arguments[0];\n            return A.isNaN(h) ? t.createNaN() : t.copy(this).selfDivide(h, 0);\n          }\n        }\n      }, {\n        key: \"ge\",\n        value: function (t) {\n          return this._hi > t._hi || this._hi === t._hi && this._lo >= t._lo;\n        }\n      }, {\n        key: \"pow\",\n        value: function (e) {\n          if (0 === e) return t.valueOf(1);\n          var n = new t(this),\n            i = t.valueOf(1),\n            r = Math.abs(e);\n          if (r > 1) for (; r > 0;) r % 2 == 1 && i.selfMultiply(n), (r /= 2) > 0 && (n = n.sqr());else i = n;\n          return e < 0 ? i.reciprocal() : i;\n        }\n      }, {\n        key: \"ceil\",\n        value: function () {\n          if (this.isNaN()) return t.NaN;\n          var e = Math.ceil(this._hi),\n            n = 0;\n          return e === this._hi && (n = Math.ceil(this._lo)), new t(e, n);\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this._hi < e._hi ? -1 : this._hi > e._hi ? 1 : this._lo < e._lo ? -1 : this._lo > e._lo ? 1 : 0;\n        }\n      }, {\n        key: \"rint\",\n        value: function () {\n          return this.isNaN() ? this : this.add(.5).floor();\n        }\n      }, {\n        key: \"setValue\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return this.init(e), this;\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            return this.init(n), this;\n          }\n        }\n      }, {\n        key: \"max\",\n        value: function (t) {\n          return this.ge(t) ? this : t;\n        }\n      }, {\n        key: \"sqrt\",\n        value: function () {\n          if (this.isZero()) return t.valueOf(0);\n          if (this.isNegative()) return t.NaN;\n          var e = 1 / Math.sqrt(this._hi),\n            n = this._hi * e,\n            i = t.valueOf(n),\n            r = this.subtract(i.sqr())._hi * (.5 * e);\n          return i.add(r);\n        }\n      }, {\n        key: \"selfAdd\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof t) {\n              var e = arguments[0];\n              return this.selfAdd(e._hi, e._lo);\n            }\n            if (\"number\" == typeof arguments[0]) {\n              var n,\n                i,\n                r,\n                s,\n                a,\n                o = arguments[0],\n                u = null;\n              return u = (r = this._hi + o) - (s = r - this._hi), i = (a = (u = o - s + (this._hi - u)) + this._lo) + (r - (n = r + a)), this._hi = n + i, this._lo = i + (n - this._hi), this;\n            }\n          } else if (2 === arguments.length) {\n            var l,\n              h,\n              c,\n              f,\n              g = arguments[0],\n              v = arguments[1],\n              y = null,\n              d = null,\n              _ = null;\n            c = this._hi + g, h = this._lo + v, d = c - (_ = c - this._hi), y = h - (f = h - this._lo);\n            var p = (l = c + (_ = (d = g - _ + (this._hi - d)) + h)) + (_ = (y = v - f + (this._lo - y)) + (_ + (c - l))),\n              m = _ + (l - p);\n            return this._hi = p, this._lo = m, this;\n          }\n        }\n      }, {\n        key: \"selfMultiply\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof t) {\n              var e = arguments[0];\n              return this.selfMultiply(e._hi, e._lo);\n            }\n            if (\"number\" == typeof arguments[0]) {\n              var n = arguments[0];\n              return this.selfMultiply(n, 0);\n            }\n          } else if (2 === arguments.length) {\n            var i,\n              r,\n              s = arguments[0],\n              a = arguments[1],\n              o = null,\n              u = null,\n              l = null,\n              h = null;\n            o = (l = t.SPLIT * this._hi) - this._hi, h = t.SPLIT * s, o = l - o, i = this._hi - o, u = h - s;\n            var c = (l = this._hi * s) + (h = o * (u = h - u) - l + o * (r = s - u) + i * u + i * r + (this._hi * a + this._lo * s)),\n              f = h + (o = l - c);\n            return this._hi = c, this._lo = f, this;\n          }\n        }\n      }, {\n        key: \"selfSqr\",\n        value: function () {\n          return this.selfMultiply(this);\n        }\n      }, {\n        key: \"floor\",\n        value: function () {\n          if (this.isNaN()) return t.NaN;\n          var e = Math.floor(this._hi),\n            n = 0;\n          return e === this._hi && (n = Math.floor(this._lo)), new t(e, n);\n        }\n      }, {\n        key: \"negate\",\n        value: function () {\n          return this.isNaN() ? this : new t(-this._hi, -this._lo);\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          try {\n            return null;\n          } catch (t) {\n            if (t instanceof CloneNotSupportedException) return null;\n            throw t;\n          }\n        }\n      }, {\n        key: \"multiply\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return e.isNaN() ? t.createNaN() : t.copy(this).selfMultiply(e);\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            return A.isNaN(n) ? t.createNaN() : t.copy(this).selfMultiply(n, 0);\n          }\n        }\n      }, {\n        key: \"isNaN\",\n        value: function () {\n          return A.isNaN(this._hi);\n        }\n      }, {\n        key: \"intValue\",\n        value: function () {\n          return Math.trunc(this._hi);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var e = t.magnitude(this._hi);\n          return e >= -3 && e <= 20 ? this.toStandardNotation() : this.toSciNotation();\n        }\n      }, {\n        key: \"toStandardNotation\",\n        value: function () {\n          var e = this.getSpecialNumberString();\n          if (null !== e) return e;\n          var n = new Array(1).fill(null),\n            i = this.extractSignificantDigits(!0, n),\n            r = n[0] + 1,\n            s = i;\n          if (\".\" === i.charAt(0)) s = \"0\" + i;else if (r < 0) s = \"0.\" + t.stringOfChar(\"0\", -r) + i;else if (-1 === i.indexOf(\".\")) {\n            var a = r - i.length;\n            s = i + t.stringOfChar(\"0\", a) + \".0\";\n          }\n          return this.isNegative() ? \"-\" + s : s;\n        }\n      }, {\n        key: \"reciprocal\",\n        value: function () {\n          var e,\n            n,\n            i,\n            r,\n            s = null,\n            a = null,\n            o = null,\n            u = null;\n          e = (i = 1 / this._hi) - (s = (o = t.SPLIT * i) - (s = o - i)), a = (u = t.SPLIT * this._hi) - this._hi;\n          var l = i + (o = (1 - (r = i * this._hi) - (u = s * (a = u - a) - r + s * (n = this._hi - a) + e * a + e * n) - i * this._lo) / this._hi);\n          return new t(l, i - l + o);\n        }\n      }, {\n        key: \"toSciNotation\",\n        value: function () {\n          if (this.isZero()) return t.SCI_NOT_ZERO;\n          var e = this.getSpecialNumberString();\n          if (null !== e) return e;\n          var n = new Array(1).fill(null),\n            i = this.extractSignificantDigits(!1, n),\n            r = t.SCI_NOT_EXPONENT_CHAR + n[0];\n          if (\"0\" === i.charAt(0)) throw new IllegalStateException(\"Found leading zero: \" + i);\n          var s = \"\";\n          i.length > 1 && (s = i.substring(1));\n          var a = i.charAt(0) + \".\" + s;\n          return this.isNegative() ? \"-\" + a + r : a + r;\n        }\n      }, {\n        key: \"abs\",\n        value: function () {\n          return this.isNaN() ? t.NaN : this.isNegative() ? this.negate() : new t(this);\n        }\n      }, {\n        key: \"isPositive\",\n        value: function () {\n          return this._hi > 0 || 0 === this._hi && this._lo > 0;\n        }\n      }, {\n        key: \"lt\",\n        value: function (t) {\n          return this._hi < t._hi || this._hi === t._hi && this._lo < t._lo;\n        }\n      }, {\n        key: \"add\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return t.copy(this).selfAdd(e);\n          }\n          if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            return t.copy(this).selfAdd(n);\n          }\n        }\n      }, {\n        key: \"init\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (\"number\" == typeof arguments[0]) {\n              var e = arguments[0];\n              this._hi = e, this._lo = 0;\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              this._hi = n._hi, this._lo = n._lo;\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this._hi = i, this._lo = r;\n          }\n        }\n      }, {\n        key: \"gt\",\n        value: function (t) {\n          return this._hi > t._hi || this._hi === t._hi && this._lo > t._lo;\n        }\n      }, {\n        key: \"isNegative\",\n        value: function () {\n          return this._hi < 0 || 0 === this._hi && this._lo < 0;\n        }\n      }, {\n        key: \"trunc\",\n        value: function () {\n          return this.isNaN() ? t.NaN : this.isPositive() ? this.floor() : this.ceil();\n        }\n      }, {\n        key: \"signum\",\n        value: function () {\n          return this._hi > 0 ? 1 : this._hi < 0 ? -1 : this._lo > 0 ? 1 : this._lo < 0 ? -1 : 0;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [E, x, I];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._hi = 0, this._lo = 0, 0 === arguments.length) this.init(0);else if (1 === arguments.length) {\n            if (\"number\" == typeof arguments[0]) {\n              var e = arguments[0];\n              this.init(e);\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              this.init(n);\n            } else if (\"string\" == typeof arguments[0]) {\n              var i = arguments[0];\n              t.constructor_.call(this, t.parse(i));\n            }\n          } else if (2 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1];\n            this.init(r, s);\n          }\n        }\n      }, {\n        key: \"determinant\",\n        value: function () {\n          if (\"number\" == typeof arguments[3] && \"number\" == typeof arguments[2] && \"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n            var e = arguments[0],\n              n = arguments[1],\n              i = arguments[2],\n              r = arguments[3];\n            return t.determinant(t.valueOf(e), t.valueOf(n), t.valueOf(i), t.valueOf(r));\n          }\n          if (arguments[3] instanceof t && arguments[2] instanceof t && arguments[0] instanceof t && arguments[1] instanceof t) {\n            var s = arguments[1],\n              a = arguments[2],\n              o = arguments[3];\n            return arguments[0].multiply(o).selfSubtract(s.multiply(a));\n          }\n        }\n      }, {\n        key: \"sqr\",\n        value: function (e) {\n          return t.valueOf(e).selfMultiply(e);\n        }\n      }, {\n        key: \"valueOf\",\n        value: function () {\n          if (\"string\" == typeof arguments[0]) {\n            var e = arguments[0];\n            return t.parse(e);\n          }\n          if (\"number\" == typeof arguments[0]) return new t(arguments[0]);\n        }\n      }, {\n        key: \"sqrt\",\n        value: function (e) {\n          return t.valueOf(e).sqrt();\n        }\n      }, {\n        key: \"parse\",\n        value: function (e) {\n          for (var n = 0, i = e.length; ot.isWhitespace(e.charAt(n));) n++;\n          var r = !1;\n          if (n < i) {\n            var s = e.charAt(n);\n            \"-\" !== s && \"+\" !== s || (n++, \"-\" === s && (r = !0));\n          }\n          for (var a = new t(), o = 0, u = 0, l = 0, h = !1; !(n >= i);) {\n            var c = e.charAt(n);\n            if (n++, ot.isDigit(c)) {\n              var f = c - \"0\";\n              a.selfMultiply(t.TEN), a.selfAdd(f), o++;\n            } else {\n              if (\".\" !== c) {\n                if (\"e\" === c || \"E\" === c) {\n                  var g = e.substring(n);\n                  try {\n                    l = at.parseInt(g);\n                  } catch (t) {\n                    throw t instanceof NumberFormatException ? new NumberFormatException(\"Invalid exponent \" + g + \" in string \" + e) : t;\n                  }\n                  break;\n                }\n                throw new NumberFormatException(\"Unexpected character '\" + c + \"' at position \" + n + \" in string \" + e);\n              }\n              u = o, h = !0;\n            }\n          }\n          var v = a;\n          h || (u = o);\n          var y = o - u - l;\n          if (0 === y) v = a;else if (y > 0) {\n            var d = t.TEN.pow(y);\n            v = a.divide(d);\n          } else if (y < 0) {\n            var _ = t.TEN.pow(-y);\n            v = a.multiply(_);\n          }\n          return r ? v.negate() : v;\n        }\n      }, {\n        key: \"createNaN\",\n        value: function () {\n          return new t(A.NaN, A.NaN);\n        }\n      }, {\n        key: \"copy\",\n        value: function (e) {\n          return new t(e);\n        }\n      }, {\n        key: \"magnitude\",\n        value: function (t) {\n          var e = Math.abs(t),\n            n = Math.log(e) / Math.log(10),\n            i = Math.trunc(Math.floor(n));\n          return 10 * Math.pow(10, i) <= e && (i += 1), i;\n        }\n      }, {\n        key: \"stringOfChar\",\n        value: function (t, e) {\n          for (var n = new st(), i = 0; i < e; i++) n.append(t);\n          return n.toString();\n        }\n      }]);\n    }();\n  ut.PI = new ut(3.141592653589793, 12246467991473532e-32), ut.TWO_PI = new ut(6.283185307179586, 24492935982947064e-32), ut.PI_2 = new ut(1.5707963267948966, 6123233995736766e-32), ut.E = new ut(2.718281828459045, 14456468917292502e-32), ut.NaN = new ut(A.NaN, A.NaN), ut.EPS = 123259516440783e-46, ut.SPLIT = 134217729, ut.MAX_PRINT_DIGITS = 32, ut.TEN = ut.valueOf(10), ut.ONE = ut.valueOf(1), ut.SCI_NOT_EXPONENT_CHAR = \"E\", ut.SCI_NOT_ZERO = \"0.0E0\";\n  var lt = function () {\n    function t() {\n      n(this, t);\n    }\n    return s(t, null, [{\n      key: \"orientationIndex\",\n      value: function (e, n, i) {\n        var r = t.orientationIndexFilter(e, n, i);\n        if (r <= 1) return r;\n        var s = ut.valueOf(n.x).selfAdd(-e.x),\n          a = ut.valueOf(n.y).selfAdd(-e.y),\n          o = ut.valueOf(i.x).selfAdd(-n.x),\n          u = ut.valueOf(i.y).selfAdd(-n.y);\n        return s.selfMultiply(u).selfSubtract(a.selfMultiply(o)).signum();\n      }\n    }, {\n      key: \"signOfDet2x2\",\n      value: function () {\n        if (arguments[3] instanceof ut && arguments[2] instanceof ut && arguments[0] instanceof ut && arguments[1] instanceof ut) {\n          var t = arguments[1],\n            e = arguments[2],\n            n = arguments[3];\n          return arguments[0].multiply(n).selfSubtract(t.multiply(e)).signum();\n        }\n        if (\"number\" == typeof arguments[3] && \"number\" == typeof arguments[2] && \"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n          var i = arguments[0],\n            r = arguments[1],\n            s = arguments[2],\n            a = arguments[3],\n            o = ut.valueOf(i),\n            u = ut.valueOf(r),\n            l = ut.valueOf(s),\n            h = ut.valueOf(a);\n          return o.multiply(h).selfSubtract(u.multiply(l)).signum();\n        }\n      }\n    }, {\n      key: \"intersection\",\n      value: function (t, e, n, i) {\n        var r = new ut(t.y).selfSubtract(e.y),\n          s = new ut(e.x).selfSubtract(t.x),\n          a = new ut(t.x).selfMultiply(e.y).selfSubtract(new ut(e.x).selfMultiply(t.y)),\n          o = new ut(n.y).selfSubtract(i.y),\n          u = new ut(i.x).selfSubtract(n.x),\n          l = new ut(n.x).selfMultiply(i.y).selfSubtract(new ut(i.x).selfMultiply(n.y)),\n          h = s.multiply(l).selfSubtract(u.multiply(a)),\n          c = o.multiply(a).selfSubtract(r.multiply(l)),\n          f = r.multiply(u).selfSubtract(o.multiply(s)),\n          g = h.selfDivide(f).doubleValue(),\n          v = c.selfDivide(f).doubleValue();\n        return A.isNaN(g) || A.isInfinite(g) || A.isNaN(v) || A.isInfinite(v) ? null : new X(g, v);\n      }\n    }, {\n      key: \"orientationIndexFilter\",\n      value: function (e, n, i) {\n        var r = null,\n          s = (e.x - i.x) * (n.y - i.y),\n          a = (e.y - i.y) * (n.x - i.x),\n          o = s - a;\n        if (s > 0) {\n          if (a <= 0) return t.signum(o);\n          r = s + a;\n        } else {\n          if (!(s < 0)) return t.signum(o);\n          if (a >= 0) return t.signum(o);\n          r = -s - a;\n        }\n        var u = t.DP_SAFE_EPSILON * r;\n        return o >= u || -o >= u ? t.signum(o) : 2;\n      }\n    }, {\n      key: \"signum\",\n      value: function (t) {\n        return t > 0 ? 1 : t < 0 ? -1 : 0;\n      }\n    }]);\n  }();\n  lt.DP_SAFE_EPSILON = 1e-15;\n  var ht = function () {\n    return s(function t() {\n      n(this, t);\n    }, [{\n      key: \"getM\",\n      value: function (t) {\n        if (this.hasM()) {\n          var e = this.getDimension() - this.getMeasures();\n          return this.getOrdinate(t, e);\n        }\n        return A.NaN;\n      }\n    }, {\n      key: \"setOrdinate\",\n      value: function (t, e, n) {}\n    }, {\n      key: \"getZ\",\n      value: function (t) {\n        return this.hasZ() ? this.getOrdinate(t, 2) : A.NaN;\n      }\n    }, {\n      key: \"size\",\n      value: function () {}\n    }, {\n      key: \"getOrdinate\",\n      value: function (t, e) {}\n    }, {\n      key: \"getCoordinate\",\n      value: function () {}\n    }, {\n      key: \"getCoordinateCopy\",\n      value: function (t) {}\n    }, {\n      key: \"createCoordinate\",\n      value: function () {}\n    }, {\n      key: \"getDimension\",\n      value: function () {}\n    }, {\n      key: \"hasM\",\n      value: function () {\n        return this.getMeasures() > 0;\n      }\n    }, {\n      key: \"getX\",\n      value: function (t) {}\n    }, {\n      key: \"hasZ\",\n      value: function () {\n        return this.getDimension() - this.getMeasures() > 2;\n      }\n    }, {\n      key: \"getMeasures\",\n      value: function () {\n        return 0;\n      }\n    }, {\n      key: \"expandEnvelope\",\n      value: function (t) {}\n    }, {\n      key: \"copy\",\n      value: function () {}\n    }, {\n      key: \"getY\",\n      value: function (t) {}\n    }, {\n      key: \"toCoordinateArray\",\n      value: function () {}\n    }, {\n      key: \"interfaces_\",\n      get: function () {\n        return [I];\n      }\n    }]);\n  }();\n  ht.X = 0, ht.Y = 1, ht.Z = 2, ht.M = 3;\n  var ct = function () {\n    function t() {\n      n(this, t);\n    }\n    return s(t, null, [{\n      key: \"index\",\n      value: function (t, e, n) {\n        return lt.orientationIndex(t, e, n);\n      }\n    }, {\n      key: \"isCCW\",\n      value: function () {\n        if (arguments[0] instanceof Array) {\n          var e = arguments[0],\n            n = e.length - 1;\n          if (n < 3) throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n          for (var i = e[0], r = 0, s = 1; s <= n; s++) {\n            var a = e[s];\n            a.y > i.y && (i = a, r = s);\n          }\n          var o = r;\n          do {\n            (o -= 1) < 0 && (o = n);\n          } while (e[o].equals2D(i) && o !== r);\n          var u = r;\n          do {\n            u = (u + 1) % n;\n          } while (e[u].equals2D(i) && u !== r);\n          var l = e[o],\n            h = e[u];\n          if (l.equals2D(i) || h.equals2D(i) || l.equals2D(h)) return !1;\n          var c = t.index(l, i, h);\n          return 0 === c ? l.x > h.x : c > 0;\n        }\n        if (rt(arguments[0], ht)) {\n          var f = arguments[0],\n            g = f.size() - 1;\n          if (g < 3) throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n          for (var v = f.getCoordinate(0), y = 0, d = 1; d <= g; d++) {\n            var _ = f.getCoordinate(d);\n            _.y > v.y && (v = _, y = d);\n          }\n          var p = null,\n            k = y;\n          do {\n            (k -= 1) < 0 && (k = g), p = f.getCoordinate(k);\n          } while (p.equals2D(v) && k !== y);\n          var x = null,\n            I = y;\n          do {\n            I = (I + 1) % g, x = f.getCoordinate(I);\n          } while (x.equals2D(v) && I !== y);\n          if (p.equals2D(v) || x.equals2D(v) || p.equals2D(x)) return !1;\n          var E = t.index(p, v, x);\n          return 0 === E ? p.x > x.x : E > 0;\n        }\n      }\n    }]);\n  }();\n  ct.CLOCKWISE = -1, ct.RIGHT = ct.CLOCKWISE, ct.COUNTERCLOCKWISE = 1, ct.LEFT = ct.COUNTERCLOCKWISE, ct.COLLINEAR = 0, ct.STRAIGHT = ct.COLLINEAR;\n  var ft = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getCoordinate\",\n        value: function () {\n          return this._minCoord;\n        }\n      }, {\n        key: \"getRightmostSide\",\n        value: function (t, e) {\n          var n = this.getRightmostSideOfSegment(t, e);\n          return n < 0 && (n = this.getRightmostSideOfSegment(t, e - 1)), n < 0 && (this._minCoord = null, this.checkForRightmostCoordinate(t)), n;\n        }\n      }, {\n        key: \"findRightmostEdgeAtVertex\",\n        value: function () {\n          var t = this._minDe.getEdge().getCoordinates();\n          G.isTrue(this._minIndex > 0 && this._minIndex < t.length, \"rightmost point expected to be interior vertex of edge\");\n          var e = t[this._minIndex - 1],\n            n = t[this._minIndex + 1],\n            i = ct.index(this._minCoord, n, e),\n            r = !1;\n          (e.y < this._minCoord.y && n.y < this._minCoord.y && i === ct.COUNTERCLOCKWISE || e.y > this._minCoord.y && n.y > this._minCoord.y && i === ct.CLOCKWISE) && (r = !0), r && (this._minIndex = this._minIndex - 1);\n        }\n      }, {\n        key: \"getRightmostSideOfSegment\",\n        value: function (t, e) {\n          var n = t.getEdge().getCoordinates();\n          if (e < 0 || e + 1 >= n.length) return -1;\n          if (n[e].y === n[e + 1].y) return -1;\n          var i = $.LEFT;\n          return n[e].y < n[e + 1].y && (i = $.RIGHT), i;\n        }\n      }, {\n        key: \"getEdge\",\n        value: function () {\n          return this._orientedDe;\n        }\n      }, {\n        key: \"checkForRightmostCoordinate\",\n        value: function (t) {\n          for (var e = t.getEdge().getCoordinates(), n = 0; n < e.length - 1; n++) (null === this._minCoord || e[n].x > this._minCoord.x) && (this._minDe = t, this._minIndex = n, this._minCoord = e[n]);\n        }\n      }, {\n        key: \"findRightmostEdgeAtNode\",\n        value: function () {\n          var t = this._minDe.getNode().getEdges();\n          this._minDe = t.getRightmostEdge(), this._minDe.isForward() || (this._minDe = this._minDe.getSym(), this._minIndex = this._minDe.getEdge().getCoordinates().length - 1);\n        }\n      }, {\n        key: \"findEdge\",\n        value: function (t) {\n          for (var e = t.iterator(); e.hasNext();) {\n            var n = e.next();\n            n.isForward() && this.checkForRightmostCoordinate(n);\n          }\n          G.isTrue(0 !== this._minIndex || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\"), 0 === this._minIndex ? this.findRightmostEdgeAtNode() : this.findRightmostEdgeAtVertex(), this._orientedDe = this._minDe, this.getRightmostSide(this._minDe, this._minIndex) === $.LEFT && (this._orientedDe = this._minDe.getSym());\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._minIndex = -1, this._minCoord = null, this._minDe = null, this._orientedDe = null;\n        }\n      }]);\n    }(),\n    gt = function (t) {\n      function i(t, r) {\n        var s;\n        return n(this, i), (s = e(this, i, [r ? t + \" [ \" + r + \" ]\" : t])).pt = r ? new X(r) : void 0, s.name = Object.keys({\n          TopologyException: i\n        })[0], s;\n      }\n      return l(i, t), s(i, [{\n        key: \"getCoordinate\",\n        value: function () {\n          return this.pt;\n        }\n      }]);\n    }(D),\n    vt = function () {\n      return s(function t() {\n        n(this, t), this.array = [];\n      }, [{\n        key: \"addLast\",\n        value: function (t) {\n          this.array.push(t);\n        }\n      }, {\n        key: \"removeFirst\",\n        value: function () {\n          return this.array.shift();\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this.array.length;\n        }\n      }]);\n    }(),\n    yt = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i)).array = [], t instanceof Z && r.addAll(t), r;\n      }\n      return l(i, t), s(i, [{\n        key: \"interfaces_\",\n        get: function () {\n          return [nt, Z];\n        }\n      }, {\n        key: \"ensureCapacity\",\n        value: function () {}\n      }, {\n        key: \"add\",\n        value: function (t) {\n          return 1 === arguments.length ? this.array.push(t) : this.array.splice(arguments[0], 0, arguments[1]), !0;\n        }\n      }, {\n        key: \"clear\",\n        value: function () {\n          this.array = [];\n        }\n      }, {\n        key: \"addAll\",\n        value: function (t) {\n          var e,\n            n = a(t);\n          try {\n            for (n.s(); !(e = n.n()).done;) {\n              var i = e.value;\n              this.array.push(i);\n            }\n          } catch (t) {\n            n.e(t);\n          } finally {\n            n.f();\n          }\n        }\n      }, {\n        key: \"set\",\n        value: function (t, e) {\n          var n = this.array[t];\n          return this.array[t] = e, n;\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return new dt(this);\n        }\n      }, {\n        key: \"get\",\n        value: function (t) {\n          if (t < 0 || t >= this.size()) throw new et();\n          return this.array[t];\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this.array.length;\n        }\n      }, {\n        key: \"sort\",\n        value: function (t) {\n          t ? this.array.sort(function (e, n) {\n            return t.compare(e, n);\n          }) : this.array.sort();\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.array.length;\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          return this.array.slice();\n        }\n      }, {\n        key: \"remove\",\n        value: function (t) {\n          for (var e = 0, n = this.array.length; e < n; e++) if (this.array[e] === t) return !!this.array.splice(e, 1);\n          return !1;\n        }\n      }, {\n        key: Symbol.iterator,\n        value: function () {\n          return this.array.values();\n        }\n      }]);\n    }(nt),\n    dt = function () {\n      return s(function t(e) {\n        n(this, t), this.arrayList = e, this.position = 0;\n      }, [{\n        key: \"next\",\n        value: function () {\n          if (this.position === this.arrayList.size()) throw new j();\n          return this.arrayList.get(this.position++);\n        }\n      }, {\n        key: \"hasNext\",\n        value: function () {\n          return this.position < this.arrayList.size();\n        }\n      }, {\n        key: \"set\",\n        value: function (t) {\n          return this.arrayList.set(this.position - 1, t);\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          this.arrayList.remove(this.arrayList.get(this.position));\n        }\n      }]);\n    }(),\n    _t = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"clearVisitedEdges\",\n        value: function () {\n          for (var t = this._dirEdgeList.iterator(); t.hasNext();) {\n            t.next().setVisited(!1);\n          }\n        }\n      }, {\n        key: \"getRightmostCoordinate\",\n        value: function () {\n          return this._rightMostCoord;\n        }\n      }, {\n        key: \"computeNodeDepth\",\n        value: function (t) {\n          for (var e = null, n = t.getEdges().iterator(); n.hasNext();) {\n            var i = n.next();\n            if (i.isVisited() || i.getSym().isVisited()) {\n              e = i;\n              break;\n            }\n          }\n          if (null === e) throw new gt(\"unable to find edge to compute depths at \" + t.getCoordinate());\n          t.getEdges().computeDepths(e);\n          for (var r = t.getEdges().iterator(); r.hasNext();) {\n            var s = r.next();\n            s.setVisited(!0), this.copySymDepths(s);\n          }\n        }\n      }, {\n        key: \"computeDepth\",\n        value: function (t) {\n          this.clearVisitedEdges();\n          var e = this._finder.getEdge();\n          e.getNode(), e.getLabel(), e.setEdgeDepths($.RIGHT, t), this.copySymDepths(e), this.computeDepths(e);\n        }\n      }, {\n        key: \"create\",\n        value: function (t) {\n          this.addReachable(t), this._finder.findEdge(this._dirEdgeList), this._rightMostCoord = this._finder.getCoordinate();\n        }\n      }, {\n        key: \"findResultEdges\",\n        value: function () {\n          for (var t = this._dirEdgeList.iterator(); t.hasNext();) {\n            var e = t.next();\n            e.getDepth($.RIGHT) >= 1 && e.getDepth($.LEFT) <= 0 && !e.isInteriorAreaEdge() && e.setInResult(!0);\n          }\n        }\n      }, {\n        key: \"computeDepths\",\n        value: function (t) {\n          var e = new J(),\n            n = new vt(),\n            i = t.getNode();\n          for (n.addLast(i), e.add(i), t.setVisited(!0); !n.isEmpty();) {\n            var r = n.removeFirst();\n            e.add(r), this.computeNodeDepth(r);\n            for (var s = r.getEdges().iterator(); s.hasNext();) {\n              var a = s.next().getSym();\n              if (!a.isVisited()) {\n                var o = a.getNode();\n                e.contains(o) || (n.addLast(o), e.add(o));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this._rightMostCoord.x < e._rightMostCoord.x ? -1 : this._rightMostCoord.x > e._rightMostCoord.x ? 1 : 0;\n        }\n      }, {\n        key: \"getEnvelope\",\n        value: function () {\n          if (null === this._env) {\n            for (var t = new U(), e = this._dirEdgeList.iterator(); e.hasNext();) for (var n = e.next().getEdge().getCoordinates(), i = 0; i < n.length - 1; i++) t.expandToInclude(n[i]);\n            this._env = t;\n          }\n          return this._env;\n        }\n      }, {\n        key: \"addReachable\",\n        value: function (t) {\n          var e = new it();\n          for (e.add(t); !e.empty();) {\n            var n = e.pop();\n            this.add(n, e);\n          }\n        }\n      }, {\n        key: \"copySymDepths\",\n        value: function (t) {\n          var e = t.getSym();\n          e.setDepth($.LEFT, t.getDepth($.RIGHT)), e.setDepth($.RIGHT, t.getDepth($.LEFT));\n        }\n      }, {\n        key: \"add\",\n        value: function (t, e) {\n          t.setVisited(!0), this._nodes.add(t);\n          for (var n = t.getEdges().iterator(); n.hasNext();) {\n            var i = n.next();\n            this._dirEdgeList.add(i);\n            var r = i.getSym().getNode();\n            r.isVisited() || e.push(r);\n          }\n        }\n      }, {\n        key: \"getNodes\",\n        value: function () {\n          return this._nodes;\n        }\n      }, {\n        key: \"getDirectedEdges\",\n        value: function () {\n          return this._dirEdgeList;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._finder = null, this._dirEdgeList = new yt(), this._nodes = new yt(), this._rightMostCoord = null, this._env = null, this._finder = new ft();\n        }\n      }]);\n    }(),\n    pt = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"intersection\",\n        value: function (t, e, n, i) {\n          var r = t.x < e.x ? t.x : e.x,\n            s = t.y < e.y ? t.y : e.y,\n            a = t.x > e.x ? t.x : e.x,\n            o = t.y > e.y ? t.y : e.y,\n            u = n.x < i.x ? n.x : i.x,\n            l = n.y < i.y ? n.y : i.y,\n            h = n.x > i.x ? n.x : i.x,\n            c = n.y > i.y ? n.y : i.y,\n            f = ((r > u ? r : u) + (a < h ? a : h)) / 2,\n            g = ((s > l ? s : l) + (o < c ? o : c)) / 2,\n            v = t.x - f,\n            y = t.y - g,\n            d = e.x - f,\n            _ = e.y - g,\n            p = n.x - f,\n            m = n.y - g,\n            k = i.x - f,\n            x = i.y - g,\n            I = y - _,\n            E = d - v,\n            N = v * _ - d * y,\n            T = m - x,\n            S = k - p,\n            L = p * x - k * m,\n            C = I * S - T * E,\n            R = (E * L - S * N) / C,\n            w = (T * N - I * L) / C;\n          return A.isNaN(R) || A.isInfinite(R) || A.isNaN(w) || A.isInfinite(w) ? null : new X(R + f, w + g);\n        }\n      }]);\n    }(),\n    mt = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"arraycopy\",\n        value: function (t, e, n, i, r) {\n          for (var s = 0, a = e; a < e + r; a++) n[i + s] = t[a], s++;\n        }\n      }, {\n        key: \"getProperty\",\n        value: function (t) {\n          return {\n            \"line.separator\": \"\\n\"\n          }[t];\n        }\n      }]);\n    }(),\n    kt = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"log10\",\n        value: function (e) {\n          var n = Math.log(e);\n          return A.isInfinite(n) || A.isNaN(n) ? n : n / t.LOG_10;\n        }\n      }, {\n        key: \"min\",\n        value: function (t, e, n, i) {\n          var r = t;\n          return e < r && (r = e), n < r && (r = n), i < r && (r = i), r;\n        }\n      }, {\n        key: \"clamp\",\n        value: function () {\n          if (\"number\" == typeof arguments[2] && \"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n            var t = arguments[0],\n              e = arguments[1],\n              n = arguments[2];\n            return t < e ? e : t > n ? n : t;\n          }\n          if (Number.isInteger(arguments[2]) && Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n            var i = arguments[0],\n              r = arguments[1],\n              s = arguments[2];\n            return i < r ? r : i > s ? s : i;\n          }\n        }\n      }, {\n        key: \"wrap\",\n        value: function (t, e) {\n          return t < 0 ? e - -t % e : t % e;\n        }\n      }, {\n        key: \"max\",\n        value: function () {\n          if (3 === arguments.length) {\n            var t = arguments[1],\n              e = arguments[2],\n              n = arguments[0];\n            return t > n && (n = t), e > n && (n = e), n;\n          }\n          if (4 === arguments.length) {\n            var i = arguments[1],\n              r = arguments[2],\n              s = arguments[3],\n              a = arguments[0];\n            return i > a && (a = i), r > a && (a = r), s > a && (a = s), a;\n          }\n        }\n      }, {\n        key: \"average\",\n        value: function (t, e) {\n          return (t + e) / 2;\n        }\n      }]);\n    }();\n  kt.LOG_10 = Math.log(10);\n  var xt = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"segmentToSegment\",\n        value: function (e, n, i, r) {\n          if (e.equals(n)) return t.pointToSegment(e, i, r);\n          if (i.equals(r)) return t.pointToSegment(r, e, n);\n          var s = !1;\n          if (U.intersects(e, n, i, r)) {\n            var a = (n.x - e.x) * (r.y - i.y) - (n.y - e.y) * (r.x - i.x);\n            if (0 === a) s = !0;else {\n              var o = (e.y - i.y) * (r.x - i.x) - (e.x - i.x) * (r.y - i.y),\n                u = ((e.y - i.y) * (n.x - e.x) - (e.x - i.x) * (n.y - e.y)) / a,\n                l = o / a;\n              (l < 0 || l > 1 || u < 0 || u > 1) && (s = !0);\n            }\n          } else s = !0;\n          return s ? kt.min(t.pointToSegment(e, i, r), t.pointToSegment(n, i, r), t.pointToSegment(i, e, n), t.pointToSegment(r, e, n)) : 0;\n        }\n      }, {\n        key: \"pointToSegment\",\n        value: function (t, e, n) {\n          if (e.x === n.x && e.y === n.y) return t.distance(e);\n          var i = (n.x - e.x) * (n.x - e.x) + (n.y - e.y) * (n.y - e.y),\n            r = ((t.x - e.x) * (n.x - e.x) + (t.y - e.y) * (n.y - e.y)) / i;\n          if (r <= 0) return t.distance(e);\n          if (r >= 1) return t.distance(n);\n          var s = ((e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)) / i;\n          return Math.abs(s) * Math.sqrt(i);\n        }\n      }, {\n        key: \"pointToLinePerpendicular\",\n        value: function (t, e, n) {\n          var i = (n.x - e.x) * (n.x - e.x) + (n.y - e.y) * (n.y - e.y),\n            r = ((e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)) / i;\n          return Math.abs(r) * Math.sqrt(i);\n        }\n      }, {\n        key: \"pointToSegmentString\",\n        value: function (e, n) {\n          if (0 === n.length) throw new m(\"Line array must contain at least one vertex\");\n          for (var i = e.distance(n[0]), r = 0; r < n.length - 1; r++) {\n            var s = t.pointToSegment(e, n[r], n[r + 1]);\n            s < i && (i = s);\n          }\n          return i;\n        }\n      }]);\n    }(),\n    It = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"create\",\n        value: function () {\n          if (1 === arguments.length) arguments[0] instanceof Array || rt(arguments[0], ht);else if (2 === arguments.length) ;else if (3 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            return this.create(t, e);\n          }\n        }\n      }]);\n    }(),\n    Et = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"filter\",\n        value: function (t) {}\n      }]);\n    }(),\n    Nt = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"ofLine\",\n        value: function (t) {\n          var e = t.size();\n          if (e <= 1) return 0;\n          var n = 0,\n            i = new X();\n          t.getCoordinate(0, i);\n          for (var r = i.x, s = i.y, a = 1; a < e; a++) {\n            t.getCoordinate(a, i);\n            var o = i.x,\n              u = i.y,\n              l = o - r,\n              h = u - s;\n            n += Math.sqrt(l * l + h * h), r = o, s = u;\n          }\n          return n;\n        }\n      }]);\n    }(),\n    Tt = s(function t() {\n      n(this, t);\n    }),\n    St = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"copyCoord\",\n        value: function (t, e, n, i) {\n          for (var r = Math.min(t.getDimension(), n.getDimension()), s = 0; s < r; s++) n.setOrdinate(i, s, t.getOrdinate(e, s));\n        }\n      }, {\n        key: \"isRing\",\n        value: function (t) {\n          var e = t.size();\n          return 0 === e || !(e <= 3) && t.getOrdinate(0, ht.X) === t.getOrdinate(e - 1, ht.X) && t.getOrdinate(0, ht.Y) === t.getOrdinate(e - 1, ht.Y);\n        }\n      }, {\n        key: \"scroll\",\n        value: function () {\n          if (2 === arguments.length) {\n            if (rt(arguments[0], ht) && Number.isInteger(arguments[1])) {\n              var e = arguments[0],\n                n = arguments[1];\n              t.scroll(e, n, t.isRing(e));\n            } else if (rt(arguments[0], ht) && arguments[1] instanceof X) {\n              var i = arguments[0],\n                r = arguments[1],\n                s = t.indexOf(r, i);\n              if (s <= 0) return null;\n              t.scroll(i, s);\n            }\n          } else if (3 === arguments.length) {\n            var a = arguments[0],\n              o = arguments[1],\n              u = arguments[2];\n            if (o <= 0) return null;\n            for (var l = a.copy(), h = u ? a.size() - 1 : a.size(), c = 0; c < h; c++) for (var f = 0; f < a.getDimension(); f++) a.setOrdinate(c, f, l.getOrdinate((o + c) % h, f));\n            if (u) for (var g = 0; g < a.getDimension(); g++) a.setOrdinate(h, g, a.getOrdinate(0, g));\n          }\n        }\n      }, {\n        key: \"isEqual\",\n        value: function (t, e) {\n          var n = t.size();\n          if (n !== e.size()) return !1;\n          for (var i = Math.min(t.getDimension(), e.getDimension()), r = 0; r < n; r++) for (var s = 0; s < i; s++) {\n            var a = t.getOrdinate(r, s),\n              o = e.getOrdinate(r, s);\n            if (t.getOrdinate(r, s) !== e.getOrdinate(r, s) && (!A.isNaN(a) || !A.isNaN(o))) return !1;\n          }\n          return !0;\n        }\n      }, {\n        key: \"minCoordinateIndex\",\n        value: function () {\n          if (1 === arguments.length) {\n            var e = arguments[0];\n            return t.minCoordinateIndex(e, 0, e.size() - 1);\n          }\n          if (3 === arguments.length) {\n            for (var n = arguments[0], i = arguments[2], r = -1, s = null, a = arguments[1]; a <= i; a++) {\n              var o = n.getCoordinate(a);\n              (null === s || s.compareTo(o) > 0) && (s = o, r = a);\n            }\n            return r;\n          }\n        }\n      }, {\n        key: \"extend\",\n        value: function (e, n, i) {\n          var r = e.create(i, n.getDimension()),\n            s = n.size();\n          if (t.copy(n, 0, r, 0, s), s > 0) for (var a = s; a < i; a++) t.copy(n, s - 1, r, a, 1);\n          return r;\n        }\n      }, {\n        key: \"reverse\",\n        value: function (e) {\n          for (var n = e.size() - 1, i = Math.trunc(n / 2), r = 0; r <= i; r++) t.swap(e, r, n - r);\n        }\n      }, {\n        key: \"swap\",\n        value: function (t, e, n) {\n          if (e === n) return null;\n          for (var i = 0; i < t.getDimension(); i++) {\n            var r = t.getOrdinate(e, i);\n            t.setOrdinate(e, i, t.getOrdinate(n, i)), t.setOrdinate(n, i, r);\n          }\n        }\n      }, {\n        key: \"copy\",\n        value: function (e, n, i, r, s) {\n          for (var a = 0; a < s; a++) t.copyCoord(e, n + a, i, r + a);\n        }\n      }, {\n        key: \"ensureValidRing\",\n        value: function (e, n) {\n          var i = n.size();\n          return 0 === i ? n : i <= 3 ? t.createClosedRing(e, n, 4) : n.getOrdinate(0, ht.X) === n.getOrdinate(i - 1, ht.X) && n.getOrdinate(0, ht.Y) === n.getOrdinate(i - 1, ht.Y) ? n : t.createClosedRing(e, n, i + 1);\n        }\n      }, {\n        key: \"indexOf\",\n        value: function (t, e) {\n          for (var n = 0; n < e.size(); n++) if (t.x === e.getOrdinate(n, ht.X) && t.y === e.getOrdinate(n, ht.Y)) return n;\n          return -1;\n        }\n      }, {\n        key: \"createClosedRing\",\n        value: function (e, n, i) {\n          var r = e.create(i, n.getDimension()),\n            s = n.size();\n          t.copy(n, 0, r, 0, s);\n          for (var a = s; a < i; a++) t.copy(n, 0, r, a, 1);\n          return r;\n        }\n      }, {\n        key: \"minCoordinate\",\n        value: function (t) {\n          for (var e = null, n = 0; n < t.size(); n++) {\n            var i = t.getCoordinate(n);\n            (null === e || e.compareTo(i) > 0) && (e = i);\n          }\n          return e;\n        }\n      }]);\n    }(),\n    Lt = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"toDimensionSymbol\",\n        value: function (e) {\n          switch (e) {\n            case t.FALSE:\n              return t.SYM_FALSE;\n            case t.TRUE:\n              return t.SYM_TRUE;\n            case t.DONTCARE:\n              return t.SYM_DONTCARE;\n            case t.P:\n              return t.SYM_P;\n            case t.L:\n              return t.SYM_L;\n            case t.A:\n              return t.SYM_A;\n          }\n          throw new m(\"Unknown dimension value: \" + e);\n        }\n      }, {\n        key: \"toDimensionValue\",\n        value: function (e) {\n          switch (ot.toUpperCase(e)) {\n            case t.SYM_FALSE:\n              return t.FALSE;\n            case t.SYM_TRUE:\n              return t.TRUE;\n            case t.SYM_DONTCARE:\n              return t.DONTCARE;\n            case t.SYM_P:\n              return t.P;\n            case t.SYM_L:\n              return t.L;\n            case t.SYM_A:\n              return t.A;\n          }\n          throw new m(\"Unknown dimension symbol: \" + e);\n        }\n      }]);\n    }();\n  Lt.P = 0, Lt.L = 1, Lt.A = 2, Lt.FALSE = -1, Lt.TRUE = -2, Lt.DONTCARE = -3, Lt.SYM_FALSE = \"F\", Lt.SYM_TRUE = \"T\", Lt.SYM_DONTCARE = \"*\", Lt.SYM_P = \"0\", Lt.SYM_L = \"1\", Lt.SYM_A = \"2\";\n  var Ct = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"filter\",\n        value: function (t) {}\n      }]);\n    }(),\n    Rt = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"filter\",\n        value: function (t, e) {}\n      }, {\n        key: \"isDone\",\n        value: function () {}\n      }, {\n        key: \"isGeometryChanged\",\n        value: function () {}\n      }]);\n    }(),\n    wt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"computeEnvelopeInternal\",\n        value: function () {\n          return this.isEmpty() ? new U() : this._points.expandEnvelope(new U());\n        }\n      }, {\n        key: \"isRing\",\n        value: function () {\n          return this.isClosed() && this.isSimple();\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          return this._points.toCoordinateArray();\n        }\n      }, {\n        key: \"copyInternal\",\n        value: function () {\n          return new i(this._points.copy(), this._factory);\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            if (!this.isEquivalentClass(t)) return !1;\n            var n = t;\n            if (this._points.size() !== n._points.size()) return !1;\n            for (var r = 0; r < this._points.size(); r++) if (!this.equal(this._points.getCoordinate(r), n._points.getCoordinate(r), e)) return !1;\n            return !0;\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          for (var t = 0; t < Math.trunc(this._points.size() / 2); t++) {\n            var e = this._points.size() - 1 - t;\n            if (!this._points.getCoordinate(t).equals(this._points.getCoordinate(e))) {\n              if (this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e)) > 0) {\n                var n = this._points.copy();\n                St.reverse(n), this._points = n;\n              }\n              return null;\n            }\n          }\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this.isEmpty() ? null : this._points.getCoordinate(0);\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return this.isClosed() ? Lt.FALSE : 0;\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          return !this.isEmpty() && this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n        }\n      }, {\n        key: \"reverseInternal\",\n        value: function () {\n          var t = this._points.copy();\n          return St.reverse(t), this.getFactory().createLineString(t);\n        }\n      }, {\n        key: \"getEndPoint\",\n        value: function () {\n          return this.isEmpty() ? null : this.getPointN(this.getNumPoints() - 1);\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_LINESTRING;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 1;\n        }\n      }, {\n        key: \"getLength\",\n        value: function () {\n          return Nt.ofLine(this._points);\n        }\n      }, {\n        key: \"getNumPoints\",\n        value: function () {\n          return this._points.size();\n        }\n      }, {\n        key: \"compareToSameClass\",\n        value: function () {\n          if (1 === arguments.length) {\n            for (var t = arguments[0], e = 0, n = 0; e < this._points.size() && n < t._points.size();) {\n              var i = this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));\n              if (0 !== i) return i;\n              e++, n++;\n            }\n            return e < this._points.size() ? 1 : n < t._points.size() ? -1 : 0;\n          }\n          if (2 === arguments.length) {\n            var r = arguments[0];\n            return arguments[1].compare(this._points, r._points);\n          }\n        }\n      }, {\n        key: \"apply\",\n        value: function () {\n          if (rt(arguments[0], Et)) for (var t = arguments[0], e = 0; e < this._points.size(); e++) t.filter(this._points.getCoordinate(e));else if (rt(arguments[0], Rt)) {\n            var n = arguments[0];\n            if (0 === this._points.size()) return null;\n            for (var i = 0; i < this._points.size() && (n.filter(this._points, i), !n.isDone()); i++);\n            n.isGeometryChanged() && this.geometryChanged();\n          } else if (rt(arguments[0], Ct)) {\n            arguments[0].filter(this);\n          } else if (rt(arguments[0], k)) {\n            arguments[0].filter(this);\n          }\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          throw new W();\n        }\n      }, {\n        key: \"isEquivalentClass\",\n        value: function (t) {\n          return t instanceof i;\n        }\n      }, {\n        key: \"getCoordinateN\",\n        value: function (t) {\n          return this._points.getCoordinate(t);\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_LINESTRING;\n        }\n      }, {\n        key: \"getCoordinateSequence\",\n        value: function () {\n          return this._points;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this._points.size();\n        }\n      }, {\n        key: \"init\",\n        value: function (t) {\n          if (null === t && (t = this.getFactory().getCoordinateSequenceFactory().create([])), 1 === t.size()) throw new m(\"Invalid number of points in LineString (found \" + t.size() + \" - must be 0 or >= 2)\");\n          this._points = t;\n        }\n      }, {\n        key: \"isCoordinate\",\n        value: function (t) {\n          for (var e = 0; e < this._points.size(); e++) if (this._points.getCoordinate(e).equals(t)) return !0;\n          return !1;\n        }\n      }, {\n        key: \"getStartPoint\",\n        value: function () {\n          return this.isEmpty() ? null : this.getPointN(0);\n        }\n      }, {\n        key: \"getPointN\",\n        value: function (t) {\n          return this.getFactory().createPoint(this._points.getCoordinate(t));\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Tt];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._points = null, 0 === arguments.length) ;else if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            V.constructor_.call(this, e), this.init(t);\n          }\n        }\n      }]);\n    }(V),\n    Ot = s(function t() {\n      n(this, t);\n    }),\n    bt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"computeEnvelopeInternal\",\n        value: function () {\n          if (this.isEmpty()) return new U();\n          var t = new U();\n          return t.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0)), t;\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          return this.isEmpty() ? [] : [this.getCoordinate()];\n        }\n      }, {\n        key: \"copyInternal\",\n        value: function () {\n          return new i(this._coordinates.copy(), this._factory);\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            return !!this.isEquivalentClass(t) && (!(!this.isEmpty() || !t.isEmpty()) || this.isEmpty() === t.isEmpty() && this.equal(t.getCoordinate(), this.getCoordinate(), e));\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {}\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return 0 !== this._coordinates.size() ? this._coordinates.getCoordinate(0) : null;\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return Lt.FALSE;\n        }\n      }, {\n        key: \"reverseInternal\",\n        value: function () {\n          return this.getFactory().createPoint(this._coordinates.copy());\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_POINT;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 0;\n        }\n      }, {\n        key: \"getNumPoints\",\n        value: function () {\n          return this.isEmpty() ? 0 : 1;\n        }\n      }, {\n        key: \"getX\",\n        value: function () {\n          if (null === this.getCoordinate()) throw new IllegalStateException(\"getX called on empty Point\");\n          return this.getCoordinate().x;\n        }\n      }, {\n        key: \"compareToSameClass\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.getCoordinate().compareTo(t.getCoordinate());\n          }\n          if (2 === arguments.length) {\n            var e = arguments[0];\n            return arguments[1].compare(this._coordinates, e._coordinates);\n          }\n        }\n      }, {\n        key: \"apply\",\n        value: function () {\n          if (rt(arguments[0], Et)) {\n            var t = arguments[0];\n            if (this.isEmpty()) return null;\n            t.filter(this.getCoordinate());\n          } else if (rt(arguments[0], Rt)) {\n            var e = arguments[0];\n            if (this.isEmpty()) return null;\n            e.filter(this._coordinates, 0), e.isGeometryChanged() && this.geometryChanged();\n          } else if (rt(arguments[0], Ct)) {\n            arguments[0].filter(this);\n          } else if (rt(arguments[0], k)) {\n            arguments[0].filter(this);\n          }\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          return this.getFactory().createGeometryCollection();\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_POINT;\n        }\n      }, {\n        key: \"getCoordinateSequence\",\n        value: function () {\n          return this._coordinates;\n        }\n      }, {\n        key: \"getY\",\n        value: function () {\n          if (null === this.getCoordinate()) throw new IllegalStateException(\"getY called on empty Point\");\n          return this.getCoordinate().y;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this._coordinates.size();\n        }\n      }, {\n        key: \"init\",\n        value: function (t) {\n          null === t && (t = this.getFactory().getCoordinateSequenceFactory().create([])), G.isTrue(t.size() <= 1), this._coordinates = t;\n        }\n      }, {\n        key: \"isSimple\",\n        value: function () {\n          return !0;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Ot];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._coordinates = null;\n          var t = arguments[0],\n            e = arguments[1];\n          V.constructor_.call(this, e), this.init(t);\n        }\n      }]);\n    }(V),\n    Mt = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"ofRing\",\n        value: function () {\n          if (arguments[0] instanceof Array) {\n            var e = arguments[0];\n            return Math.abs(t.ofRingSigned(e));\n          }\n          if (rt(arguments[0], ht)) {\n            var n = arguments[0];\n            return Math.abs(t.ofRingSigned(n));\n          }\n        }\n      }, {\n        key: \"ofRingSigned\",\n        value: function () {\n          if (arguments[0] instanceof Array) {\n            var t = arguments[0];\n            if (t.length < 3) return 0;\n            for (var e = 0, n = t[0].x, i = 1; i < t.length - 1; i++) {\n              var r = t[i].x - n,\n                s = t[i + 1].y;\n              e += r * (t[i - 1].y - s);\n            }\n            return e / 2;\n          }\n          if (rt(arguments[0], ht)) {\n            var a = arguments[0],\n              o = a.size();\n            if (o < 3) return 0;\n            var u = new X(),\n              l = new X(),\n              h = new X();\n            a.getCoordinate(0, l), a.getCoordinate(1, h);\n            var c = l.x;\n            h.x -= c;\n            for (var f = 0, g = 1; g < o - 1; g++) u.y = l.y, l.x = h.x, l.y = h.y, a.getCoordinate(g + 1, h), h.x -= c, f += l.x * (u.y - h.y);\n            return f / 2;\n          }\n        }\n      }]);\n    }(),\n    At = function () {\n      return s(function t() {\n        n(this, t);\n      }, null, [{\n        key: \"sort\",\n        value: function () {\n          var t = arguments,\n            e = arguments[0];\n          if (1 === arguments.length) e.sort(function (t, e) {\n            return t.compareTo(e);\n          });else if (2 === arguments.length) e.sort(function (e, n) {\n            return t[1].compare(e, n);\n          });else if (3 === arguments.length) {\n            var n = e.slice(arguments[1], arguments[2]);\n            n.sort();\n            var i = e.slice(0, arguments[1]).concat(n, e.slice(arguments[2], e.length));\n            e.splice(0, e.length);\n            var r,\n              s = a(i);\n            try {\n              for (s.s(); !(r = s.n()).done;) {\n                var o = r.value;\n                e.push(o);\n              }\n            } catch (t) {\n              s.e(t);\n            } finally {\n              s.f();\n            }\n          } else if (4 === arguments.length) {\n            var u = e.slice(arguments[1], arguments[2]);\n            u.sort(function (e, n) {\n              return t[3].compare(e, n);\n            });\n            var l = e.slice(0, arguments[1]).concat(u, e.slice(arguments[2], e.length));\n            e.splice(0, e.length);\n            var h,\n              c = a(l);\n            try {\n              for (c.s(); !(h = c.n()).done;) {\n                var f = h.value;\n                e.push(f);\n              }\n            } catch (t) {\n              c.e(t);\n            } finally {\n              c.f();\n            }\n          }\n        }\n      }, {\n        key: \"asList\",\n        value: function (t) {\n          var e,\n            n = new yt(),\n            i = a(t);\n          try {\n            for (i.s(); !(e = i.n()).done;) {\n              var r = e.value;\n              n.add(r);\n            }\n          } catch (t) {\n            i.e(t);\n          } finally {\n            i.f();\n          }\n          return n;\n        }\n      }, {\n        key: \"copyOf\",\n        value: function (t, e) {\n          return t.slice(0, e);\n        }\n      }]);\n    }(),\n    Pt = s(function t() {\n      n(this, t);\n    }),\n    Dt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"computeEnvelopeInternal\",\n        value: function () {\n          return this._shell.getEnvelopeInternal();\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          if (this.isEmpty()) return [];\n          for (var t = new Array(this.getNumPoints()).fill(null), e = -1, n = this._shell.getCoordinates(), i = 0; i < n.length; i++) t[++e] = n[i];\n          for (var r = 0; r < this._holes.length; r++) for (var s = this._holes[r].getCoordinates(), a = 0; a < s.length; a++) t[++e] = s[a];\n          return t;\n        }\n      }, {\n        key: \"getArea\",\n        value: function () {\n          var t = 0;\n          t += Mt.ofRing(this._shell.getCoordinateSequence());\n          for (var e = 0; e < this._holes.length; e++) t -= Mt.ofRing(this._holes[e].getCoordinateSequence());\n          return t;\n        }\n      }, {\n        key: \"copyInternal\",\n        value: function () {\n          for (var t = this._shell.copy(), e = new Array(this._holes.length).fill(null), n = 0; n < this._holes.length; n++) e[n] = this._holes[n].copy();\n          return new i(t, e, this._factory);\n        }\n      }, {\n        key: \"isRectangle\",\n        value: function () {\n          if (0 !== this.getNumInteriorRing()) return !1;\n          if (null === this._shell) return !1;\n          if (5 !== this._shell.getNumPoints()) return !1;\n          for (var t = this._shell.getCoordinateSequence(), e = this.getEnvelopeInternal(), n = 0; n < 5; n++) {\n            var i = t.getX(n);\n            if (i !== e.getMinX() && i !== e.getMaxX()) return !1;\n            var r = t.getY(n);\n            if (r !== e.getMinY() && r !== e.getMaxY()) return !1;\n          }\n          for (var s = t.getX(0), a = t.getY(0), o = 1; o <= 4; o++) {\n            var u = t.getX(o),\n              l = t.getY(o);\n            if (u !== s === (l !== a)) return !1;\n            s = u, a = l;\n          }\n          return !0;\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            if (!this.isEquivalentClass(t)) return !1;\n            var n = t,\n              r = this._shell,\n              s = n._shell;\n            if (!r.equalsExact(s, e)) return !1;\n            if (this._holes.length !== n._holes.length) return !1;\n            for (var a = 0; a < this._holes.length; a++) if (!this._holes[a].equalsExact(n._holes[a], e)) return !1;\n            return !0;\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          if (0 === arguments.length) {\n            this._shell = this.normalized(this._shell, !0);\n            for (var t = 0; t < this._holes.length; t++) this._holes[t] = this.normalized(this._holes[t], !1);\n            At.sort(this._holes);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            if (e.isEmpty()) return null;\n            var i = e.getCoordinateSequence(),\n              r = St.minCoordinateIndex(i, 0, i.size() - 2);\n            St.scroll(i, r, !0), ct.isCCW(i) === n && St.reverse(i);\n          }\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this._shell.getCoordinate();\n        }\n      }, {\n        key: \"getNumInteriorRing\",\n        value: function () {\n          return this._holes.length;\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return 1;\n        }\n      }, {\n        key: \"reverseInternal\",\n        value: function () {\n          for (var t = this.getExteriorRing().reverse(), e = new Array(this.getNumInteriorRing()).fill(null), n = 0; n < e.length; n++) e[n] = this.getInteriorRingN(n).reverse();\n          return this.getFactory().createPolygon(t, e);\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_POLYGON;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 2;\n        }\n      }, {\n        key: \"getLength\",\n        value: function () {\n          var t = 0;\n          t += this._shell.getLength();\n          for (var e = 0; e < this._holes.length; e++) t += this._holes[e].getLength();\n          return t;\n        }\n      }, {\n        key: \"getNumPoints\",\n        value: function () {\n          for (var t = this._shell.getNumPoints(), e = 0; e < this._holes.length; e++) t += this._holes[e].getNumPoints();\n          return t;\n        }\n      }, {\n        key: \"convexHull\",\n        value: function () {\n          return this.getExteriorRing().convexHull();\n        }\n      }, {\n        key: \"normalized\",\n        value: function (t, e) {\n          var n = t.copy();\n          return this.normalize(n, e), n;\n        }\n      }, {\n        key: \"compareToSameClass\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0],\n              e = this._shell,\n              n = t._shell;\n            return e.compareToSameClass(n);\n          }\n          if (2 === arguments.length) {\n            var i = arguments[1],\n              r = arguments[0],\n              s = this._shell,\n              a = r._shell,\n              o = s.compareToSameClass(a, i);\n            if (0 !== o) return o;\n            for (var u = this.getNumInteriorRing(), l = r.getNumInteriorRing(), h = 0; h < u && h < l;) {\n              var c = this.getInteriorRingN(h),\n                f = r.getInteriorRingN(h),\n                g = c.compareToSameClass(f, i);\n              if (0 !== g) return g;\n              h++;\n            }\n            return h < u ? 1 : h < l ? -1 : 0;\n          }\n        }\n      }, {\n        key: \"apply\",\n        value: function () {\n          if (rt(arguments[0], Et)) {\n            var t = arguments[0];\n            this._shell.apply(t);\n            for (var e = 0; e < this._holes.length; e++) this._holes[e].apply(t);\n          } else if (rt(arguments[0], Rt)) {\n            var n = arguments[0];\n            if (this._shell.apply(n), !n.isDone()) for (var i = 0; i < this._holes.length && (this._holes[i].apply(n), !n.isDone()); i++);\n            n.isGeometryChanged() && this.geometryChanged();\n          } else if (rt(arguments[0], Ct)) {\n            arguments[0].filter(this);\n          } else if (rt(arguments[0], k)) {\n            var r = arguments[0];\n            r.filter(this), this._shell.apply(r);\n            for (var s = 0; s < this._holes.length; s++) this._holes[s].apply(r);\n          }\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          if (this.isEmpty()) return this.getFactory().createMultiLineString();\n          var t = new Array(this._holes.length + 1).fill(null);\n          t[0] = this._shell;\n          for (var e = 0; e < this._holes.length; e++) t[e + 1] = this._holes[e];\n          return t.length <= 1 ? this.getFactory().createLinearRing(t[0].getCoordinateSequence()) : this.getFactory().createMultiLineString(t);\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_POLYGON;\n        }\n      }, {\n        key: \"getExteriorRing\",\n        value: function () {\n          return this._shell;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return this._shell.isEmpty();\n        }\n      }, {\n        key: \"getInteriorRingN\",\n        value: function (t) {\n          return this._holes[t];\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Pt];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._shell = null, this._holes = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          if (V.constructor_.call(this, n), null === t && (t = this.getFactory().createLinearRing()), null === e && (e = []), V.hasNullElements(e)) throw new m(\"holes must not contain null elements\");\n          if (t.isEmpty() && V.hasNonEmptyElements(e)) throw new m(\"shell is empty but holes are not\");\n          this._shell = t, this._holes = e;\n        }\n      }]);\n    }(V),\n    Ft = function (t) {\n      function i() {\n        return n(this, i), e(this, i, arguments);\n      }\n      return l(i, t), s(i);\n    }(K),\n    Gt = function (t) {\n      function i(t) {\n        var r;\n        return n(this, i), (r = e(this, i)).array = [], t instanceof Z && r.addAll(t), r;\n      }\n      return l(i, t), s(i, [{\n        key: \"contains\",\n        value: function (t) {\n          var e,\n            n = a(this.array);\n          try {\n            for (n.s(); !(e = n.n()).done;) {\n              if (0 === e.value.compareTo(t)) return !0;\n            }\n          } catch (t) {\n            n.e(t);\n          } finally {\n            n.f();\n          }\n          return !1;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          if (this.contains(t)) return !1;\n          for (var e = 0, n = this.array.length; e < n; e++) {\n            if (1 === this.array[e].compareTo(t)) return !!this.array.splice(e, 0, t);\n          }\n          return this.array.push(t), !0;\n        }\n      }, {\n        key: \"addAll\",\n        value: function (t) {\n          var e,\n            n = a(t);\n          try {\n            for (n.s(); !(e = n.n()).done;) {\n              var i = e.value;\n              this.add(i);\n            }\n          } catch (t) {\n            n.e(t);\n          } finally {\n            n.f();\n          }\n          return !0;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          throw new W();\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.array.length;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this.array.length;\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          return this.array.slice();\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return new qt(this.array);\n        }\n      }]);\n    }(Ft),\n    qt = function () {\n      return s(function t(e) {\n        n(this, t), this.array = e, this.position = 0;\n      }, [{\n        key: \"next\",\n        value: function () {\n          if (this.position === this.array.length) throw new j();\n          return this.array[this.position++];\n        }\n      }, {\n        key: \"hasNext\",\n        value: function () {\n          return this.position < this.array.length;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          throw new W();\n        }\n      }]);\n    }(),\n    Yt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"computeEnvelopeInternal\",\n        value: function () {\n          for (var t = new U(), e = 0; e < this._geometries.length; e++) t.expandToInclude(this._geometries[e].getEnvelopeInternal());\n          return t;\n        }\n      }, {\n        key: \"getGeometryN\",\n        value: function (t) {\n          return this._geometries[t];\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          for (var t = new Array(this.getNumPoints()).fill(null), e = -1, n = 0; n < this._geometries.length; n++) for (var i = this._geometries[n].getCoordinates(), r = 0; r < i.length; r++) t[++e] = i[r];\n          return t;\n        }\n      }, {\n        key: \"getArea\",\n        value: function () {\n          for (var t = 0, e = 0; e < this._geometries.length; e++) t += this._geometries[e].getArea();\n          return t;\n        }\n      }, {\n        key: \"copyInternal\",\n        value: function () {\n          for (var t = new Array(this._geometries.length).fill(null), e = 0; e < t.length; e++) t[e] = this._geometries[e].copy();\n          return new i(t, this._factory);\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            if (!this.isEquivalentClass(t)) return !1;\n            var n = t;\n            if (this._geometries.length !== n._geometries.length) return !1;\n            for (var r = 0; r < this._geometries.length; r++) if (!this._geometries[r].equalsExact(n._geometries[r], e)) return !1;\n            return !0;\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          for (var t = 0; t < this._geometries.length; t++) this._geometries[t].normalize();\n          At.sort(this._geometries);\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this.isEmpty() ? null : this._geometries[0].getCoordinate();\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          for (var t = Lt.FALSE, e = 0; e < this._geometries.length; e++) t = Math.max(t, this._geometries[e].getBoundaryDimension());\n          return t;\n        }\n      }, {\n        key: \"reverseInternal\",\n        value: function () {\n          for (var t = this._geometries.length, e = new yt(t), n = 0; n < t; n++) e.add(this._geometries[n].reverse());\n          return this.getFactory().buildGeometry(e);\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_GEOMETRYCOLLECTION;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          for (var t = Lt.FALSE, e = 0; e < this._geometries.length; e++) t = Math.max(t, this._geometries[e].getDimension());\n          return t;\n        }\n      }, {\n        key: \"getLength\",\n        value: function () {\n          for (var t = 0, e = 0; e < this._geometries.length; e++) t += this._geometries[e].getLength();\n          return t;\n        }\n      }, {\n        key: \"getNumPoints\",\n        value: function () {\n          for (var t = 0, e = 0; e < this._geometries.length; e++) t += this._geometries[e].getNumPoints();\n          return t;\n        }\n      }, {\n        key: \"getNumGeometries\",\n        value: function () {\n          return this._geometries.length;\n        }\n      }, {\n        key: \"compareToSameClass\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0],\n              e = new Gt(At.asList(this._geometries)),\n              n = new Gt(At.asList(t._geometries));\n            return this.compare(e, n);\n          }\n          if (2 === arguments.length) {\n            for (var i = arguments[1], r = arguments[0], s = this.getNumGeometries(), a = r.getNumGeometries(), o = 0; o < s && o < a;) {\n              var u = this.getGeometryN(o),\n                l = r.getGeometryN(o),\n                h = u.compareToSameClass(l, i);\n              if (0 !== h) return h;\n              o++;\n            }\n            return o < s ? 1 : o < a ? -1 : 0;\n          }\n        }\n      }, {\n        key: \"apply\",\n        value: function () {\n          if (rt(arguments[0], Et)) for (var t = arguments[0], e = 0; e < this._geometries.length; e++) this._geometries[e].apply(t);else if (rt(arguments[0], Rt)) {\n            var n = arguments[0];\n            if (0 === this._geometries.length) return null;\n            for (var i = 0; i < this._geometries.length && (this._geometries[i].apply(n), !n.isDone()); i++);\n            n.isGeometryChanged() && this.geometryChanged();\n          } else if (rt(arguments[0], Ct)) {\n            var r = arguments[0];\n            r.filter(this);\n            for (var s = 0; s < this._geometries.length; s++) this._geometries[s].apply(r);\n          } else if (rt(arguments[0], k)) {\n            var a = arguments[0];\n            a.filter(this);\n            for (var o = 0; o < this._geometries.length; o++) this._geometries[o].apply(a);\n          }\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          return V.checkNotGeometryCollection(this), G.shouldNeverReachHere(), null;\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_GEOMETRYCOLLECTION;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          for (var t = 0; t < this._geometries.length; t++) if (!this._geometries[t].isEmpty()) return !1;\n          return !0;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._geometries = null, 0 === arguments.length) ;else if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            if (V.constructor_.call(this, e), null === t && (t = []), V.hasNullElements(t)) throw new m(\"geometries must not contain null elements\");\n            this._geometries = t;\n          }\n        }\n      }]);\n    }(V),\n    zt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"copyInternal\",\n        value: function () {\n          for (var t = new Array(this._geometries.length).fill(null), e = 0; e < t.length; e++) t[e] = this._geometries[e].copy();\n          return new i(t, this._factory);\n        }\n      }, {\n        key: \"isValid\",\n        value: function () {\n          return !0;\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            return !!this.isEquivalentClass(t) && f(i, \"equalsExact\", this, 1).call(this, t, e);\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          if (1 === arguments.length && Number.isInteger(arguments[0])) {\n            var t = arguments[0];\n            return this._geometries[t].getCoordinate();\n          }\n          return f(i, \"getCoordinate\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return Lt.FALSE;\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_MULTIPOINT;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 0;\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          return this.getFactory().createGeometryCollection();\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_MULTIPOINT;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Ot];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          Yt.constructor_.call(this, t, e);\n        }\n      }]);\n    }(Yt),\n    Xt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"copyInternal\",\n        value: function () {\n          return new i(this._points.copy(), this._factory);\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return Lt.FALSE;\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          return !!this.isEmpty() || f(i, \"isClosed\", this, 1).call(this);\n        }\n      }, {\n        key: \"reverseInternal\",\n        value: function () {\n          var t = this._points.copy();\n          return St.reverse(t), this.getFactory().createLinearRing(t);\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_LINEARRING;\n        }\n      }, {\n        key: \"validateConstruction\",\n        value: function () {\n          if (!this.isEmpty() && !f(i, \"isClosed\", this, 1).call(this)) throw new m(\"Points of LinearRing do not form a closed linestring\");\n          if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < i.MINIMUM_VALID_SIZE) throw new m(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_LINEARRING;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          wt.constructor_.call(this, t, e), this.validateConstruction();\n        }\n      }]);\n    }(wt);\n  Xt.MINIMUM_VALID_SIZE = 4;\n  var Bt = function (t) {\n    function i() {\n      var t;\n      return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n    }\n    return l(i, t), s(i, [{\n      key: \"setOrdinate\",\n      value: function (t, e) {\n        switch (t) {\n          case i.X:\n            this.x = e;\n            break;\n          case i.Y:\n            this.y = e;\n            break;\n          default:\n            throw new m(\"Invalid ordinate index: \" + t);\n        }\n      }\n    }, {\n      key: \"getZ\",\n      value: function () {\n        return X.NULL_ORDINATE;\n      }\n    }, {\n      key: \"getOrdinate\",\n      value: function (t) {\n        switch (t) {\n          case i.X:\n            return this.x;\n          case i.Y:\n            return this.y;\n        }\n        throw new m(\"Invalid ordinate index: \" + t);\n      }\n    }, {\n      key: \"setZ\",\n      value: function (t) {\n        throw new m(\"CoordinateXY dimension 2 does not support z-ordinate\");\n      }\n    }, {\n      key: \"copy\",\n      value: function () {\n        return new i(this);\n      }\n    }, {\n      key: \"toString\",\n      value: function () {\n        return \"(\" + this.x + \", \" + this.y + \")\";\n      }\n    }, {\n      key: \"setCoordinate\",\n      value: function (t) {\n        this.x = t.x, this.y = t.y, this.z = t.getZ();\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        if (0 === arguments.length) X.constructor_.call(this);else if (1 === arguments.length) {\n          if (arguments[0] instanceof i) {\n            var t = arguments[0];\n            X.constructor_.call(this, t.x, t.y);\n          } else if (arguments[0] instanceof X) {\n            var e = arguments[0];\n            X.constructor_.call(this, e.x, e.y);\n          }\n        } else if (2 === arguments.length) {\n          var n = arguments[0],\n            r = arguments[1];\n          X.constructor_.call(this, n, r, X.NULL_ORDINATE);\n        }\n      }\n    }]);\n  }(X);\n  Bt.X = 0, Bt.Y = 1, Bt.Z = -1, Bt.M = -1;\n  var Ut = function (t) {\n    function i() {\n      var t;\n      return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n    }\n    return l(i, t), s(i, [{\n      key: \"getM\",\n      value: function () {\n        return this._m;\n      }\n    }, {\n      key: \"setOrdinate\",\n      value: function (t, e) {\n        switch (t) {\n          case i.X:\n            this.x = e;\n            break;\n          case i.Y:\n            this.y = e;\n            break;\n          case i.M:\n            this._m = e;\n            break;\n          default:\n            throw new m(\"Invalid ordinate index: \" + t);\n        }\n      }\n    }, {\n      key: \"setM\",\n      value: function (t) {\n        this._m = t;\n      }\n    }, {\n      key: \"getZ\",\n      value: function () {\n        return X.NULL_ORDINATE;\n      }\n    }, {\n      key: \"getOrdinate\",\n      value: function (t) {\n        switch (t) {\n          case i.X:\n            return this.x;\n          case i.Y:\n            return this.y;\n          case i.M:\n            return this._m;\n        }\n        throw new m(\"Invalid ordinate index: \" + t);\n      }\n    }, {\n      key: \"setZ\",\n      value: function (t) {\n        throw new m(\"CoordinateXY dimension 2 does not support z-ordinate\");\n      }\n    }, {\n      key: \"copy\",\n      value: function () {\n        return new i(this);\n      }\n    }, {\n      key: \"toString\",\n      value: function () {\n        return \"(\" + this.x + \", \" + this.y + \" m=\" + this.getM() + \")\";\n      }\n    }, {\n      key: \"setCoordinate\",\n      value: function (t) {\n        this.x = t.x, this.y = t.y, this.z = t.getZ(), this._m = t.getM();\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        if (this._m = null, 0 === arguments.length) X.constructor_.call(this), this._m = 0;else if (1 === arguments.length) {\n          if (arguments[0] instanceof i) {\n            var t = arguments[0];\n            X.constructor_.call(this, t.x, t.y), this._m = t._m;\n          } else if (arguments[0] instanceof X) {\n            var e = arguments[0];\n            X.constructor_.call(this, e.x, e.y), this._m = this.getM();\n          }\n        } else if (3 === arguments.length) {\n          var n = arguments[0],\n            r = arguments[1],\n            s = arguments[2];\n          X.constructor_.call(this, n, r, X.NULL_ORDINATE), this._m = s;\n        }\n      }\n    }]);\n  }(X);\n  Ut.X = 0, Ut.Y = 1, Ut.Z = -1, Ut.M = 2;\n  var Vt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"getM\",\n        value: function () {\n          return this._m;\n        }\n      }, {\n        key: \"setOrdinate\",\n        value: function (t, e) {\n          switch (t) {\n            case X.X:\n              this.x = e;\n              break;\n            case X.Y:\n              this.y = e;\n              break;\n            case X.Z:\n              this.z = e;\n              break;\n            case X.M:\n              this._m = e;\n              break;\n            default:\n              throw new m(\"Invalid ordinate index: \" + t);\n          }\n        }\n      }, {\n        key: \"setM\",\n        value: function (t) {\n          this._m = t;\n        }\n      }, {\n        key: \"getOrdinate\",\n        value: function (t) {\n          switch (t) {\n            case X.X:\n              return this.x;\n            case X.Y:\n              return this.y;\n            case X.Z:\n              return this.getZ();\n            case X.M:\n              return this.getM();\n          }\n          throw new m(\"Invalid ordinate index: \" + t);\n        }\n      }, {\n        key: \"copy\",\n        value: function () {\n          return new i(this);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return \"(\" + this.x + \", \" + this.y + \", \" + this.getZ() + \" m=\" + this.getM() + \")\";\n        }\n      }, {\n        key: \"setCoordinate\",\n        value: function (t) {\n          this.x = t.x, this.y = t.y, this.z = t.getZ(), this._m = t.getM();\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._m = null, 0 === arguments.length) X.constructor_.call(this), this._m = 0;else if (1 === arguments.length) {\n            if (arguments[0] instanceof i) {\n              var t = arguments[0];\n              X.constructor_.call(this, t), this._m = t._m;\n            } else if (arguments[0] instanceof X) {\n              var e = arguments[0];\n              X.constructor_.call(this, e), this._m = this.getM();\n            }\n          } else if (4 === arguments.length) {\n            var n = arguments[0],\n              r = arguments[1],\n              s = arguments[2],\n              a = arguments[3];\n            X.constructor_.call(this, n, r, s), this._m = a;\n          }\n        }\n      }]);\n    }(X),\n    Ht = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"measures\",\n        value: function (t) {\n          return t instanceof Bt ? 0 : t instanceof Ut || t instanceof Vt ? 1 : 0;\n        }\n      }, {\n        key: \"dimension\",\n        value: function (t) {\n          return t instanceof Bt ? 2 : t instanceof Ut ? 3 : t instanceof Vt ? 4 : 3;\n        }\n      }, {\n        key: \"create\",\n        value: function () {\n          if (1 === arguments.length) {\n            var e = arguments[0];\n            return t.create(e, 0);\n          }\n          if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1];\n            return 2 === n ? new Bt() : 3 === n && 0 === i ? new X() : 3 === n && 1 === i ? new Ut() : 4 === n && 1 === i ? new Vt() : new X();\n          }\n        }\n      }]);\n    }(),\n    Zt = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"getCoordinate\",\n        value: function (t) {\n          return this.get(t);\n        }\n      }, {\n        key: \"addAll\",\n        value: function () {\n          if (2 === arguments.length && \"boolean\" == typeof arguments[1] && rt(arguments[0], Z)) {\n            for (var t = arguments[1], e = !1, n = arguments[0].iterator(); n.hasNext();) this.add(n.next(), t), e = !0;\n            return e;\n          }\n          return f(i, \"addAll\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          for (var t = f(i, \"clone\", this, 1).call(this), e = 0; e < this.size(); e++) t.add(e, this.get(e).clone());\n          return t;\n        }\n      }, {\n        key: \"toCoordinateArray\",\n        value: function () {\n          if (0 === arguments.length) return this.toArray(i.coordArrayType);\n          if (1 === arguments.length) {\n            if (arguments[0]) return this.toArray(i.coordArrayType);\n            for (var t = this.size(), e = new Array(t).fill(null), n = 0; n < t; n++) e[n] = this.get(t - n - 1);\n            return e;\n          }\n        }\n      }, {\n        key: \"add\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return f(i, \"add\", this, 1).call(this, t);\n          }\n          if (2 === arguments.length) {\n            if (arguments[0] instanceof Array && \"boolean\" == typeof arguments[1]) {\n              var e = arguments[0],\n                n = arguments[1];\n              return this.add(e, n, !0), !0;\n            }\n            if (arguments[0] instanceof X && \"boolean\" == typeof arguments[1]) {\n              var r = arguments[0];\n              if (!arguments[1] && this.size() >= 1) if (this.get(this.size() - 1).equals2D(r)) return null;\n              f(i, \"add\", this, 1).call(this, r);\n            } else if (arguments[0] instanceof Object && \"boolean\" == typeof arguments[1]) {\n              var s = arguments[0],\n                a = arguments[1];\n              return this.add(s, a), !0;\n            }\n          } else if (3 === arguments.length) {\n            if (\"boolean\" == typeof arguments[2] && arguments[0] instanceof Array && \"boolean\" == typeof arguments[1]) {\n              var o = arguments[0],\n                u = arguments[1];\n              if (arguments[2]) for (var l = 0; l < o.length; l++) this.add(o[l], u);else for (var h = o.length - 1; h >= 0; h--) this.add(o[h], u);\n              return !0;\n            }\n            if (\"boolean\" == typeof arguments[2] && Number.isInteger(arguments[0]) && arguments[1] instanceof X) {\n              var c = arguments[0],\n                g = arguments[1];\n              if (!arguments[2]) {\n                var v = this.size();\n                if (v > 0) {\n                  if (c > 0) if (this.get(c - 1).equals2D(g)) return null;\n                  if (c < v) if (this.get(c).equals2D(g)) return null;\n                }\n              }\n              f(i, \"add\", this, 1).call(this, c, g);\n            }\n          } else if (4 === arguments.length) {\n            var y = arguments[0],\n              d = arguments[1],\n              _ = arguments[2],\n              p = arguments[3],\n              m = 1;\n            _ > p && (m = -1);\n            for (var k = _; k !== p; k += m) this.add(y[k], d);\n            return !0;\n          }\n        }\n      }, {\n        key: \"closeRing\",\n        value: function () {\n          if (this.size() > 0) {\n            var t = this.get(0).copy();\n            this.add(t, !1);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (0 === arguments.length) ;else if (1 === arguments.length) {\n            var t = arguments[0];\n            this.ensureCapacity(t.length), this.add(t, !0);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this.ensureCapacity(e.length), this.add(e, n);\n          }\n        }\n      }]);\n    }(yt);\n  Zt.coordArrayType = new Array(0).fill(null);\n  var jt = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"isRing\",\n        value: function (t) {\n          return !(t.length < 4) && !!t[0].equals2D(t[t.length - 1]);\n        }\n      }, {\n        key: \"ptNotInList\",\n        value: function (e, n) {\n          for (var i = 0; i < e.length; i++) {\n            var r = e[i];\n            if (t.indexOf(r, n) < 0) return r;\n          }\n          return null;\n        }\n      }, {\n        key: \"scroll\",\n        value: function (e, n) {\n          var i = t.indexOf(n, e);\n          if (i < 0) return null;\n          var r = new Array(e.length).fill(null);\n          mt.arraycopy(e, i, r, 0, e.length - i), mt.arraycopy(e, 0, r, e.length - i, i), mt.arraycopy(r, 0, e, 0, e.length);\n        }\n      }, {\n        key: \"equals\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            if (t === e) return !0;\n            if (null === t || null === e) return !1;\n            if (t.length !== e.length) return !1;\n            for (var n = 0; n < t.length; n++) if (!t[n].equals(e[n])) return !1;\n            return !0;\n          }\n          if (3 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1],\n              s = arguments[2];\n            if (i === r) return !0;\n            if (null === i || null === r) return !1;\n            if (i.length !== r.length) return !1;\n            for (var a = 0; a < i.length; a++) if (0 !== s.compare(i[a], r[a])) return !1;\n            return !0;\n          }\n        }\n      }, {\n        key: \"intersection\",\n        value: function (t, e) {\n          for (var n = new Zt(), i = 0; i < t.length; i++) e.intersects(t[i]) && n.add(t[i], !0);\n          return n.toCoordinateArray();\n        }\n      }, {\n        key: \"measures\",\n        value: function (t) {\n          if (null === t || 0 === t.length) return 0;\n          var e,\n            n = 0,\n            i = a(t);\n          try {\n            for (i.s(); !(e = i.n()).done;) {\n              var r = e.value;\n              n = Math.max(n, Ht.measures(r));\n            }\n          } catch (t) {\n            i.e(t);\n          } finally {\n            i.f();\n          }\n          return n;\n        }\n      }, {\n        key: \"hasRepeatedPoints\",\n        value: function (t) {\n          for (var e = 1; e < t.length; e++) if (t[e - 1].equals(t[e])) return !0;\n          return !1;\n        }\n      }, {\n        key: \"removeRepeatedPoints\",\n        value: function (e) {\n          return t.hasRepeatedPoints(e) ? new Zt(e, !1).toCoordinateArray() : e;\n        }\n      }, {\n        key: \"reverse\",\n        value: function (t) {\n          for (var e = t.length - 1, n = Math.trunc(e / 2), i = 0; i <= n; i++) {\n            var r = t[i];\n            t[i] = t[e - i], t[e - i] = r;\n          }\n        }\n      }, {\n        key: \"removeNull\",\n        value: function (t) {\n          for (var e = 0, n = 0; n < t.length; n++) null !== t[n] && e++;\n          var i = new Array(e).fill(null);\n          if (0 === e) return i;\n          for (var r = 0, s = 0; s < t.length; s++) null !== t[s] && (i[r++] = t[s]);\n          return i;\n        }\n      }, {\n        key: \"copyDeep\",\n        value: function () {\n          if (1 === arguments.length) {\n            for (var t = arguments[0], e = new Array(t.length).fill(null), n = 0; n < t.length; n++) e[n] = t[n].copy();\n            return e;\n          }\n          if (5 === arguments.length) for (var i = arguments[0], r = arguments[1], s = arguments[2], a = arguments[3], o = arguments[4], u = 0; u < o; u++) s[a + u] = i[r + u].copy();\n        }\n      }, {\n        key: \"isEqualReversed\",\n        value: function (t, e) {\n          for (var n = 0; n < t.length; n++) {\n            var i = t[n],\n              r = e[t.length - n - 1];\n            if (0 !== i.compareTo(r)) return !1;\n          }\n          return !0;\n        }\n      }, {\n        key: \"envelope\",\n        value: function (t) {\n          for (var e = new U(), n = 0; n < t.length; n++) e.expandToInclude(t[n]);\n          return e;\n        }\n      }, {\n        key: \"toCoordinateArray\",\n        value: function (e) {\n          return e.toArray(t.coordArrayType);\n        }\n      }, {\n        key: \"dimension\",\n        value: function (t) {\n          if (null === t || 0 === t.length) return 3;\n          var e,\n            n = 0,\n            i = a(t);\n          try {\n            for (i.s(); !(e = i.n()).done;) {\n              var r = e.value;\n              n = Math.max(n, Ht.dimension(r));\n            }\n          } catch (t) {\n            i.e(t);\n          } finally {\n            i.f();\n          }\n          return n;\n        }\n      }, {\n        key: \"atLeastNCoordinatesOrNothing\",\n        value: function (t, e) {\n          return e.length >= t ? e : [];\n        }\n      }, {\n        key: \"indexOf\",\n        value: function (t, e) {\n          for (var n = 0; n < e.length; n++) if (t.equals(e[n])) return n;\n          return -1;\n        }\n      }, {\n        key: \"increasingDirection\",\n        value: function (t) {\n          for (var e = 0; e < Math.trunc(t.length / 2); e++) {\n            var n = t.length - 1 - e,\n              i = t[e].compareTo(t[n]);\n            if (0 !== i) return i;\n          }\n          return 1;\n        }\n      }, {\n        key: \"compare\",\n        value: function (t, e) {\n          for (var n = 0; n < t.length && n < e.length;) {\n            var i = t[n].compareTo(e[n]);\n            if (0 !== i) return i;\n            n++;\n          }\n          return n < e.length ? -1 : n < t.length ? 1 : 0;\n        }\n      }, {\n        key: \"minCoordinate\",\n        value: function (t) {\n          for (var e = null, n = 0; n < t.length; n++) (null === e || e.compareTo(t[n]) > 0) && (e = t[n]);\n          return e;\n        }\n      }, {\n        key: \"extract\",\n        value: function (t, e, n) {\n          e = kt.clamp(e, 0, t.length);\n          var i = (n = kt.clamp(n, -1, t.length)) - e + 1;\n          n < 0 && (i = 0), e >= t.length && (i = 0), n < e && (i = 0);\n          var r = new Array(i).fill(null);\n          if (0 === i) return r;\n          for (var s = 0, a = e; a <= n; a++) r[s++] = t[a];\n          return r;\n        }\n      }]);\n    }(),\n    Wt = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"compare\",\n        value: function (t, e) {\n          var n = t,\n            i = e;\n          return jt.compare(n, i);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [P];\n        }\n      }]);\n    }(),\n    Kt = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"compare\",\n        value: function (t, e) {\n          var n = t,\n            i = e;\n          if (n.length < i.length) return -1;\n          if (n.length > i.length) return 1;\n          if (0 === n.length) return 0;\n          var r = jt.compare(n, i);\n          return jt.isEqualReversed(n, i) ? 0 : r;\n        }\n      }, {\n        key: \"OLDcompare\",\n        value: function (t, e) {\n          var n = t,\n            i = e;\n          if (n.length < i.length) return -1;\n          if (n.length > i.length) return 1;\n          if (0 === n.length) return 0;\n          for (var r = jt.increasingDirection(n), s = jt.increasingDirection(i), a = r > 0 ? 0 : n.length - 1, o = s > 0 ? 0 : n.length - 1, u = 0; u < n.length; u++) {\n            var l = n[a].compareTo(i[o]);\n            if (0 !== l) return l;\n            a += r, o += s;\n          }\n          return 0;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [P];\n        }\n      }]);\n    }();\n  jt.ForwardComparator = Wt, jt.BidirectionalComparator = Kt, jt.coordArrayType = new Array(0).fill(null);\n  var Jt = function () {\n      return s(function t(e) {\n        n(this, t), this.str = e;\n      }, [{\n        key: \"append\",\n        value: function (t) {\n          this.str += t;\n        }\n      }, {\n        key: \"setCharAt\",\n        value: function (t, e) {\n          this.str = this.str.substr(0, t) + e + this.str.substr(t + 1);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this.str;\n        }\n      }]);\n    }(),\n    Qt = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getM\",\n        value: function (t) {\n          return this.hasM() ? this._coordinates[t].getM() : A.NaN;\n        }\n      }, {\n        key: \"setOrdinate\",\n        value: function (t, e, n) {\n          switch (e) {\n            case ht.X:\n              this._coordinates[t].x = n;\n              break;\n            case ht.Y:\n              this._coordinates[t].y = n;\n              break;\n            default:\n              this._coordinates[t].setOrdinate(e, n);\n          }\n        }\n      }, {\n        key: \"getZ\",\n        value: function (t) {\n          return this.hasZ() ? this._coordinates[t].getZ() : A.NaN;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this._coordinates.length;\n        }\n      }, {\n        key: \"getOrdinate\",\n        value: function (t, e) {\n          switch (e) {\n            case ht.X:\n              return this._coordinates[t].x;\n            case ht.Y:\n              return this._coordinates[t].y;\n            default:\n              return this._coordinates[t].getOrdinate(e);\n          }\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this._coordinates[t];\n          }\n          if (2 === arguments.length) {\n            var e = arguments[0];\n            arguments[1].setCoordinate(this._coordinates[e]);\n          }\n        }\n      }, {\n        key: \"getCoordinateCopy\",\n        value: function (t) {\n          var e = this.createCoordinate();\n          return e.setCoordinate(this._coordinates[t]), e;\n        }\n      }, {\n        key: \"createCoordinate\",\n        value: function () {\n          return Ht.create(this.getDimension(), this.getMeasures());\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return this._dimension;\n        }\n      }, {\n        key: \"getX\",\n        value: function (t) {\n          return this._coordinates[t].x;\n        }\n      }, {\n        key: \"getMeasures\",\n        value: function () {\n          return this._measures;\n        }\n      }, {\n        key: \"expandEnvelope\",\n        value: function (t) {\n          for (var e = 0; e < this._coordinates.length; e++) t.expandToInclude(this._coordinates[e]);\n          return t;\n        }\n      }, {\n        key: \"copy\",\n        value: function () {\n          for (var e = new Array(this.size()).fill(null), n = 0; n < this._coordinates.length; n++) {\n            var i = this.createCoordinate();\n            i.setCoordinate(this._coordinates[n]), e[n] = i;\n          }\n          return new t(e, this._dimension, this._measures);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          if (this._coordinates.length > 0) {\n            var t = new Jt(17 * this._coordinates.length);\n            t.append(\"(\"), t.append(this._coordinates[0]);\n            for (var e = 1; e < this._coordinates.length; e++) t.append(\", \"), t.append(this._coordinates[e]);\n            return t.append(\")\"), t.toString();\n          }\n          return \"()\";\n        }\n      }, {\n        key: \"getY\",\n        value: function (t) {\n          return this._coordinates[t].y;\n        }\n      }, {\n        key: \"toCoordinateArray\",\n        value: function () {\n          return this._coordinates;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [ht, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._dimension = 3, this._measures = 0, this._coordinates = null, 1 === arguments.length) {\n            if (arguments[0] instanceof Array) {\n              var e = arguments[0];\n              t.constructor_.call(this, e, jt.dimension(e), jt.measures(e));\n            } else if (Number.isInteger(arguments[0])) {\n              var n = arguments[0];\n              this._coordinates = new Array(n).fill(null);\n              for (var i = 0; i < n; i++) this._coordinates[i] = new X();\n            } else if (rt(arguments[0], ht)) {\n              var r = arguments[0];\n              if (null === r) return this._coordinates = new Array(0).fill(null), null;\n              this._dimension = r.getDimension(), this._measures = r.getMeasures(), this._coordinates = new Array(r.size()).fill(null);\n              for (var s = 0; s < this._coordinates.length; s++) this._coordinates[s] = r.getCoordinateCopy(s);\n            }\n          } else if (2 === arguments.length) {\n            if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n              var a = arguments[0],\n                o = arguments[1];\n              t.constructor_.call(this, a, o, jt.measures(a));\n            } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n              var u = arguments[0],\n                l = arguments[1];\n              this._coordinates = new Array(u).fill(null), this._dimension = l;\n              for (var h = 0; h < u; h++) this._coordinates[h] = Ht.create(l);\n            }\n          } else if (3 === arguments.length) if (Number.isInteger(arguments[2]) && arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n            var c = arguments[0],\n              f = arguments[1],\n              g = arguments[2];\n            this._dimension = f, this._measures = g, this._coordinates = null === c ? new Array(0).fill(null) : c;\n          } else if (Number.isInteger(arguments[2]) && Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n            var v = arguments[0],\n              y = arguments[1],\n              d = arguments[2];\n            this._coordinates = new Array(v).fill(null), this._dimension = y, this._measures = d;\n            for (var _ = 0; _ < v; _++) this._coordinates[_] = this.createCoordinate();\n          }\n        }\n      }]);\n    }(),\n    $t = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, [{\n        key: \"readResolve\",\n        value: function () {\n          return t.instance();\n        }\n      }, {\n        key: \"create\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof Array) return new Qt(arguments[0]);\n            if (rt(arguments[0], ht)) return new Qt(arguments[0]);\n          } else {\n            if (2 === arguments.length) {\n              var t = arguments[1];\n              return t > 3 && (t = 3), t < 2 && (t = 2), new Qt(arguments[0], t);\n            }\n            if (3 === arguments.length) {\n              var e = arguments[2],\n                n = arguments[1] - e;\n              return e > 1 && (e = 1), n > 3 && (n = 3), n < 2 && (n = 2), new Qt(arguments[0], n + e, e);\n            }\n          }\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [It, E];\n        }\n      }], [{\n        key: \"instance\",\n        value: function () {\n          return t.instanceObject;\n        }\n      }]);\n    }();\n  $t.instanceObject = new $t();\n  var te = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"copyInternal\",\n        value: function () {\n          for (var t = new Array(this._geometries.length).fill(null), e = 0; e < t.length; e++) t[e] = this._geometries[e].copy();\n          return new i(t, this._factory);\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            return !!this.isEquivalentClass(t) && f(i, \"equalsExact\", this, 1).call(this, t, e);\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return 1;\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_MULTIPOLYGON;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 2;\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          if (this.isEmpty()) return this.getFactory().createMultiLineString();\n          for (var t = new yt(), e = 0; e < this._geometries.length; e++) for (var n = this._geometries[e].getBoundary(), i = 0; i < n.getNumGeometries(); i++) t.add(n.getGeometryN(i));\n          var r = new Array(t.size()).fill(null);\n          return this.getFactory().createMultiLineString(t.toArray(r));\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_MULTIPOLYGON;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Pt];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          Yt.constructor_.call(this, t, e);\n        }\n      }]);\n    }(Yt),\n    ee = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"get\",\n        value: function () {}\n      }, {\n        key: \"put\",\n        value: function () {}\n      }, {\n        key: \"size\",\n        value: function () {}\n      }, {\n        key: \"values\",\n        value: function () {}\n      }, {\n        key: \"entrySet\",\n        value: function () {}\n      }]);\n    }(),\n    ne = function (t) {\n      function i() {\n        var t;\n        return n(this, i), (t = e(this, i)).map = new Map(), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"get\",\n        value: function (t) {\n          return this.map.get(t) || null;\n        }\n      }, {\n        key: \"put\",\n        value: function (t, e) {\n          return this.map.set(t, e), e;\n        }\n      }, {\n        key: \"values\",\n        value: function () {\n          for (var t = new yt(), e = this.map.values(), n = e.next(); !n.done;) t.add(n.value), n = e.next();\n          return t;\n        }\n      }, {\n        key: \"entrySet\",\n        value: function () {\n          var t = new J();\n          return this.map.entries().forEach(function (e) {\n            return t.add(e);\n          }), t;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.map.size();\n        }\n      }]);\n    }(ee),\n    ie = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"equals\",\n        value: function (e) {\n          if (!(e instanceof t)) return !1;\n          var n = e;\n          return this._modelType === n._modelType && this._scale === n._scale;\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t,\n            n = this.getMaximumSignificantDigits(),\n            i = e.getMaximumSignificantDigits();\n          return at.compare(n, i);\n        }\n      }, {\n        key: \"getScale\",\n        value: function () {\n          return this._scale;\n        }\n      }, {\n        key: \"isFloating\",\n        value: function () {\n          return this._modelType === t.FLOATING || this._modelType === t.FLOATING_SINGLE;\n        }\n      }, {\n        key: \"getType\",\n        value: function () {\n          return this._modelType;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var e = \"UNKNOWN\";\n          return this._modelType === t.FLOATING ? e = \"Floating\" : this._modelType === t.FLOATING_SINGLE ? e = \"Floating-Single\" : this._modelType === t.FIXED && (e = \"Fixed (Scale=\" + this.getScale() + \")\"), e;\n        }\n      }, {\n        key: \"makePrecise\",\n        value: function () {\n          if (\"number\" == typeof arguments[0]) {\n            var e = arguments[0];\n            return A.isNaN(e) || this._modelType === t.FLOATING_SINGLE ? e : this._modelType === t.FIXED ? Math.round(e * this._scale) / this._scale : e;\n          }\n          if (arguments[0] instanceof X) {\n            var n = arguments[0];\n            if (this._modelType === t.FLOATING) return null;\n            n.x = this.makePrecise(n.x), n.y = this.makePrecise(n.y);\n          }\n        }\n      }, {\n        key: \"getMaximumSignificantDigits\",\n        value: function () {\n          var e = 16;\n          return this._modelType === t.FLOATING ? e = 16 : this._modelType === t.FLOATING_SINGLE ? e = 6 : this._modelType === t.FIXED && (e = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))), e;\n        }\n      }, {\n        key: \"setScale\",\n        value: function (t) {\n          this._scale = Math.abs(t);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [E, x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._modelType = null, this._scale = null, 0 === arguments.length) this._modelType = t.FLOATING;else if (1 === arguments.length) if (arguments[0] instanceof re) {\n            var e = arguments[0];\n            this._modelType = e, e === t.FIXED && this.setScale(1);\n          } else if (\"number\" == typeof arguments[0]) {\n            var n = arguments[0];\n            this._modelType = t.FIXED, this.setScale(n);\n          } else if (arguments[0] instanceof t) {\n            var i = arguments[0];\n            this._modelType = i._modelType, this._scale = i._scale;\n          }\n        }\n      }, {\n        key: \"mostPrecise\",\n        value: function (t, e) {\n          return t.compareTo(e) >= 0 ? t : e;\n        }\n      }]);\n    }(),\n    re = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"readResolve\",\n        value: function () {\n          return t.nameToTypeMap.get(this._name);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this._name;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._name = null;\n          var e = arguments[0];\n          this._name = e, t.nameToTypeMap.put(e, this);\n        }\n      }]);\n    }();\n  re.nameToTypeMap = new ne(), ie.Type = re, ie.FIXED = new re(\"FIXED\"), ie.FLOATING = new re(\"FLOATING\"), ie.FLOATING_SINGLE = new re(\"FLOATING SINGLE\"), ie.maximumPreciseValue = 9007199254740992;\n  var se = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"copyInternal\",\n        value: function () {\n          for (var t = new Array(this._geometries.length).fill(null), e = 0; e < t.length; e++) t[e] = this._geometries[e].copy();\n          return new i(t, this._factory);\n        }\n      }, {\n        key: \"equalsExact\",\n        value: function () {\n          if (2 === arguments.length && \"number\" == typeof arguments[1] && arguments[0] instanceof V) {\n            var t = arguments[0],\n              e = arguments[1];\n            return !!this.isEquivalentClass(t) && f(i, \"equalsExact\", this, 1).call(this, t, e);\n          }\n          return f(i, \"equalsExact\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"getBoundaryDimension\",\n        value: function () {\n          return this.isClosed() ? Lt.FALSE : 0;\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          if (this.isEmpty()) return !1;\n          for (var t = 0; t < this._geometries.length; t++) if (!this._geometries[t].isClosed()) return !1;\n          return !0;\n        }\n      }, {\n        key: \"getTypeCode\",\n        value: function () {\n          return V.TYPECODE_MULTILINESTRING;\n        }\n      }, {\n        key: \"getDimension\",\n        value: function () {\n          return 1;\n        }\n      }, {\n        key: \"getBoundary\",\n        value: function () {\n          throw new W();\n        }\n      }, {\n        key: \"getGeometryType\",\n        value: function () {\n          return V.TYPENAME_MULTILINESTRING;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Tt];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          Yt.constructor_.call(this, t, e);\n        }\n      }]);\n    }(Yt),\n    ae = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"createEmpty\",\n        value: function (t) {\n          switch (t) {\n            case -1:\n              return this.createGeometryCollection();\n            case 0:\n              return this.createPoint();\n            case 1:\n              return this.createLineString();\n            case 2:\n              return this.createPolygon();\n            default:\n              throw new m(\"Invalid dimension: \" + t);\n          }\n        }\n      }, {\n        key: \"toGeometry\",\n        value: function (t) {\n          return t.isNull() ? this.createPoint() : t.getMinX() === t.getMaxX() && t.getMinY() === t.getMaxY() ? this.createPoint(new X(t.getMinX(), t.getMinY())) : t.getMinX() === t.getMaxX() || t.getMinY() === t.getMaxY() ? this.createLineString([new X(t.getMinX(), t.getMinY()), new X(t.getMaxX(), t.getMaxY())]) : this.createPolygon(this.createLinearRing([new X(t.getMinX(), t.getMinY()), new X(t.getMinX(), t.getMaxY()), new X(t.getMaxX(), t.getMaxY()), new X(t.getMaxX(), t.getMinY()), new X(t.getMinX(), t.getMinY())]), null);\n        }\n      }, {\n        key: \"createLineString\",\n        value: function () {\n          if (0 === arguments.length) return this.createLineString(this.getCoordinateSequenceFactory().create([]));\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof Array) {\n              var t = arguments[0];\n              return this.createLineString(null !== t ? this.getCoordinateSequenceFactory().create(t) : null);\n            }\n            if (rt(arguments[0], ht)) return new wt(arguments[0], this);\n          }\n        }\n      }, {\n        key: \"createMultiLineString\",\n        value: function () {\n          return 0 === arguments.length ? new se(null, this) : 1 === arguments.length ? new se(arguments[0], this) : void 0;\n        }\n      }, {\n        key: \"buildGeometry\",\n        value: function (e) {\n          for (var n = null, i = !1, r = !1, s = e.iterator(); s.hasNext();) {\n            var a = s.next(),\n              o = a.getTypeCode();\n            null === n && (n = o), o !== n && (i = !0), a instanceof Yt && (r = !0);\n          }\n          if (null === n) return this.createGeometryCollection();\n          if (i || r) return this.createGeometryCollection(t.toGeometryArray(e));\n          var u = e.iterator().next();\n          if (e.size() > 1) {\n            if (u instanceof Dt) return this.createMultiPolygon(t.toPolygonArray(e));\n            if (u instanceof wt) return this.createMultiLineString(t.toLineStringArray(e));\n            if (u instanceof bt) return this.createMultiPoint(t.toPointArray(e));\n            G.shouldNeverReachHere(\"Unhandled geometry type: \" + u.getGeometryType());\n          }\n          return u;\n        }\n      }, {\n        key: \"createMultiPointFromCoords\",\n        value: function (t) {\n          return this.createMultiPoint(null !== t ? this.getCoordinateSequenceFactory().create(t) : null);\n        }\n      }, {\n        key: \"createPoint\",\n        value: function () {\n          if (0 === arguments.length) return this.createPoint(this.getCoordinateSequenceFactory().create([]));\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof X) {\n              var t = arguments[0];\n              return this.createPoint(null !== t ? this.getCoordinateSequenceFactory().create([t]) : null);\n            }\n            if (rt(arguments[0], ht)) return new bt(arguments[0], this);\n          }\n        }\n      }, {\n        key: \"getCoordinateSequenceFactory\",\n        value: function () {\n          return this._coordinateSequenceFactory;\n        }\n      }, {\n        key: \"createPolygon\",\n        value: function () {\n          if (0 === arguments.length) return this.createPolygon(null, null);\n          if (1 === arguments.length) {\n            if (rt(arguments[0], ht)) {\n              var t = arguments[0];\n              return this.createPolygon(this.createLinearRing(t));\n            }\n            if (arguments[0] instanceof Array) {\n              var e = arguments[0];\n              return this.createPolygon(this.createLinearRing(e));\n            }\n            if (arguments[0] instanceof Xt) {\n              var n = arguments[0];\n              return this.createPolygon(n, null);\n            }\n          } else if (2 === arguments.length) {\n            return new Dt(arguments[0], arguments[1], this);\n          }\n        }\n      }, {\n        key: \"getSRID\",\n        value: function () {\n          return this._SRID;\n        }\n      }, {\n        key: \"createGeometryCollection\",\n        value: function () {\n          return 0 === arguments.length ? new Yt(null, this) : 1 === arguments.length ? new Yt(arguments[0], this) : void 0;\n        }\n      }, {\n        key: \"getPrecisionModel\",\n        value: function () {\n          return this._precisionModel;\n        }\n      }, {\n        key: \"createLinearRing\",\n        value: function () {\n          if (0 === arguments.length) return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof Array) {\n              var t = arguments[0];\n              return this.createLinearRing(null !== t ? this.getCoordinateSequenceFactory().create(t) : null);\n            }\n            if (rt(arguments[0], ht)) return new Xt(arguments[0], this);\n          }\n        }\n      }, {\n        key: \"createMultiPolygon\",\n        value: function () {\n          return 0 === arguments.length ? new te(null, this) : 1 === arguments.length ? new te(arguments[0], this) : void 0;\n        }\n      }, {\n        key: \"createMultiPoint\",\n        value: function () {\n          if (0 === arguments.length) return new zt(null, this);\n          if (1 === arguments.length) {\n            if (arguments[0] instanceof Array) return new zt(arguments[0], this);\n            if (rt(arguments[0], ht)) {\n              var t = arguments[0];\n              if (null === t) return this.createMultiPoint(new Array(0).fill(null));\n              for (var e = new Array(t.size()).fill(null), n = 0; n < t.size(); n++) {\n                var i = this.getCoordinateSequenceFactory().create(1, t.getDimension(), t.getMeasures());\n                St.copy(t, n, i, 0, 1), e[n] = this.createPoint(i);\n              }\n              return this.createMultiPoint(e);\n            }\n          }\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._precisionModel = null, this._coordinateSequenceFactory = null, this._SRID = null, 0 === arguments.length) t.constructor_.call(this, new ie(), 0);else if (1 === arguments.length) {\n            if (rt(arguments[0], It)) {\n              var e = arguments[0];\n              t.constructor_.call(this, new ie(), 0, e);\n            } else if (arguments[0] instanceof ie) {\n              var n = arguments[0];\n              t.constructor_.call(this, n, 0, t.getDefaultCoordinateSequenceFactory());\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            t.constructor_.call(this, i, r, t.getDefaultCoordinateSequenceFactory());\n          } else if (3 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2];\n            this._precisionModel = s, this._coordinateSequenceFactory = o, this._SRID = a;\n          }\n        }\n      }, {\n        key: \"toMultiPolygonArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toGeometryArray\",\n        value: function (t) {\n          if (null === t) return null;\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"getDefaultCoordinateSequenceFactory\",\n        value: function () {\n          return $t.instance();\n        }\n      }, {\n        key: \"toMultiLineStringArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toLineStringArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toMultiPointArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toLinearRingArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toPointArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"toPolygonArray\",\n        value: function (t) {\n          var e = new Array(t.size()).fill(null);\n          return t.toArray(e);\n        }\n      }, {\n        key: \"createPointFromInternalCoord\",\n        value: function (t, e) {\n          return e.getPrecisionModel().makePrecise(t), e.getFactory().createPoint(t);\n        }\n      }]);\n    }(),\n    oe = \"XY\",\n    ue = \"XYZ\",\n    le = \"XYM\",\n    he = \"XYZM\",\n    ce = {\n      POINT: \"Point\",\n      LINE_STRING: \"LineString\",\n      LINEAR_RING: \"LinearRing\",\n      POLYGON: \"Polygon\",\n      MULTI_POINT: \"MultiPoint\",\n      MULTI_LINE_STRING: \"MultiLineString\",\n      MULTI_POLYGON: \"MultiPolygon\",\n      GEOMETRY_COLLECTION: \"GeometryCollection\",\n      CIRCLE: \"Circle\"\n    },\n    fe = \"EMPTY\",\n    ge = 1,\n    ve = 2,\n    ye = 3,\n    de = 4,\n    _e = 5,\n    pe = 6;\n  for (var me in ce) ce[me].toUpperCase();\n  var ke = function () {\n      return s(function t(e) {\n        n(this, t), this.wkt = e, this.index_ = -1;\n      }, [{\n        key: \"isAlpha_\",\n        value: function (t) {\n          return t >= \"a\" && t <= \"z\" || t >= \"A\" && t <= \"Z\";\n        }\n      }, {\n        key: \"isNumeric_\",\n        value: function (t, e) {\n          return t >= \"0\" && t <= \"9\" || \".\" == t && !(void 0 !== e && e);\n        }\n      }, {\n        key: \"isWhiteSpace_\",\n        value: function (t) {\n          return \" \" == t || \"\\t\" == t || \"\\r\" == t || \"\\n\" == t;\n        }\n      }, {\n        key: \"nextChar_\",\n        value: function () {\n          return this.wkt.charAt(++this.index_);\n        }\n      }, {\n        key: \"nextToken\",\n        value: function () {\n          var t,\n            e = this.nextChar_(),\n            n = this.index_,\n            i = e;\n          if (\"(\" == e) t = ve;else if (\",\" == e) t = _e;else if (\")\" == e) t = ye;else if (this.isNumeric_(e) || \"-\" == e) t = de, i = this.readNumber_();else if (this.isAlpha_(e)) t = ge, i = this.readText_();else {\n            if (this.isWhiteSpace_(e)) return this.nextToken();\n            if (\"\" !== e) throw new Error(\"Unexpected character: \" + e);\n            t = pe;\n          }\n          return {\n            position: n,\n            value: i,\n            type: t\n          };\n        }\n      }, {\n        key: \"readNumber_\",\n        value: function () {\n          var t,\n            e = this.index_,\n            n = !1,\n            i = !1;\n          do {\n            \".\" == t ? n = !0 : \"e\" != t && \"E\" != t || (i = !0), t = this.nextChar_();\n          } while (this.isNumeric_(t, n) || !i && (\"e\" == t || \"E\" == t) || i && (\"-\" == t || \"+\" == t));\n          return parseFloat(this.wkt.substring(e, this.index_--));\n        }\n      }, {\n        key: \"readText_\",\n        value: function () {\n          var t,\n            e = this.index_;\n          do {\n            t = this.nextChar_();\n          } while (this.isAlpha_(t));\n          return this.wkt.substring(e, this.index_--).toUpperCase();\n        }\n      }]);\n    }(),\n    xe = function () {\n      return s(function t(e, i) {\n        n(this, t), this.lexer_ = e, this.token_, this.layout_ = oe, this.factory = i;\n      }, [{\n        key: \"consume_\",\n        value: function () {\n          this.token_ = this.lexer_.nextToken();\n        }\n      }, {\n        key: \"isTokenType\",\n        value: function (t) {\n          return this.token_.type == t;\n        }\n      }, {\n        key: \"match\",\n        value: function (t) {\n          var e = this.isTokenType(t);\n          return e && this.consume_(), e;\n        }\n      }, {\n        key: \"parse\",\n        value: function () {\n          return this.consume_(), this.parseGeometry_();\n        }\n      }, {\n        key: \"parseGeometryLayout_\",\n        value: function () {\n          var t = oe,\n            e = this.token_;\n          if (this.isTokenType(ge)) {\n            var n = e.value;\n            \"Z\" === n ? t = ue : \"M\" === n ? t = le : \"ZM\" === n && (t = he), t !== oe && this.consume_();\n          }\n          return t;\n        }\n      }, {\n        key: \"parseGeometryCollectionText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = [];\n            do {\n              t.push(this.parseGeometry_());\n            } while (this.match(_e));\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parsePointText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = this.parsePoint_();\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return null;\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parseLineStringText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = this.parsePointList_();\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parsePolygonText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = this.parseLineStringTextList_();\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parseMultiPointText_\",\n        value: function () {\n          var t;\n          if (this.match(ve)) {\n            if (t = this.token_.type == ve ? this.parsePointTextList_() : this.parsePointList_(), this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parseMultiLineStringText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = this.parseLineStringTextList_();\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parseMultiPolygonText_\",\n        value: function () {\n          if (this.match(ve)) {\n            var t = this.parsePolygonTextList_();\n            if (this.match(ye)) return t;\n          } else if (this.isEmptyGeometry_()) return [];\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parsePoint_\",\n        value: function () {\n          for (var t = [], e = this.layout_.length, n = 0; n < e; ++n) {\n            var i = this.token_;\n            if (!this.match(de)) break;\n            t.push(i.value);\n          }\n          if (t.length == e) return t;\n          throw new Error(this.formatErrorMessage_());\n        }\n      }, {\n        key: \"parsePointList_\",\n        value: function () {\n          for (var t = [this.parsePoint_()]; this.match(_e);) t.push(this.parsePoint_());\n          return t;\n        }\n      }, {\n        key: \"parsePointTextList_\",\n        value: function () {\n          for (var t = [this.parsePointText_()]; this.match(_e);) t.push(this.parsePointText_());\n          return t;\n        }\n      }, {\n        key: \"parseLineStringTextList_\",\n        value: function () {\n          for (var t = [this.parseLineStringText_()]; this.match(_e);) t.push(this.parseLineStringText_());\n          return t;\n        }\n      }, {\n        key: \"parsePolygonTextList_\",\n        value: function () {\n          for (var t = [this.parsePolygonText_()]; this.match(_e);) t.push(this.parsePolygonText_());\n          return t;\n        }\n      }, {\n        key: \"isEmptyGeometry_\",\n        value: function () {\n          var t = this.isTokenType(ge) && this.token_.value == fe;\n          return t && this.consume_(), t;\n        }\n      }, {\n        key: \"formatErrorMessage_\",\n        value: function () {\n          return \"Unexpected `\" + this.token_.value + \"` at position \" + this.token_.position + \" in `\" + this.lexer_.wkt + \"`\";\n        }\n      }, {\n        key: \"parseGeometry_\",\n        value: function () {\n          var t = this.factory,\n            e = function (t) {\n              return i(X, g(t));\n            },\n            n = function (n) {\n              var i = n.map(function (n) {\n                return t.createLinearRing(n.map(e));\n              });\n              return i.length > 1 ? t.createPolygon(i[0], i.slice(1)) : t.createPolygon(i[0]);\n            },\n            r = this.token_;\n          if (this.match(ge)) {\n            var s = r.value;\n            if (this.layout_ = this.parseGeometryLayout_(), \"GEOMETRYCOLLECTION\" == s) {\n              var a = this.parseGeometryCollectionText_();\n              return t.createGeometryCollection(a);\n            }\n            switch (s) {\n              case \"POINT\":\n                var o = this.parsePointText_();\n                return o ? t.createPoint(i(X, g(o))) : t.createPoint();\n              case \"LINESTRING\":\n                var u = this.parseLineStringText_().map(e);\n                return t.createLineString(u);\n              case \"LINEARRING\":\n                var l = this.parseLineStringText_().map(e);\n                return t.createLinearRing(l);\n              case \"POLYGON\":\n                var h = this.parsePolygonText_();\n                return h && 0 !== h.length ? n(h) : t.createPolygon();\n              case \"MULTIPOINT\":\n                var c = this.parseMultiPointText_();\n                if (!c || 0 === c.length) return t.createMultiPoint();\n                var f = c.map(e).map(function (e) {\n                  return t.createPoint(e);\n                });\n                return t.createMultiPoint(f);\n              case \"MULTILINESTRING\":\n                var v = this.parseMultiLineStringText_().map(function (n) {\n                  return t.createLineString(n.map(e));\n                });\n                return t.createMultiLineString(v);\n              case \"MULTIPOLYGON\":\n                var y = this.parseMultiPolygonText_();\n                if (!y || 0 === y.length) return t.createMultiPolygon();\n                var d = y.map(n);\n                return t.createMultiPolygon(d);\n              default:\n                throw new Error(\"Invalid geometry type: \" + s);\n            }\n          }\n          throw new Error(this.formatErrorMessage_());\n        }\n      }]);\n    }();\n  function Ie(t) {\n    if (t.isEmpty()) return \"\";\n    var e = t.getCoordinate(),\n      n = [e.x, e.y];\n    return void 0 === e.z || Number.isNaN(e.z) || n.push(e.z), void 0 === e.m || Number.isNaN(e.m) || n.push(e.m), n.join(\" \");\n  }\n  function Ee(t) {\n    for (var e = t.getCoordinates().map(function (t) {\n        var e = [t.x, t.y];\n        return void 0 === t.z || Number.isNaN(t.z) || e.push(t.z), void 0 === t.m || Number.isNaN(t.m) || e.push(t.m), e;\n      }), n = [], i = 0, r = e.length; i < r; ++i) n.push(e[i].join(\" \"));\n    return n.join(\", \");\n  }\n  function Ne(t) {\n    var e = [];\n    e.push(\"(\" + Ee(t.getExteriorRing()) + \")\");\n    for (var n = 0, i = t.getNumInteriorRing(); n < i; ++n) e.push(\"(\" + Ee(t.getInteriorRingN(n)) + \")\");\n    return e.join(\", \");\n  }\n  var Te = {\n    Point: Ie,\n    LineString: Ee,\n    LinearRing: Ee,\n    Polygon: Ne,\n    MultiPoint: function (t) {\n      for (var e = [], n = 0, i = t.getNumGeometries(); n < i; ++n) e.push(\"(\" + Ie(t.getGeometryN(n)) + \")\");\n      return e.join(\", \");\n    },\n    MultiLineString: function (t) {\n      for (var e = [], n = 0, i = t.getNumGeometries(); n < i; ++n) e.push(\"(\" + Ee(t.getGeometryN(n)) + \")\");\n      return e.join(\", \");\n    },\n    MultiPolygon: function (t) {\n      for (var e = [], n = 0, i = t.getNumGeometries(); n < i; ++n) e.push(\"(\" + Ne(t.getGeometryN(n)) + \")\");\n      return e.join(\", \");\n    },\n    GeometryCollection: function (t) {\n      for (var e = [], n = 0, i = t.getNumGeometries(); n < i; ++n) e.push(Se(t.getGeometryN(n)));\n      return e.join(\", \");\n    }\n  };\n  function Se(t) {\n    var e = t.getGeometryType(),\n      n = Te[e];\n    e = e.toUpperCase();\n    var i = function (t) {\n      var e = \"\";\n      if (t.isEmpty()) return e;\n      var n = t.getCoordinate();\n      return void 0 === n.z || Number.isNaN(n.z) || (e += \"Z\"), void 0 === n.m || Number.isNaN(n.m) || (e += \"M\"), e;\n    }(t);\n    return i.length > 0 && (e += \" \" + i), t.isEmpty() ? e + \" \" + fe : e + \" (\" + n(t) + \")\";\n  }\n  var Le = function () {\n      return s(function t(e) {\n        n(this, t), this.geometryFactory = e || new ae(), this.precisionModel = this.geometryFactory.getPrecisionModel();\n      }, [{\n        key: \"read\",\n        value: function (t) {\n          var e = new ke(t);\n          return new xe(e, this.geometryFactory).parse();\n        }\n      }, {\n        key: \"write\",\n        value: function (t) {\n          return Se(t);\n        }\n      }]);\n    }(),\n    Ce = function () {\n      return s(function t(e) {\n        n(this, t), this.parser = new Le(e);\n      }, [{\n        key: \"write\",\n        value: function (t) {\n          return this.parser.write(t);\n        }\n      }], [{\n        key: \"toLineString\",\n        value: function (t, e) {\n          if (2 !== arguments.length) throw new Error(\"Not implemented\");\n          return \"LINESTRING ( \" + t.x + \" \" + t.y + \", \" + e.x + \" \" + e.y + \" )\";\n        }\n      }]);\n    }(),\n    Re = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getIndexAlongSegment\",\n        value: function (t, e) {\n          return this.computeIntLineIndex(), this._intLineIndex[t][e];\n        }\n      }, {\n        key: \"getTopologySummary\",\n        value: function () {\n          var t = new Jt();\n          return this.isEndPoint() && t.append(\" endpoint\"), this._isProper && t.append(\" proper\"), this.isCollinear() && t.append(\" collinear\"), t.toString();\n        }\n      }, {\n        key: \"computeIntersection\",\n        value: function (t, e, n, i) {\n          this._inputLines[0][0] = t, this._inputLines[0][1] = e, this._inputLines[1][0] = n, this._inputLines[1][1] = i, this._result = this.computeIntersect(t, e, n, i);\n        }\n      }, {\n        key: \"getIntersectionNum\",\n        value: function () {\n          return this._result;\n        }\n      }, {\n        key: \"computeIntLineIndex\",\n        value: function () {\n          if (0 === arguments.length) null === this._intLineIndex && (this._intLineIndex = Array(2).fill().map(function () {\n            return Array(2);\n          }), this.computeIntLineIndex(0), this.computeIntLineIndex(1));else if (1 === arguments.length) {\n            var t = arguments[0];\n            this.getEdgeDistance(t, 0) > this.getEdgeDistance(t, 1) ? (this._intLineIndex[t][0] = 0, this._intLineIndex[t][1] = 1) : (this._intLineIndex[t][0] = 1, this._intLineIndex[t][1] = 0);\n          }\n        }\n      }, {\n        key: \"isProper\",\n        value: function () {\n          return this.hasIntersection() && this._isProper;\n        }\n      }, {\n        key: \"setPrecisionModel\",\n        value: function (t) {\n          this._precisionModel = t;\n        }\n      }, {\n        key: \"isInteriorIntersection\",\n        value: function () {\n          if (0 === arguments.length) return !!this.isInteriorIntersection(0) || !!this.isInteriorIntersection(1);\n          if (1 === arguments.length) {\n            for (var t = arguments[0], e = 0; e < this._result; e++) if (!this._intPt[e].equals2D(this._inputLines[t][0]) && !this._intPt[e].equals2D(this._inputLines[t][1])) return !0;\n            return !1;\n          }\n        }\n      }, {\n        key: \"getIntersection\",\n        value: function (t) {\n          return this._intPt[t];\n        }\n      }, {\n        key: \"isEndPoint\",\n        value: function () {\n          return this.hasIntersection() && !this._isProper;\n        }\n      }, {\n        key: \"hasIntersection\",\n        value: function () {\n          return this._result !== t.NO_INTERSECTION;\n        }\n      }, {\n        key: \"getEdgeDistance\",\n        value: function (e, n) {\n          return t.computeEdgeDistance(this._intPt[n], this._inputLines[e][0], this._inputLines[e][1]);\n        }\n      }, {\n        key: \"isCollinear\",\n        value: function () {\n          return this._result === t.COLLINEAR_INTERSECTION;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return Ce.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + Ce.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n        }\n      }, {\n        key: \"getEndpoint\",\n        value: function (t, e) {\n          return this._inputLines[t][e];\n        }\n      }, {\n        key: \"isIntersection\",\n        value: function (t) {\n          for (var e = 0; e < this._result; e++) if (this._intPt[e].equals2D(t)) return !0;\n          return !1;\n        }\n      }, {\n        key: \"getIntersectionAlongSegment\",\n        value: function (t, e) {\n          return this.computeIntLineIndex(), this._intPt[this._intLineIndex[t][e]];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._result = null, this._inputLines = Array(2).fill().map(function () {\n            return Array(2);\n          }), this._intPt = new Array(2).fill(null), this._intLineIndex = null, this._isProper = null, this._pa = null, this._pb = null, this._precisionModel = null, this._intPt[0] = new X(), this._intPt[1] = new X(), this._pa = this._intPt[0], this._pb = this._intPt[1], this._result = 0;\n        }\n      }, {\n        key: \"computeEdgeDistance\",\n        value: function (t, e, n) {\n          var i = Math.abs(n.x - e.x),\n            r = Math.abs(n.y - e.y),\n            s = -1;\n          if (t.equals(e)) s = 0;else if (t.equals(n)) s = i > r ? i : r;else {\n            var a = Math.abs(t.x - e.x),\n              o = Math.abs(t.y - e.y);\n            0 !== (s = i > r ? a : o) || t.equals(e) || (s = Math.max(a, o));\n          }\n          return G.isTrue(!(0 === s && !t.equals(e)), \"Bad distance calculation\"), s;\n        }\n      }, {\n        key: \"nonRobustComputeEdgeDistance\",\n        value: function (t, e, n) {\n          var i = t.x - e.x,\n            r = t.y - e.y,\n            s = Math.sqrt(i * i + r * r);\n          return G.isTrue(!(0 === s && !t.equals(e)), \"Invalid distance calculation\"), s;\n        }\n      }]);\n    }();\n  Re.DONT_INTERSECT = 0, Re.DO_INTERSECT = 1, Re.COLLINEAR = 2, Re.NO_INTERSECTION = 0, Re.POINT_INTERSECTION = 1, Re.COLLINEAR_INTERSECTION = 2;\n  var we = function (t) {\n      function i() {\n        return n(this, i), e(this, i);\n      }\n      return l(i, t), s(i, [{\n        key: \"isInSegmentEnvelopes\",\n        value: function (t) {\n          var e = new U(this._inputLines[0][0], this._inputLines[0][1]),\n            n = new U(this._inputLines[1][0], this._inputLines[1][1]);\n          return e.contains(t) && n.contains(t);\n        }\n      }, {\n        key: \"computeIntersection\",\n        value: function () {\n          if (3 !== arguments.length) return f(i, \"computeIntersection\", this, 1).apply(this, arguments);\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          if (this._isProper = !1, U.intersects(e, n, t) && 0 === ct.index(e, n, t) && 0 === ct.index(n, e, t)) return this._isProper = !0, (t.equals(e) || t.equals(n)) && (this._isProper = !1), this._result = Re.POINT_INTERSECTION, null;\n          this._result = Re.NO_INTERSECTION;\n        }\n      }, {\n        key: \"intersection\",\n        value: function (t, e, n, r) {\n          var s = this.intersectionSafe(t, e, n, r);\n          return this.isInSegmentEnvelopes(s) || (s = new X(i.nearestEndpoint(t, e, n, r))), null !== this._precisionModel && this._precisionModel.makePrecise(s), s;\n        }\n      }, {\n        key: \"checkDD\",\n        value: function (t, e, n, i, r) {\n          var s = lt.intersection(t, e, n, i),\n            a = this.isInSegmentEnvelopes(s);\n          mt.out.println(\"DD in env = \" + a + \"  --------------------- \" + s), r.distance(s) > 1e-4 && mt.out.println(\"Distance = \" + r.distance(s));\n        }\n      }, {\n        key: \"intersectionSafe\",\n        value: function (t, e, n, r) {\n          var s = pt.intersection(t, e, n, r);\n          return null === s && (s = i.nearestEndpoint(t, e, n, r)), s;\n        }\n      }, {\n        key: \"computeCollinearIntersection\",\n        value: function (t, e, n, i) {\n          var r = U.intersects(t, e, n),\n            s = U.intersects(t, e, i),\n            a = U.intersects(n, i, t),\n            o = U.intersects(n, i, e);\n          return r && s ? (this._intPt[0] = n, this._intPt[1] = i, Re.COLLINEAR_INTERSECTION) : a && o ? (this._intPt[0] = t, this._intPt[1] = e, Re.COLLINEAR_INTERSECTION) : r && a ? (this._intPt[0] = n, this._intPt[1] = t, !n.equals(t) || s || o ? Re.COLLINEAR_INTERSECTION : Re.POINT_INTERSECTION) : r && o ? (this._intPt[0] = n, this._intPt[1] = e, !n.equals(e) || s || a ? Re.COLLINEAR_INTERSECTION : Re.POINT_INTERSECTION) : s && a ? (this._intPt[0] = i, this._intPt[1] = t, !i.equals(t) || r || o ? Re.COLLINEAR_INTERSECTION : Re.POINT_INTERSECTION) : s && o ? (this._intPt[0] = i, this._intPt[1] = e, !i.equals(e) || r || a ? Re.COLLINEAR_INTERSECTION : Re.POINT_INTERSECTION) : Re.NO_INTERSECTION;\n        }\n      }, {\n        key: \"computeIntersect\",\n        value: function (t, e, n, i) {\n          if (this._isProper = !1, !U.intersects(t, e, n, i)) return Re.NO_INTERSECTION;\n          var r = ct.index(t, e, n),\n            s = ct.index(t, e, i);\n          if (r > 0 && s > 0 || r < 0 && s < 0) return Re.NO_INTERSECTION;\n          var a = ct.index(n, i, t),\n            o = ct.index(n, i, e);\n          return a > 0 && o > 0 || a < 0 && o < 0 ? Re.NO_INTERSECTION : 0 === r && 0 === s && 0 === a && 0 === o ? this.computeCollinearIntersection(t, e, n, i) : (0 === r || 0 === s || 0 === a || 0 === o ? (this._isProper = !1, t.equals2D(n) || t.equals2D(i) ? this._intPt[0] = t : e.equals2D(n) || e.equals2D(i) ? this._intPt[0] = e : 0 === r ? this._intPt[0] = new X(n) : 0 === s ? this._intPt[0] = new X(i) : 0 === a ? this._intPt[0] = new X(t) : 0 === o && (this._intPt[0] = new X(e))) : (this._isProper = !0, this._intPt[0] = this.intersection(t, e, n, i)), Re.POINT_INTERSECTION);\n        }\n      }], [{\n        key: \"nearestEndpoint\",\n        value: function (t, e, n, i) {\n          var r = t,\n            s = xt.pointToSegment(t, n, i),\n            a = xt.pointToSegment(e, n, i);\n          return a < s && (s = a, r = e), (a = xt.pointToSegment(n, t, e)) < s && (s = a, r = n), (a = xt.pointToSegment(i, t, e)) < s && (s = a, r = i), r;\n        }\n      }]);\n    }(Re),\n    Oe = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"countSegment\",\n        value: function (t, e) {\n          if (t.x < this._p.x && e.x < this._p.x) return null;\n          if (this._p.x === e.x && this._p.y === e.y) return this._isPointOnSegment = !0, null;\n          if (t.y === this._p.y && e.y === this._p.y) {\n            var n = t.x,\n              i = e.x;\n            return n > i && (n = e.x, i = t.x), this._p.x >= n && this._p.x <= i && (this._isPointOnSegment = !0), null;\n          }\n          if (t.y > this._p.y && e.y <= this._p.y || e.y > this._p.y && t.y <= this._p.y) {\n            var r = ct.index(t, e, this._p);\n            if (r === ct.COLLINEAR) return this._isPointOnSegment = !0, null;\n            e.y < t.y && (r = -r), r === ct.LEFT && this._crossingCount++;\n          }\n        }\n      }, {\n        key: \"isPointInPolygon\",\n        value: function () {\n          return this.getLocation() !== H.EXTERIOR;\n        }\n      }, {\n        key: \"getLocation\",\n        value: function () {\n          return this._isPointOnSegment ? H.BOUNDARY : this._crossingCount % 2 == 1 ? H.INTERIOR : H.EXTERIOR;\n        }\n      }, {\n        key: \"isOnSegment\",\n        value: function () {\n          return this._isPointOnSegment;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._p = null, this._crossingCount = 0, this._isPointOnSegment = !1;\n          var t = arguments[0];\n          this._p = t;\n        }\n      }, {\n        key: \"locatePointInRing\",\n        value: function () {\n          if (arguments[0] instanceof X && rt(arguments[1], ht)) {\n            for (var e = arguments[1], n = new t(arguments[0]), i = new X(), r = new X(), s = 1; s < e.size(); s++) if (e.getCoordinate(s, i), e.getCoordinate(s - 1, r), n.countSegment(i, r), n.isOnSegment()) return n.getLocation();\n            return n.getLocation();\n          }\n          if (arguments[0] instanceof X && arguments[1] instanceof Array) {\n            for (var a = arguments[1], o = new t(arguments[0]), u = 1; u < a.length; u++) {\n              var l = a[u],\n                h = a[u - 1];\n              if (o.countSegment(l, h), o.isOnSegment()) return o.getLocation();\n            }\n            return o.getLocation();\n          }\n        }\n      }]);\n    }(),\n    be = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"isOnLine\",\n        value: function () {\n          if (arguments[0] instanceof X && rt(arguments[1], ht)) {\n            for (var t = arguments[0], e = arguments[1], n = new we(), i = new X(), r = new X(), s = e.size(), a = 1; a < s; a++) if (e.getCoordinate(a - 1, i), e.getCoordinate(a, r), n.computeIntersection(t, i, r), n.hasIntersection()) return !0;\n            return !1;\n          }\n          if (arguments[0] instanceof X && arguments[1] instanceof Array) {\n            for (var o = arguments[0], u = arguments[1], l = new we(), h = 1; h < u.length; h++) {\n              var c = u[h - 1],\n                f = u[h];\n              if (l.computeIntersection(o, c, f), l.hasIntersection()) return !0;\n            }\n            return !1;\n          }\n        }\n      }, {\n        key: \"locateInRing\",\n        value: function (t, e) {\n          return Oe.locatePointInRing(t, e);\n        }\n      }, {\n        key: \"isInRing\",\n        value: function (e, n) {\n          return t.locateInRing(e, n) !== H.EXTERIOR;\n        }\n      }]);\n    }(),\n    Me = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"setAllLocations\",\n        value: function (t) {\n          for (var e = 0; e < this.location.length; e++) this.location[e] = t;\n        }\n      }, {\n        key: \"isNull\",\n        value: function () {\n          for (var t = 0; t < this.location.length; t++) if (this.location[t] !== H.NONE) return !1;\n          return !0;\n        }\n      }, {\n        key: \"setAllLocationsIfNull\",\n        value: function (t) {\n          for (var e = 0; e < this.location.length; e++) this.location[e] === H.NONE && (this.location[e] = t);\n        }\n      }, {\n        key: \"isLine\",\n        value: function () {\n          return 1 === this.location.length;\n        }\n      }, {\n        key: \"merge\",\n        value: function (t) {\n          if (t.location.length > this.location.length) {\n            var e = new Array(3).fill(null);\n            e[$.ON] = this.location[$.ON], e[$.LEFT] = H.NONE, e[$.RIGHT] = H.NONE, this.location = e;\n          }\n          for (var n = 0; n < this.location.length; n++) this.location[n] === H.NONE && n < t.location.length && (this.location[n] = t.location[n]);\n        }\n      }, {\n        key: \"getLocations\",\n        value: function () {\n          return this.location;\n        }\n      }, {\n        key: \"flip\",\n        value: function () {\n          if (this.location.length <= 1) return null;\n          var t = this.location[$.LEFT];\n          this.location[$.LEFT] = this.location[$.RIGHT], this.location[$.RIGHT] = t;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var t = new st();\n          return this.location.length > 1 && t.append(H.toLocationSymbol(this.location[$.LEFT])), t.append(H.toLocationSymbol(this.location[$.ON])), this.location.length > 1 && t.append(H.toLocationSymbol(this.location[$.RIGHT])), t.toString();\n        }\n      }, {\n        key: \"setLocations\",\n        value: function (t, e, n) {\n          this.location[$.ON] = t, this.location[$.LEFT] = e, this.location[$.RIGHT] = n;\n        }\n      }, {\n        key: \"get\",\n        value: function (t) {\n          return t < this.location.length ? this.location[t] : H.NONE;\n        }\n      }, {\n        key: \"isArea\",\n        value: function () {\n          return this.location.length > 1;\n        }\n      }, {\n        key: \"isAnyNull\",\n        value: function () {\n          for (var t = 0; t < this.location.length; t++) if (this.location[t] === H.NONE) return !0;\n          return !1;\n        }\n      }, {\n        key: \"setLocation\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.setLocation($.ON, t);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this.location[e] = n;\n          }\n        }\n      }, {\n        key: \"init\",\n        value: function (t) {\n          this.location = new Array(t).fill(null), this.setAllLocations(H.NONE);\n        }\n      }, {\n        key: \"isEqualOnSide\",\n        value: function (t, e) {\n          return this.location[e] === t.location[e];\n        }\n      }, {\n        key: \"allPositionsEqual\",\n        value: function (t) {\n          for (var e = 0; e < this.location.length; e++) if (this.location[e] !== t) return !1;\n          return !0;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.location = null, 1 === arguments.length) {\n            if (arguments[0] instanceof Array) {\n              var e = arguments[0];\n              this.init(e.length);\n            } else if (Number.isInteger(arguments[0])) {\n              var n = arguments[0];\n              this.init(1), this.location[$.ON] = n;\n            } else if (arguments[0] instanceof t) {\n              var i = arguments[0];\n              if (this.init(i.location.length), null !== i) for (var r = 0; r < this.location.length; r++) this.location[r] = i.location[r];\n            }\n          } else if (3 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2];\n            this.init(3), this.location[$.ON] = s, this.location[$.LEFT] = a, this.location[$.RIGHT] = o;\n          }\n        }\n      }]);\n    }(),\n    Ae = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getGeometryCount\",\n        value: function () {\n          var t = 0;\n          return this.elt[0].isNull() || t++, this.elt[1].isNull() || t++, t;\n        }\n      }, {\n        key: \"setAllLocations\",\n        value: function (t, e) {\n          this.elt[t].setAllLocations(e);\n        }\n      }, {\n        key: \"isNull\",\n        value: function (t) {\n          return this.elt[t].isNull();\n        }\n      }, {\n        key: \"setAllLocationsIfNull\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.setAllLocationsIfNull(0, t), this.setAllLocationsIfNull(1, t);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this.elt[e].setAllLocationsIfNull(n);\n          }\n        }\n      }, {\n        key: \"isLine\",\n        value: function (t) {\n          return this.elt[t].isLine();\n        }\n      }, {\n        key: \"merge\",\n        value: function (t) {\n          for (var e = 0; e < 2; e++) null === this.elt[e] && null !== t.elt[e] ? this.elt[e] = new Me(t.elt[e]) : this.elt[e].merge(t.elt[e]);\n        }\n      }, {\n        key: \"flip\",\n        value: function () {\n          this.elt[0].flip(), this.elt[1].flip();\n        }\n      }, {\n        key: \"getLocation\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.elt[t].get($.ON);\n          }\n          if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            return this.elt[e].get(n);\n          }\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var t = new st();\n          return null !== this.elt[0] && (t.append(\"A:\"), t.append(this.elt[0].toString())), null !== this.elt[1] && (t.append(\" B:\"), t.append(this.elt[1].toString())), t.toString();\n        }\n      }, {\n        key: \"isArea\",\n        value: function () {\n          if (0 === arguments.length) return this.elt[0].isArea() || this.elt[1].isArea();\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.elt[t].isArea();\n          }\n        }\n      }, {\n        key: \"isAnyNull\",\n        value: function (t) {\n          return this.elt[t].isAnyNull();\n        }\n      }, {\n        key: \"setLocation\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            this.elt[t].setLocation($.ON, e);\n          } else if (3 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = arguments[2];\n            this.elt[n].setLocation(i, r);\n          }\n        }\n      }, {\n        key: \"isEqualOnSide\",\n        value: function (t, e) {\n          return this.elt[0].isEqualOnSide(t.elt[0], e) && this.elt[1].isEqualOnSide(t.elt[1], e);\n        }\n      }, {\n        key: \"allPositionsEqual\",\n        value: function (t, e) {\n          return this.elt[t].allPositionsEqual(e);\n        }\n      }, {\n        key: \"toLine\",\n        value: function (t) {\n          this.elt[t].isArea() && (this.elt[t] = new Me(this.elt[t].location[0]));\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.elt = new Array(2).fill(null), 1 === arguments.length) {\n            if (Number.isInteger(arguments[0])) {\n              var e = arguments[0];\n              this.elt[0] = new Me(e), this.elt[1] = new Me(e);\n            } else if (arguments[0] instanceof t) {\n              var n = arguments[0];\n              this.elt[0] = new Me(n.elt[0]), this.elt[1] = new Me(n.elt[1]);\n            }\n          } else if (2 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this.elt[0] = new Me(H.NONE), this.elt[1] = new Me(H.NONE), this.elt[i].setLocation(r);\n          } else if (3 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2];\n            this.elt[0] = new Me(s, a, o), this.elt[1] = new Me(s, a, o);\n          } else if (4 === arguments.length) {\n            var u = arguments[0],\n              l = arguments[1],\n              h = arguments[2],\n              c = arguments[3];\n            this.elt[0] = new Me(H.NONE, H.NONE, H.NONE), this.elt[1] = new Me(H.NONE, H.NONE, H.NONE), this.elt[u].setLocations(l, h, c);\n          }\n        }\n      }, {\n        key: \"toLineLabel\",\n        value: function (e) {\n          for (var n = new t(H.NONE), i = 0; i < 2; i++) n.setLocation(i, e.getLocation(i));\n          return n;\n        }\n      }]);\n    }(),\n    Pe = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"computeRing\",\n        value: function () {\n          if (null !== this._ring) return null;\n          for (var t = new Array(this._pts.size()).fill(null), e = 0; e < this._pts.size(); e++) t[e] = this._pts.get(e);\n          this._ring = this._geometryFactory.createLinearRing(t), this._isHole = ct.isCCW(this._ring.getCoordinates());\n        }\n      }, {\n        key: \"isIsolated\",\n        value: function () {\n          return 1 === this._label.getGeometryCount();\n        }\n      }, {\n        key: \"computePoints\",\n        value: function (t) {\n          this._startDe = t;\n          var e = t,\n            n = !0;\n          do {\n            if (null === e) throw new gt(\"Found null DirectedEdge\");\n            if (e.getEdgeRing() === this) throw new gt(\"Directed Edge visited twice during ring-building at \" + e.getCoordinate());\n            this._edges.add(e);\n            var i = e.getLabel();\n            G.isTrue(i.isArea()), this.mergeLabel(i), this.addPoints(e.getEdge(), e.isForward(), n), n = !1, this.setEdgeRing(e, this), e = this.getNext(e);\n          } while (e !== this._startDe);\n        }\n      }, {\n        key: \"getLinearRing\",\n        value: function () {\n          return this._ring;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function (t) {\n          return this._pts.get(t);\n        }\n      }, {\n        key: \"computeMaxNodeDegree\",\n        value: function () {\n          this._maxNodeDegree = 0;\n          var t = this._startDe;\n          do {\n            var e = t.getNode().getEdges().getOutgoingDegree(this);\n            e > this._maxNodeDegree && (this._maxNodeDegree = e), t = this.getNext(t);\n          } while (t !== this._startDe);\n          this._maxNodeDegree *= 2;\n        }\n      }, {\n        key: \"addPoints\",\n        value: function (t, e, n) {\n          var i = t.getCoordinates();\n          if (e) {\n            var r = 1;\n            n && (r = 0);\n            for (var s = r; s < i.length; s++) this._pts.add(i[s]);\n          } else {\n            var a = i.length - 2;\n            n && (a = i.length - 1);\n            for (var o = a; o >= 0; o--) this._pts.add(i[o]);\n          }\n        }\n      }, {\n        key: \"isHole\",\n        value: function () {\n          return this._isHole;\n        }\n      }, {\n        key: \"setInResult\",\n        value: function () {\n          var t = this._startDe;\n          do {\n            t.getEdge().setInResult(!0), t = t.getNext();\n          } while (t !== this._startDe);\n        }\n      }, {\n        key: \"containsPoint\",\n        value: function (t) {\n          var e = this.getLinearRing();\n          if (!e.getEnvelopeInternal().contains(t)) return !1;\n          if (!be.isInRing(t, e.getCoordinates())) return !1;\n          for (var n = this._holes.iterator(); n.hasNext();) {\n            if (n.next().containsPoint(t)) return !1;\n          }\n          return !0;\n        }\n      }, {\n        key: \"addHole\",\n        value: function (t) {\n          this._holes.add(t);\n        }\n      }, {\n        key: \"isShell\",\n        value: function () {\n          return null === this._shell;\n        }\n      }, {\n        key: \"getLabel\",\n        value: function () {\n          return this._label;\n        }\n      }, {\n        key: \"getEdges\",\n        value: function () {\n          return this._edges;\n        }\n      }, {\n        key: \"getMaxNodeDegree\",\n        value: function () {\n          return this._maxNodeDegree < 0 && this.computeMaxNodeDegree(), this._maxNodeDegree;\n        }\n      }, {\n        key: \"getShell\",\n        value: function () {\n          return this._shell;\n        }\n      }, {\n        key: \"mergeLabel\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.mergeLabel(t, 0), this.mergeLabel(t, 1);\n          } else if (2 === arguments.length) {\n            var e = arguments[1],\n              n = arguments[0].getLocation(e, $.RIGHT);\n            if (n === H.NONE) return null;\n            if (this._label.getLocation(e) === H.NONE) return this._label.setLocation(e, n), null;\n          }\n        }\n      }, {\n        key: \"setShell\",\n        value: function (t) {\n          this._shell = t, null !== t && t.addHole(this);\n        }\n      }, {\n        key: \"toPolygon\",\n        value: function (t) {\n          for (var e = new Array(this._holes.size()).fill(null), n = 0; n < this._holes.size(); n++) e[n] = this._holes.get(n).getLinearRing();\n          return t.createPolygon(this.getLinearRing(), e);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._startDe = null, this._maxNodeDegree = -1, this._edges = new yt(), this._pts = new yt(), this._label = new Ae(H.NONE), this._ring = null, this._isHole = null, this._shell = null, this._holes = new yt(), this._geometryFactory = null, 0 === arguments.length) ;else if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            this._geometryFactory = e, this.computePoints(t), this.computeRing();\n          }\n        }\n      }]);\n    }(),\n    De = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"setEdgeRing\",\n        value: function (t, e) {\n          t.setMinEdgeRing(e);\n        }\n      }, {\n        key: \"getNext\",\n        value: function (t) {\n          return t.getNextMin();\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          Pe.constructor_.call(this, t, e);\n        }\n      }]);\n    }(Pe),\n    Fe = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"buildMinimalRings\",\n        value: function () {\n          var t = new yt(),\n            e = this._startDe;\n          do {\n            if (null === e.getMinEdgeRing()) {\n              var n = new De(e, this._geometryFactory);\n              t.add(n);\n            }\n            e = e.getNext();\n          } while (e !== this._startDe);\n          return t;\n        }\n      }, {\n        key: \"setEdgeRing\",\n        value: function (t, e) {\n          t.setEdgeRing(e);\n        }\n      }, {\n        key: \"linkDirectedEdgesForMinimalEdgeRings\",\n        value: function () {\n          var t = this._startDe;\n          do {\n            t.getNode().getEdges().linkMinimalDirectedEdges(this), t = t.getNext();\n          } while (t !== this._startDe);\n        }\n      }, {\n        key: \"getNext\",\n        value: function (t) {\n          return t.getNext();\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0],\n            e = arguments[1];\n          Pe.constructor_.call(this, t, e);\n        }\n      }]);\n    }(Pe),\n    Ge = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"setVisited\",\n        value: function (t) {\n          this._isVisited = t;\n        }\n      }, {\n        key: \"setInResult\",\n        value: function (t) {\n          this._isInResult = t;\n        }\n      }, {\n        key: \"isCovered\",\n        value: function () {\n          return this._isCovered;\n        }\n      }, {\n        key: \"isCoveredSet\",\n        value: function () {\n          return this._isCoveredSet;\n        }\n      }, {\n        key: \"setLabel\",\n        value: function (t) {\n          this._label = t;\n        }\n      }, {\n        key: \"getLabel\",\n        value: function () {\n          return this._label;\n        }\n      }, {\n        key: \"setCovered\",\n        value: function (t) {\n          this._isCovered = t, this._isCoveredSet = !0;\n        }\n      }, {\n        key: \"updateIM\",\n        value: function (t) {\n          G.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\"), this.computeIM(t);\n        }\n      }, {\n        key: \"isInResult\",\n        value: function () {\n          return this._isInResult;\n        }\n      }, {\n        key: \"isVisited\",\n        value: function () {\n          return this._isVisited;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._label = null, this._isInResult = !1, this._isCovered = !1, this._isCoveredSet = !1, this._isVisited = !1, 0 === arguments.length) ;else if (1 === arguments.length) {\n            var t = arguments[0];\n            this._label = t;\n          }\n        }\n      }]);\n    }(),\n    qe = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"isIncidentEdgeInResult\",\n        value: function () {\n          for (var t = this.getEdges().getEdges().iterator(); t.hasNext();) {\n            if (t.next().getEdge().isInResult()) return !0;\n          }\n          return !1;\n        }\n      }, {\n        key: \"isIsolated\",\n        value: function () {\n          return 1 === this._label.getGeometryCount();\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this._coord;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          t.println(\"node \" + this._coord + \" lbl: \" + this._label);\n        }\n      }, {\n        key: \"computeIM\",\n        value: function (t) {}\n      }, {\n        key: \"computeMergedLocation\",\n        value: function (t, e) {\n          var n = H.NONE;\n          if (n = this._label.getLocation(e), !t.isNull(e)) {\n            var i = t.getLocation(e);\n            n !== H.BOUNDARY && (n = i);\n          }\n          return n;\n        }\n      }, {\n        key: \"setLabel\",\n        value: function () {\n          if (2 !== arguments.length || !Number.isInteger(arguments[1]) || !Number.isInteger(arguments[0])) return f(i, \"setLabel\", this, 1).apply(this, arguments);\n          var t = arguments[0],\n            e = arguments[1];\n          null === this._label ? this._label = new Ae(t, e) : this._label.setLocation(t, e);\n        }\n      }, {\n        key: \"getEdges\",\n        value: function () {\n          return this._edges;\n        }\n      }, {\n        key: \"mergeLabel\",\n        value: function () {\n          if (arguments[0] instanceof i) {\n            var t = arguments[0];\n            this.mergeLabel(t._label);\n          } else if (arguments[0] instanceof Ae) for (var e = arguments[0], n = 0; n < 2; n++) {\n            var r = this.computeMergedLocation(e, n);\n            this._label.getLocation(n) === H.NONE && this._label.setLocation(n, r);\n          }\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          this._edges.insert(t), t.setNode(this);\n        }\n      }, {\n        key: \"setLabelBoundary\",\n        value: function (t) {\n          if (null === this._label) return null;\n          var e = H.NONE;\n          null !== this._label && (e = this._label.getLocation(t));\n          var n = null;\n          switch (e) {\n            case H.BOUNDARY:\n              n = H.INTERIOR;\n              break;\n            case H.INTERIOR:\n            default:\n              n = H.BOUNDARY;\n          }\n          this._label.setLocation(t, n);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._coord = null, this._edges = null;\n          var t = arguments[0],\n            e = arguments[1];\n          this._coord = t, this._edges = e, this._label = new Ae(0, H.NONE);\n        }\n      }]);\n    }(Ge),\n    Ye = function (t) {\n      function i() {\n        return n(this, i), e(this, i, arguments);\n      }\n      return l(i, t), s(i);\n    }(ee);\n  function ze(t) {\n    return null == t ? 0 : t.color;\n  }\n  function Xe(t) {\n    return null == t ? null : t.parent;\n  }\n  function Be(t, e) {\n    null !== t && (t.color = e);\n  }\n  function Ue(t) {\n    return null == t ? null : t.left;\n  }\n  function Ve(t) {\n    return null == t ? null : t.right;\n  }\n  var He = function (t) {\n      function i() {\n        var t;\n        return n(this, i), (t = e(this, i)).root_ = null, t.size_ = 0, t;\n      }\n      return l(i, t), s(i, [{\n        key: \"get\",\n        value: function (t) {\n          for (var e = this.root_; null !== e;) {\n            var n = t.compareTo(e.key);\n            if (n < 0) e = e.left;else {\n              if (!(n > 0)) return e.value;\n              e = e.right;\n            }\n          }\n          return null;\n        }\n      }, {\n        key: \"put\",\n        value: function (t, e) {\n          if (null === this.root_) return this.root_ = {\n            key: t,\n            value: e,\n            left: null,\n            right: null,\n            parent: null,\n            color: 0,\n            getValue: function () {\n              return this.value;\n            },\n            getKey: function () {\n              return this.key;\n            }\n          }, this.size_ = 1, null;\n          var n,\n            i,\n            r = this.root_;\n          do {\n            if (n = r, (i = t.compareTo(r.key)) < 0) r = r.left;else {\n              if (!(i > 0)) {\n                var s = r.value;\n                return r.value = e, s;\n              }\n              r = r.right;\n            }\n          } while (null !== r);\n          var a = {\n            key: t,\n            left: null,\n            right: null,\n            value: e,\n            parent: n,\n            color: 0,\n            getValue: function () {\n              return this.value;\n            },\n            getKey: function () {\n              return this.key;\n            }\n          };\n          return i < 0 ? n.left = a : n.right = a, this.fixAfterInsertion(a), this.size_++, null;\n        }\n      }, {\n        key: \"fixAfterInsertion\",\n        value: function (t) {\n          var e;\n          for (t.color = 1; null != t && t !== this.root_ && 1 === t.parent.color;) Xe(t) === Ue(Xe(Xe(t))) ? 1 === ze(e = Ve(Xe(Xe(t)))) ? (Be(Xe(t), 0), Be(e, 0), Be(Xe(Xe(t)), 1), t = Xe(Xe(t))) : (t === Ve(Xe(t)) && (t = Xe(t), this.rotateLeft(t)), Be(Xe(t), 0), Be(Xe(Xe(t)), 1), this.rotateRight(Xe(Xe(t)))) : 1 === ze(e = Ue(Xe(Xe(t)))) ? (Be(Xe(t), 0), Be(e, 0), Be(Xe(Xe(t)), 1), t = Xe(Xe(t))) : (t === Ue(Xe(t)) && (t = Xe(t), this.rotateRight(t)), Be(Xe(t), 0), Be(Xe(Xe(t)), 1), this.rotateLeft(Xe(Xe(t))));\n          this.root_.color = 0;\n        }\n      }, {\n        key: \"values\",\n        value: function () {\n          var t = new yt(),\n            e = this.getFirstEntry();\n          if (null !== e) for (t.add(e.value); null !== (e = i.successor(e));) t.add(e.value);\n          return t;\n        }\n      }, {\n        key: \"entrySet\",\n        value: function () {\n          var t = new J(),\n            e = this.getFirstEntry();\n          if (null !== e) for (t.add(e); null !== (e = i.successor(e));) t.add(e);\n          return t;\n        }\n      }, {\n        key: \"rotateLeft\",\n        value: function (t) {\n          if (null != t) {\n            var e = t.right;\n            t.right = e.left, null != e.left && (e.left.parent = t), e.parent = t.parent, null == t.parent ? this.root_ = e : t.parent.left === t ? t.parent.left = e : t.parent.right = e, e.left = t, t.parent = e;\n          }\n        }\n      }, {\n        key: \"rotateRight\",\n        value: function (t) {\n          if (null != t) {\n            var e = t.left;\n            t.left = e.right, null != e.right && (e.right.parent = t), e.parent = t.parent, null == t.parent ? this.root_ = e : t.parent.right === t ? t.parent.right = e : t.parent.left = e, e.right = t, t.parent = e;\n          }\n        }\n      }, {\n        key: \"getFirstEntry\",\n        value: function () {\n          var t = this.root_;\n          if (null != t) for (; null != t.left;) t = t.left;\n          return t;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this.size_;\n        }\n      }, {\n        key: \"containsKey\",\n        value: function (t) {\n          for (var e = this.root_; null !== e;) {\n            var n = t.compareTo(e.key);\n            if (n < 0) e = e.left;else {\n              if (!(n > 0)) return !0;\n              e = e.right;\n            }\n          }\n          return !1;\n        }\n      }], [{\n        key: \"successor\",\n        value: function (t) {\n          var e;\n          if (null === t) return null;\n          if (null !== t.right) {\n            for (e = t.right; null !== e.left;) e = e.left;\n            return e;\n          }\n          e = t.parent;\n          for (var n = t; null !== e && n === e.right;) n = e, e = e.parent;\n          return e;\n        }\n      }]);\n    }(Ye),\n    Ze = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"find\",\n        value: function (t) {\n          return this.nodeMap.get(t);\n        }\n      }, {\n        key: \"addNode\",\n        value: function () {\n          if (arguments[0] instanceof X) {\n            var t = arguments[0],\n              e = this.nodeMap.get(t);\n            return null === e && (e = this.nodeFact.createNode(t), this.nodeMap.put(t, e)), e;\n          }\n          if (arguments[0] instanceof qe) {\n            var n = arguments[0],\n              i = this.nodeMap.get(n.getCoordinate());\n            return null === i ? (this.nodeMap.put(n.getCoordinate(), n), n) : (i.mergeLabel(n), i);\n          }\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          for (var e = this.iterator(); e.hasNext();) {\n            e.next().print(t);\n          }\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return this.nodeMap.values().iterator();\n        }\n      }, {\n        key: \"values\",\n        value: function () {\n          return this.nodeMap.values();\n        }\n      }, {\n        key: \"getBoundaryNodes\",\n        value: function (t) {\n          for (var e = new yt(), n = this.iterator(); n.hasNext();) {\n            var i = n.next();\n            i.getLabel().getLocation(t) === H.BOUNDARY && e.add(i);\n          }\n          return e;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          var e = t.getCoordinate();\n          this.addNode(e).add(t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this.nodeMap = new He(), this.nodeFact = null;\n          var t = arguments[0];\n          this.nodeFact = t;\n        }\n      }]);\n    }(),\n    je = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"isNorthern\",\n        value: function (e) {\n          return e === t.NE || e === t.NW;\n        }\n      }, {\n        key: \"isOpposite\",\n        value: function (t, e) {\n          return t !== e && 2 === (t - e + 4) % 4;\n        }\n      }, {\n        key: \"commonHalfPlane\",\n        value: function (t, e) {\n          if (t === e) return t;\n          if (2 === (t - e + 4) % 4) return -1;\n          var n = t < e ? t : e;\n          return 0 === n && 3 === (t > e ? t : e) ? 3 : n;\n        }\n      }, {\n        key: \"isInHalfPlane\",\n        value: function (e, n) {\n          return n === t.SE ? e === t.SE || e === t.SW : e === n || e === n + 1;\n        }\n      }, {\n        key: \"quadrant\",\n        value: function () {\n          if (\"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n            var e = arguments[0],\n              n = arguments[1];\n            if (0 === e && 0 === n) throw new m(\"Cannot compute the quadrant for point ( \" + e + \", \" + n + \" )\");\n            return e >= 0 ? n >= 0 ? t.NE : t.SE : n >= 0 ? t.NW : t.SW;\n          }\n          if (arguments[0] instanceof X && arguments[1] instanceof X) {\n            var i = arguments[0],\n              r = arguments[1];\n            if (r.x === i.x && r.y === i.y) throw new m(\"Cannot compute the quadrant for two identical points \" + i);\n            return r.x >= i.x ? r.y >= i.y ? t.NE : t.SE : r.y >= i.y ? t.NW : t.SW;\n          }\n        }\n      }]);\n    }();\n  je.NE = 0, je.NW = 1, je.SW = 2, je.SE = 3;\n  var We = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"compareDirection\",\n        value: function (t) {\n          return this._dx === t._dx && this._dy === t._dy ? 0 : this._quadrant > t._quadrant ? 1 : this._quadrant < t._quadrant ? -1 : ct.index(t._p0, t._p1, this._p1);\n        }\n      }, {\n        key: \"getDy\",\n        value: function () {\n          return this._dy;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this._p0;\n        }\n      }, {\n        key: \"setNode\",\n        value: function (t) {\n          this._node = t;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          var e = Math.atan2(this._dy, this._dx),\n            n = this.getClass().getName(),\n            i = n.lastIndexOf(\".\"),\n            r = n.substring(i + 1);\n          t.print(\"  \" + r + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + e + \"   \" + this._label);\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this.compareDirection(e);\n        }\n      }, {\n        key: \"getDirectedCoordinate\",\n        value: function () {\n          return this._p1;\n        }\n      }, {\n        key: \"getDx\",\n        value: function () {\n          return this._dx;\n        }\n      }, {\n        key: \"getLabel\",\n        value: function () {\n          return this._label;\n        }\n      }, {\n        key: \"getEdge\",\n        value: function () {\n          return this._edge;\n        }\n      }, {\n        key: \"getQuadrant\",\n        value: function () {\n          return this._quadrant;\n        }\n      }, {\n        key: \"getNode\",\n        value: function () {\n          return this._node;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var t = Math.atan2(this._dy, this._dx),\n            e = this.getClass().getName(),\n            n = e.lastIndexOf(\".\");\n          return \"  \" + e.substring(n + 1) + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + t + \"   \" + this._label;\n        }\n      }, {\n        key: \"computeLabel\",\n        value: function (t) {}\n      }, {\n        key: \"init\",\n        value: function (t, e) {\n          this._p0 = t, this._p1 = e, this._dx = e.x - t.x, this._dy = e.y - t.y, this._quadrant = je.quadrant(this._dx, this._dy), G.isTrue(!(0 === this._dx && 0 === this._dy), \"EdgeEnd with identical endpoints found\");\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._edge = null, this._label = null, this._node = null, this._p0 = null, this._p1 = null, this._dx = null, this._dy = null, this._quadrant = null, 1 === arguments.length) {\n            var e = arguments[0];\n            this._edge = e;\n          } else if (3 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = arguments[2];\n            t.constructor_.call(this, n, i, r, null);\n          } else if (4 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = arguments[2],\n              u = arguments[3];\n            t.constructor_.call(this, s), this.init(a, o), this._label = u;\n          }\n        }\n      }]);\n    }(),\n    Ke = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"getNextMin\",\n        value: function () {\n          return this._nextMin;\n        }\n      }, {\n        key: \"getDepth\",\n        value: function (t) {\n          return this._depth[t];\n        }\n      }, {\n        key: \"setVisited\",\n        value: function (t) {\n          this._isVisited = t;\n        }\n      }, {\n        key: \"computeDirectedLabel\",\n        value: function () {\n          this._label = new Ae(this._edge.getLabel()), this._isForward || this._label.flip();\n        }\n      }, {\n        key: \"getNext\",\n        value: function () {\n          return this._next;\n        }\n      }, {\n        key: \"setDepth\",\n        value: function (t, e) {\n          if (-999 !== this._depth[t] && this._depth[t] !== e) throw new gt(\"assigned depths do not match\", this.getCoordinate());\n          this._depth[t] = e;\n        }\n      }, {\n        key: \"isInteriorAreaEdge\",\n        value: function () {\n          for (var t = !0, e = 0; e < 2; e++) this._label.isArea(e) && this._label.getLocation(e, $.LEFT) === H.INTERIOR && this._label.getLocation(e, $.RIGHT) === H.INTERIOR || (t = !1);\n          return t;\n        }\n      }, {\n        key: \"setNextMin\",\n        value: function (t) {\n          this._nextMin = t;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          f(i, \"print\", this, 1).call(this, t), t.print(\" \" + this._depth[$.LEFT] + \"/\" + this._depth[$.RIGHT]), t.print(\" (\" + this.getDepthDelta() + \")\"), this._isInResult && t.print(\" inResult\");\n        }\n      }, {\n        key: \"setMinEdgeRing\",\n        value: function (t) {\n          this._minEdgeRing = t;\n        }\n      }, {\n        key: \"isLineEdge\",\n        value: function () {\n          var t = this._label.isLine(0) || this._label.isLine(1),\n            e = !this._label.isArea(0) || this._label.allPositionsEqual(0, H.EXTERIOR),\n            n = !this._label.isArea(1) || this._label.allPositionsEqual(1, H.EXTERIOR);\n          return t && e && n;\n        }\n      }, {\n        key: \"setEdgeRing\",\n        value: function (t) {\n          this._edgeRing = t;\n        }\n      }, {\n        key: \"getMinEdgeRing\",\n        value: function () {\n          return this._minEdgeRing;\n        }\n      }, {\n        key: \"getDepthDelta\",\n        value: function () {\n          var t = this._edge.getDepthDelta();\n          return this._isForward || (t = -t), t;\n        }\n      }, {\n        key: \"setInResult\",\n        value: function (t) {\n          this._isInResult = t;\n        }\n      }, {\n        key: \"getSym\",\n        value: function () {\n          return this._sym;\n        }\n      }, {\n        key: \"isForward\",\n        value: function () {\n          return this._isForward;\n        }\n      }, {\n        key: \"getEdge\",\n        value: function () {\n          return this._edge;\n        }\n      }, {\n        key: \"printEdge\",\n        value: function (t) {\n          this.print(t), t.print(\" \"), this._isForward ? this._edge.print(t) : this._edge.printReverse(t);\n        }\n      }, {\n        key: \"setSym\",\n        value: function (t) {\n          this._sym = t;\n        }\n      }, {\n        key: \"setVisitedEdge\",\n        value: function (t) {\n          this.setVisited(t), this._sym.setVisited(t);\n        }\n      }, {\n        key: \"setEdgeDepths\",\n        value: function (t, e) {\n          var n = this.getEdge().getDepthDelta();\n          this._isForward || (n = -n);\n          var i = 1;\n          t === $.LEFT && (i = -1);\n          var r = $.opposite(t),\n            s = e + n * i;\n          this.setDepth(t, e), this.setDepth(r, s);\n        }\n      }, {\n        key: \"getEdgeRing\",\n        value: function () {\n          return this._edgeRing;\n        }\n      }, {\n        key: \"isInResult\",\n        value: function () {\n          return this._isInResult;\n        }\n      }, {\n        key: \"setNext\",\n        value: function (t) {\n          this._next = t;\n        }\n      }, {\n        key: \"isVisited\",\n        value: function () {\n          return this._isVisited;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._isForward = null, this._isInResult = !1, this._isVisited = !1, this._sym = null, this._next = null, this._nextMin = null, this._edgeRing = null, this._minEdgeRing = null, this._depth = [0, -999, -999];\n          var t = arguments[0],\n            e = arguments[1];\n          if (We.constructor_.call(this, t), this._isForward = e, e) this.init(t.getCoordinate(0), t.getCoordinate(1));else {\n            var n = t.getNumPoints() - 1;\n            this.init(t.getCoordinate(n), t.getCoordinate(n - 1));\n          }\n          this.computeDirectedLabel();\n        }\n      }, {\n        key: \"depthFactor\",\n        value: function (t, e) {\n          return t === H.EXTERIOR && e === H.INTERIOR ? 1 : t === H.INTERIOR && e === H.EXTERIOR ? -1 : 0;\n        }\n      }]);\n    }(We),\n    Je = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"createNode\",\n        value: function (t) {\n          return new qe(t, null);\n        }\n      }]);\n    }(),\n    Qe = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"printEdges\",\n        value: function (t) {\n          t.println(\"Edges:\");\n          for (var e = 0; e < this._edges.size(); e++) {\n            t.println(\"edge \" + e + \":\");\n            var n = this._edges.get(e);\n            n.print(t), n.eiList.print(t);\n          }\n        }\n      }, {\n        key: \"find\",\n        value: function (t) {\n          return this._nodes.find(t);\n        }\n      }, {\n        key: \"addNode\",\n        value: function () {\n          if (arguments[0] instanceof qe) {\n            var t = arguments[0];\n            return this._nodes.addNode(t);\n          }\n          if (arguments[0] instanceof X) {\n            var e = arguments[0];\n            return this._nodes.addNode(e);\n          }\n        }\n      }, {\n        key: \"getNodeIterator\",\n        value: function () {\n          return this._nodes.iterator();\n        }\n      }, {\n        key: \"linkResultDirectedEdges\",\n        value: function () {\n          for (var t = this._nodes.iterator(); t.hasNext();) {\n            t.next().getEdges().linkResultDirectedEdges();\n          }\n        }\n      }, {\n        key: \"debugPrintln\",\n        value: function (t) {\n          mt.out.println(t);\n        }\n      }, {\n        key: \"isBoundaryNode\",\n        value: function (t, e) {\n          var n = this._nodes.find(e);\n          if (null === n) return !1;\n          var i = n.getLabel();\n          return null !== i && i.getLocation(t) === H.BOUNDARY;\n        }\n      }, {\n        key: \"linkAllDirectedEdges\",\n        value: function () {\n          for (var t = this._nodes.iterator(); t.hasNext();) {\n            t.next().getEdges().linkAllDirectedEdges();\n          }\n        }\n      }, {\n        key: \"matchInSameDirection\",\n        value: function (t, e, n, i) {\n          return !!t.equals(n) && ct.index(t, e, i) === ct.COLLINEAR && je.quadrant(t, e) === je.quadrant(n, i);\n        }\n      }, {\n        key: \"getEdgeEnds\",\n        value: function () {\n          return this._edgeEndList;\n        }\n      }, {\n        key: \"debugPrint\",\n        value: function (t) {\n          mt.out.print(t);\n        }\n      }, {\n        key: \"getEdgeIterator\",\n        value: function () {\n          return this._edges.iterator();\n        }\n      }, {\n        key: \"findEdgeInSameDirection\",\n        value: function (t, e) {\n          for (var n = 0; n < this._edges.size(); n++) {\n            var i = this._edges.get(n),\n              r = i.getCoordinates();\n            if (this.matchInSameDirection(t, e, r[0], r[1])) return i;\n            if (this.matchInSameDirection(t, e, r[r.length - 1], r[r.length - 2])) return i;\n          }\n          return null;\n        }\n      }, {\n        key: \"insertEdge\",\n        value: function (t) {\n          this._edges.add(t);\n        }\n      }, {\n        key: \"findEdgeEnd\",\n        value: function (t) {\n          for (var e = this.getEdgeEnds().iterator(); e.hasNext();) {\n            var n = e.next();\n            if (n.getEdge() === t) return n;\n          }\n          return null;\n        }\n      }, {\n        key: \"addEdges\",\n        value: function (t) {\n          for (var e = t.iterator(); e.hasNext();) {\n            var n = e.next();\n            this._edges.add(n);\n            var i = new Ke(n, !0),\n              r = new Ke(n, !1);\n            i.setSym(r), r.setSym(i), this.add(i), this.add(r);\n          }\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          this._nodes.add(t), this._edgeEndList.add(t);\n        }\n      }, {\n        key: \"getNodes\",\n        value: function () {\n          return this._nodes.values();\n        }\n      }, {\n        key: \"findEdge\",\n        value: function (t, e) {\n          for (var n = 0; n < this._edges.size(); n++) {\n            var i = this._edges.get(n),\n              r = i.getCoordinates();\n            if (t.equals(r[0]) && e.equals(r[1])) return i;\n          }\n          return null;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._edges = new yt(), this._nodes = null, this._edgeEndList = new yt(), 0 === arguments.length) this._nodes = new Ze(new Je());else if (1 === arguments.length) {\n            var t = arguments[0];\n            this._nodes = new Ze(t);\n          }\n        }\n      }, {\n        key: \"linkResultDirectedEdges\",\n        value: function (t) {\n          for (var e = t.iterator(); e.hasNext();) {\n            e.next().getEdges().linkResultDirectedEdges();\n          }\n        }\n      }]);\n    }(),\n    $e = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"sortShellsAndHoles\",\n        value: function (t, e, n) {\n          for (var i = t.iterator(); i.hasNext();) {\n            var r = i.next();\n            r.isHole() ? n.add(r) : e.add(r);\n          }\n        }\n      }, {\n        key: \"computePolygons\",\n        value: function (t) {\n          for (var e = new yt(), n = t.iterator(); n.hasNext();) {\n            var i = n.next().toPolygon(this._geometryFactory);\n            e.add(i);\n          }\n          return e;\n        }\n      }, {\n        key: \"placeFreeHoles\",\n        value: function (e, n) {\n          for (var i = n.iterator(); i.hasNext();) {\n            var r = i.next();\n            if (null === r.getShell()) {\n              var s = t.findEdgeRingContaining(r, e);\n              if (null === s) throw new gt(\"unable to assign hole to a shell\", r.getCoordinate(0));\n              r.setShell(s);\n            }\n          }\n        }\n      }, {\n        key: \"buildMinimalEdgeRings\",\n        value: function (t, e, n) {\n          for (var i = new yt(), r = t.iterator(); r.hasNext();) {\n            var s = r.next();\n            if (s.getMaxNodeDegree() > 2) {\n              s.linkDirectedEdgesForMinimalEdgeRings();\n              var a = s.buildMinimalRings(),\n                o = this.findShell(a);\n              null !== o ? (this.placePolygonHoles(o, a), e.add(o)) : n.addAll(a);\n            } else i.add(s);\n          }\n          return i;\n        }\n      }, {\n        key: \"buildMaximalEdgeRings\",\n        value: function (t) {\n          for (var e = new yt(), n = t.iterator(); n.hasNext();) {\n            var i = n.next();\n            if (i.isInResult() && i.getLabel().isArea() && null === i.getEdgeRing()) {\n              var r = new Fe(i, this._geometryFactory);\n              e.add(r), r.setInResult();\n            }\n          }\n          return e;\n        }\n      }, {\n        key: \"placePolygonHoles\",\n        value: function (t, e) {\n          for (var n = e.iterator(); n.hasNext();) {\n            var i = n.next();\n            i.isHole() && i.setShell(t);\n          }\n        }\n      }, {\n        key: \"getPolygons\",\n        value: function () {\n          return this.computePolygons(this._shellList);\n        }\n      }, {\n        key: \"findShell\",\n        value: function (t) {\n          for (var e = 0, n = null, i = t.iterator(); i.hasNext();) {\n            var r = i.next();\n            r.isHole() || (n = r, e++);\n          }\n          return G.isTrue(e <= 1, \"found two shells in MinimalEdgeRing list\"), n;\n        }\n      }, {\n        key: \"add\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.add(t.getEdgeEnds(), t.getNodes());\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            Qe.linkResultDirectedEdges(n);\n            var i = this.buildMaximalEdgeRings(e),\n              r = new yt(),\n              s = this.buildMinimalEdgeRings(i, this._shellList, r);\n            this.sortShellsAndHoles(s, this._shellList, r), this.placeFreeHoles(this._shellList, r);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._geometryFactory = null, this._shellList = new yt();\n          var t = arguments[0];\n          this._geometryFactory = t;\n        }\n      }, {\n        key: \"findEdgeRingContaining\",\n        value: function (t, e) {\n          for (var n = t.getLinearRing(), i = n.getEnvelopeInternal(), r = n.getCoordinateN(0), s = null, a = null, o = e.iterator(); o.hasNext();) {\n            var u = o.next(),\n              l = u.getLinearRing(),\n              h = l.getEnvelopeInternal();\n            if (!h.equals(i) && h.contains(i)) {\n              r = jt.ptNotInList(n.getCoordinates(), l.getCoordinates());\n              var c = !1;\n              be.isInRing(r, l.getCoordinates()) && (c = !0), c && (null === s || a.contains(h)) && (a = (s = u).getLinearRing().getEnvelopeInternal());\n            }\n          }\n          return s;\n        }\n      }]);\n    }(),\n    tn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"getBounds\",\n        value: function () {}\n      }]);\n    }(),\n    en = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getItem\",\n        value: function () {\n          return this._item;\n        }\n      }, {\n        key: \"getBounds\",\n        value: function () {\n          return this._bounds;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [tn, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._bounds = null, this._item = null;\n          var t = arguments[0],\n            e = arguments[1];\n          this._bounds = t, this._item = e;\n        }\n      }]);\n    }(),\n    nn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"poll\",\n        value: function () {\n          if (this.isEmpty()) return null;\n          var t = this._items.get(1);\n          return this._items.set(1, this._items.get(this._size)), this._size -= 1, this.reorder(1), t;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this._size;\n        }\n      }, {\n        key: \"reorder\",\n        value: function (t) {\n          for (var e = null, n = this._items.get(t); 2 * t <= this._size && ((e = 2 * t) !== this._size && this._items.get(e + 1).compareTo(this._items.get(e)) < 0 && e++, this._items.get(e).compareTo(n) < 0); t = e) this._items.set(t, this._items.get(e));\n          this._items.set(t, n);\n        }\n      }, {\n        key: \"clear\",\n        value: function () {\n          this._size = 0, this._items.clear();\n        }\n      }, {\n        key: \"peek\",\n        value: function () {\n          return this.isEmpty() ? null : this._items.get(1);\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return 0 === this._size;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          this._items.add(null), this._size += 1;\n          var e = this._size;\n          for (this._items.set(0, t); t.compareTo(this._items.get(Math.trunc(e / 2))) < 0; e /= 2) this._items.set(e, this._items.get(Math.trunc(e / 2)));\n          this._items.set(e, t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._size = null, this._items = null, this._size = 0, this._items = new yt(), this._items.add(null);\n        }\n      }]);\n    }(),\n    rn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"insert\",\n        value: function (t, e) {}\n      }, {\n        key: \"remove\",\n        value: function (t, e) {}\n      }, {\n        key: \"query\",\n        value: function () {}\n      }]);\n    }(),\n    sn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getLevel\",\n        value: function () {\n          return this._level;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this._childBoundables.size();\n        }\n      }, {\n        key: \"getChildBoundables\",\n        value: function () {\n          return this._childBoundables;\n        }\n      }, {\n        key: \"addChildBoundable\",\n        value: function (t) {\n          G.isTrue(null === this._bounds), this._childBoundables.add(t);\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return this._childBoundables.isEmpty();\n        }\n      }, {\n        key: \"getBounds\",\n        value: function () {\n          return null === this._bounds && (this._bounds = this.computeBounds()), this._bounds;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [tn, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._childBoundables = new yt(), this._bounds = null, this._level = null, 0 === arguments.length) ;else if (1 === arguments.length) {\n            var t = arguments[0];\n            this._level = t;\n          }\n        }\n      }]);\n    }(),\n    an = {\n      reverseOrder: function () {\n        return {\n          compare: function (t, e) {\n            return e.compareTo(t);\n          }\n        };\n      },\n      min: function (t) {\n        return an.sort(t), t.get(0);\n      },\n      sort: function (t, e) {\n        var n = t.toArray();\n        e ? At.sort(n, e) : At.sort(n);\n        for (var i = t.iterator(), r = 0, s = n.length; r < s; r++) i.next(), i.set(n[r]);\n      },\n      singletonList: function (t) {\n        var e = new yt();\n        return e.add(t), e;\n      }\n    },\n    on = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"maxDistance\",\n        value: function (e, n, i, r, s, a, o, u) {\n          var l = t.distance(e, n, s, a);\n          return l = Math.max(l, t.distance(e, n, o, u)), l = Math.max(l, t.distance(i, r, s, a)), l = Math.max(l, t.distance(i, r, o, u));\n        }\n      }, {\n        key: \"distance\",\n        value: function (t, e, n, i) {\n          var r = n - t,\n            s = i - e;\n          return Math.sqrt(r * r + s * s);\n        }\n      }, {\n        key: \"maximumDistance\",\n        value: function (e, n) {\n          var i = Math.min(e.getMinX(), n.getMinX()),\n            r = Math.min(e.getMinY(), n.getMinY()),\n            s = Math.max(e.getMaxX(), n.getMaxX()),\n            a = Math.max(e.getMaxY(), n.getMaxY());\n          return t.distance(i, r, s, a);\n        }\n      }, {\n        key: \"minMaxDistance\",\n        value: function (e, n) {\n          var i = e.getMinX(),\n            r = e.getMinY(),\n            s = e.getMaxX(),\n            a = e.getMaxY(),\n            o = n.getMinX(),\n            u = n.getMinY(),\n            l = n.getMaxX(),\n            h = n.getMaxY(),\n            c = t.maxDistance(i, r, i, a, o, u, o, h);\n          return c = Math.min(c, t.maxDistance(i, r, i, a, o, u, l, u)), c = Math.min(c, t.maxDistance(i, r, i, a, l, h, o, h)), c = Math.min(c, t.maxDistance(i, r, i, a, l, h, l, u)), c = Math.min(c, t.maxDistance(i, r, s, r, o, u, o, h)), c = Math.min(c, t.maxDistance(i, r, s, r, o, u, l, u)), c = Math.min(c, t.maxDistance(i, r, s, r, l, h, o, h)), c = Math.min(c, t.maxDistance(i, r, s, r, l, h, l, u)), c = Math.min(c, t.maxDistance(s, a, i, a, o, u, o, h)), c = Math.min(c, t.maxDistance(s, a, i, a, o, u, l, u)), c = Math.min(c, t.maxDistance(s, a, i, a, l, h, o, h)), c = Math.min(c, t.maxDistance(s, a, i, a, l, h, l, u)), c = Math.min(c, t.maxDistance(s, a, s, r, o, u, o, h)), c = Math.min(c, t.maxDistance(s, a, s, r, o, u, l, u)), c = Math.min(c, t.maxDistance(s, a, s, r, l, h, o, h)), c = Math.min(c, t.maxDistance(s, a, s, r, l, h, l, u));\n        }\n      }]);\n    }(),\n    un = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"maximumDistance\",\n        value: function () {\n          return on.maximumDistance(this._boundable1.getBounds(), this._boundable2.getBounds());\n        }\n      }, {\n        key: \"expandToQueue\",\n        value: function (e, n) {\n          var i = t.isComposite(this._boundable1),\n            r = t.isComposite(this._boundable2);\n          if (i && r) return t.area(this._boundable1) > t.area(this._boundable2) ? (this.expand(this._boundable1, this._boundable2, !1, e, n), null) : (this.expand(this._boundable2, this._boundable1, !0, e, n), null);\n          if (i) return this.expand(this._boundable1, this._boundable2, !1, e, n), null;\n          if (r) return this.expand(this._boundable2, this._boundable1, !0, e, n), null;\n          throw new m(\"neither boundable is composite\");\n        }\n      }, {\n        key: \"isLeaves\",\n        value: function () {\n          return !(t.isComposite(this._boundable1) || t.isComposite(this._boundable2));\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this._distance < e._distance ? -1 : this._distance > e._distance ? 1 : 0;\n        }\n      }, {\n        key: \"expand\",\n        value: function (e, n, i, r, s) {\n          for (var a = e.getChildBoundables().iterator(); a.hasNext();) {\n            var o = a.next(),\n              u = null;\n            (u = i ? new t(n, o, this._itemDistance) : new t(o, n, this._itemDistance)).getDistance() < s && r.add(u);\n          }\n        }\n      }, {\n        key: \"getBoundable\",\n        value: function (t) {\n          return 0 === t ? this._boundable1 : this._boundable2;\n        }\n      }, {\n        key: \"getDistance\",\n        value: function () {\n          return this._distance;\n        }\n      }, {\n        key: \"distance\",\n        value: function () {\n          return this.isLeaves() ? this._itemDistance.distance(this._boundable1, this._boundable2) : this._boundable1.getBounds().distance(this._boundable2.getBounds());\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._boundable1 = null, this._boundable2 = null, this._distance = null, this._itemDistance = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          this._boundable1 = t, this._boundable2 = e, this._itemDistance = n, this._distance = this.distance();\n        }\n      }, {\n        key: \"area\",\n        value: function (t) {\n          return t.getBounds().getArea();\n        }\n      }, {\n        key: \"isComposite\",\n        value: function (t) {\n          return t instanceof sn;\n        }\n      }]);\n    }(),\n    ln = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"visitItem\",\n        value: function (t) {}\n      }]);\n    }(),\n    hn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"queryInternal\",\n        value: function () {\n          if (rt(arguments[2], ln) && arguments[0] instanceof Object && arguments[1] instanceof sn) for (var t = arguments[0], e = arguments[2], n = arguments[1].getChildBoundables(), i = 0; i < n.size(); i++) {\n            var r = n.get(i);\n            this.getIntersectsOp().intersects(r.getBounds(), t) && (r instanceof sn ? this.queryInternal(t, r, e) : r instanceof en ? e.visitItem(r.getItem()) : G.shouldNeverReachHere());\n          } else if (rt(arguments[2], nt) && arguments[0] instanceof Object && arguments[1] instanceof sn) for (var s = arguments[0], a = arguments[2], o = arguments[1].getChildBoundables(), u = 0; u < o.size(); u++) {\n            var l = o.get(u);\n            this.getIntersectsOp().intersects(l.getBounds(), s) && (l instanceof sn ? this.queryInternal(s, l, a) : l instanceof en ? a.add(l.getItem()) : G.shouldNeverReachHere());\n          }\n        }\n      }, {\n        key: \"getNodeCapacity\",\n        value: function () {\n          return this._nodeCapacity;\n        }\n      }, {\n        key: \"lastNode\",\n        value: function (t) {\n          return t.get(t.size() - 1);\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          if (0 === arguments.length) return this.isEmpty() ? 0 : (this.build(), this.size(this._root));\n          if (1 === arguments.length) {\n            for (var t = 0, e = arguments[0].getChildBoundables().iterator(); e.hasNext();) {\n              var n = e.next();\n              n instanceof sn ? t += this.size(n) : n instanceof en && (t += 1);\n            }\n            return t;\n          }\n        }\n      }, {\n        key: \"removeItem\",\n        value: function (t, e) {\n          for (var n = null, i = t.getChildBoundables().iterator(); i.hasNext();) {\n            var r = i.next();\n            r instanceof en && r.getItem() === e && (n = r);\n          }\n          return null !== n && (t.getChildBoundables().remove(n), !0);\n        }\n      }, {\n        key: \"itemsTree\",\n        value: function () {\n          if (0 === arguments.length) {\n            this.build();\n            var t = this.itemsTree(this._root);\n            return null === t ? new yt() : t;\n          }\n          if (1 === arguments.length) {\n            for (var e = arguments[0], n = new yt(), i = e.getChildBoundables().iterator(); i.hasNext();) {\n              var r = i.next();\n              if (r instanceof sn) {\n                var s = this.itemsTree(r);\n                null !== s && n.add(s);\n              } else r instanceof en ? n.add(r.getItem()) : G.shouldNeverReachHere();\n            }\n            return n.size() <= 0 ? null : n;\n          }\n        }\n      }, {\n        key: \"insert\",\n        value: function (t, e) {\n          G.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\"), this._itemBoundables.add(new en(t, e));\n        }\n      }, {\n        key: \"boundablesAtLevel\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0],\n              e = new yt();\n            return this.boundablesAtLevel(t, this._root, e), e;\n          }\n          if (3 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = arguments[2];\n            if (G.isTrue(n > -2), i.getLevel() === n) return r.add(i), null;\n            for (var s = i.getChildBoundables().iterator(); s.hasNext();) {\n              var a = s.next();\n              a instanceof sn ? this.boundablesAtLevel(n, a, r) : (G.isTrue(a instanceof en), -1 === n && r.add(a));\n            }\n            return null;\n          }\n        }\n      }, {\n        key: \"query\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.build();\n            var e = new yt();\n            return this.isEmpty() || this.getIntersectsOp().intersects(this._root.getBounds(), t) && this.queryInternal(t, this._root, e), e;\n          }\n          if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1];\n            if (this.build(), this.isEmpty()) return null;\n            this.getIntersectsOp().intersects(this._root.getBounds(), n) && this.queryInternal(n, this._root, i);\n          }\n        }\n      }, {\n        key: \"build\",\n        value: function () {\n          if (this._built) return null;\n          this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1), this._itemBoundables = null, this._built = !0;\n        }\n      }, {\n        key: \"getRoot\",\n        value: function () {\n          return this.build(), this._root;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            return this.build(), !!this.getIntersectsOp().intersects(this._root.getBounds(), t) && this.remove(t, this._root, e);\n          }\n          if (3 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = arguments[2],\n              s = this.removeItem(i, r);\n            if (s) return !0;\n            for (var a = null, o = i.getChildBoundables().iterator(); o.hasNext();) {\n              var u = o.next();\n              if (this.getIntersectsOp().intersects(u.getBounds(), n) && u instanceof sn && (s = this.remove(n, u, r))) {\n                a = u;\n                break;\n              }\n            }\n            return null !== a && a.getChildBoundables().isEmpty() && i.getChildBoundables().remove(a), s;\n          }\n        }\n      }, {\n        key: \"createHigherLevels\",\n        value: function (t, e) {\n          G.isTrue(!t.isEmpty());\n          var n = this.createParentBoundables(t, e + 1);\n          return 1 === n.size() ? n.get(0) : this.createHigherLevels(n, e + 1);\n        }\n      }, {\n        key: \"depth\",\n        value: function () {\n          if (0 === arguments.length) return this.isEmpty() ? 0 : (this.build(), this.depth(this._root));\n          if (1 === arguments.length) {\n            for (var t = 0, e = arguments[0].getChildBoundables().iterator(); e.hasNext();) {\n              var n = e.next();\n              if (n instanceof sn) {\n                var i = this.depth(n);\n                i > t && (t = i);\n              }\n            }\n            return t + 1;\n          }\n        }\n      }, {\n        key: \"createParentBoundables\",\n        value: function (t, e) {\n          G.isTrue(!t.isEmpty());\n          var n = new yt();\n          n.add(this.createNode(e));\n          var i = new yt(t);\n          an.sort(i, this.getComparator());\n          for (var r = i.iterator(); r.hasNext();) {\n            var s = r.next();\n            this.lastNode(n).getChildBoundables().size() === this.getNodeCapacity() && n.add(this.createNode(e)), this.lastNode(n).addChildBoundable(s);\n          }\n          return n;\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function () {\n          return this._built ? this._root.isEmpty() : this._itemBoundables.isEmpty();\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._root = null, this._built = !1, this._itemBoundables = new yt(), this._nodeCapacity = null, 0 === arguments.length) t.constructor_.call(this, t.DEFAULT_NODE_CAPACITY);else if (1 === arguments.length) {\n            var e = arguments[0];\n            G.isTrue(e > 1, \"Node capacity must be greater than 1\"), this._nodeCapacity = e;\n          }\n        }\n      }, {\n        key: \"compareDoubles\",\n        value: function (t, e) {\n          return t > e ? 1 : t < e ? -1 : 0;\n        }\n      }]);\n    }();\n  hn.IntersectsOp = function () {}, hn.DEFAULT_NODE_CAPACITY = 10;\n  var cn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"distance\",\n        value: function (t, e) {}\n      }]);\n    }(),\n    fn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"createParentBoundablesFromVerticalSlices\",\n        value: function (t, e) {\n          G.isTrue(t.length > 0);\n          for (var n = new yt(), i = 0; i < t.length; i++) n.addAll(this.createParentBoundablesFromVerticalSlice(t[i], e));\n          return n;\n        }\n      }, {\n        key: \"nearestNeighbourK\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            return this.nearestNeighbourK(t, A.POSITIVE_INFINITY, e);\n          }\n          if (3 === arguments.length) {\n            var n = arguments[0],\n              r = arguments[2],\n              s = arguments[1],\n              a = new nn();\n            a.add(n);\n            for (var o = new nn(); !a.isEmpty() && s >= 0;) {\n              var u = a.poll(),\n                l = u.getDistance();\n              if (l >= s) break;\n              if (u.isLeaves()) {\n                if (o.size() < r) o.add(u);else o.peek().getDistance() > l && (o.poll(), o.add(u)), s = o.peek().getDistance();\n              } else u.expandToQueue(a, s);\n            }\n            return i.getItems(o);\n          }\n        }\n      }, {\n        key: \"createNode\",\n        value: function (t) {\n          return new gn(t);\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return 0 === arguments.length ? f(i, \"size\", this, 1).call(this) : f(i, \"size\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"insert\",\n        value: function () {\n          if (!(2 === arguments.length && arguments[1] instanceof Object && arguments[0] instanceof U)) return f(i, \"insert\", this, 1).apply(this, arguments);\n          var t = arguments[0],\n            e = arguments[1];\n          if (t.isNull()) return null;\n          f(i, \"insert\", this, 1).call(this, t, e);\n        }\n      }, {\n        key: \"getIntersectsOp\",\n        value: function () {\n          return i.intersectsOp;\n        }\n      }, {\n        key: \"verticalSlices\",\n        value: function (t, e) {\n          for (var n = Math.trunc(Math.ceil(t.size() / e)), i = new Array(e).fill(null), r = t.iterator(), s = 0; s < e; s++) {\n            i[s] = new yt();\n            for (var a = 0; r.hasNext() && a < n;) {\n              var o = r.next();\n              i[s].add(o), a++;\n            }\n          }\n          return i;\n        }\n      }, {\n        key: \"query\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return f(i, \"query\", this, 1).call(this, t);\n          }\n          if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            f(i, \"query\", this, 1).call(this, e, n);\n          }\n        }\n      }, {\n        key: \"getComparator\",\n        value: function () {\n          return i.yComparator;\n        }\n      }, {\n        key: \"createParentBoundablesFromVerticalSlice\",\n        value: function (t, e) {\n          return f(i, \"createParentBoundables\", this, 1).call(this, t, e);\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          if (2 === arguments.length && arguments[1] instanceof Object && arguments[0] instanceof U) {\n            var t = arguments[0],\n              e = arguments[1];\n            return f(i, \"remove\", this, 1).call(this, t, e);\n          }\n          return f(i, \"remove\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"depth\",\n        value: function () {\n          return 0 === arguments.length ? f(i, \"depth\", this, 1).call(this) : f(i, \"depth\", this, 1).apply(this, arguments);\n        }\n      }, {\n        key: \"createParentBoundables\",\n        value: function (t, e) {\n          G.isTrue(!t.isEmpty());\n          var n = Math.trunc(Math.ceil(t.size() / this.getNodeCapacity())),\n            r = new yt(t);\n          an.sort(r, i.xComparator);\n          var s = this.verticalSlices(r, Math.trunc(Math.ceil(Math.sqrt(n))));\n          return this.createParentBoundablesFromVerticalSlices(s, e);\n        }\n      }, {\n        key: \"nearestNeighbour\",\n        value: function () {\n          if (1 === arguments.length) {\n            if (rt(arguments[0], cn)) {\n              var t = arguments[0];\n              if (this.isEmpty()) return null;\n              var e = new un(this.getRoot(), this.getRoot(), t);\n              return this.nearestNeighbour(e);\n            }\n            if (arguments[0] instanceof un) {\n              var n = arguments[0],\n                i = A.POSITIVE_INFINITY,\n                r = null,\n                s = new nn();\n              for (s.add(n); !s.isEmpty() && i > 0;) {\n                var a = s.poll(),\n                  o = a.getDistance();\n                if (o >= i) break;\n                a.isLeaves() ? (i = o, r = a) : a.expandToQueue(s, i);\n              }\n              return null === r ? null : [r.getBoundable(0).getItem(), r.getBoundable(1).getItem()];\n            }\n          } else {\n            if (2 === arguments.length) {\n              var u = arguments[0],\n                l = arguments[1];\n              if (this.isEmpty() || u.isEmpty()) return null;\n              var h = new un(this.getRoot(), u.getRoot(), l);\n              return this.nearestNeighbour(h);\n            }\n            if (3 === arguments.length) {\n              var c = arguments[2],\n                f = new en(arguments[0], arguments[1]),\n                g = new un(this.getRoot(), f, c);\n              return this.nearestNeighbour(g)[0];\n            }\n            if (4 === arguments.length) {\n              var v = arguments[2],\n                y = arguments[3],\n                d = new en(arguments[0], arguments[1]),\n                _ = new un(this.getRoot(), d, v);\n              return this.nearestNeighbourK(_, y);\n            }\n          }\n        }\n      }, {\n        key: \"isWithinDistance\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1],\n              n = A.POSITIVE_INFINITY,\n              i = new nn();\n            for (i.add(t); !i.isEmpty();) {\n              var r = i.poll(),\n                s = r.getDistance();\n              if (s > e) return !1;\n              if (r.maximumDistance() <= e) return !0;\n              if (r.isLeaves()) {\n                if ((n = s) <= e) return !0;\n              } else r.expandToQueue(i, n);\n            }\n            return !1;\n          }\n          if (3 === arguments.length) {\n            var a = arguments[0],\n              o = arguments[1],\n              u = arguments[2],\n              l = new un(this.getRoot(), a.getRoot(), o);\n            return this.isWithinDistance(l, u);\n          }\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [rn, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (0 === arguments.length) i.constructor_.call(this, i.DEFAULT_NODE_CAPACITY);else if (1 === arguments.length) {\n            var t = arguments[0];\n            hn.constructor_.call(this, t);\n          }\n        }\n      }, {\n        key: \"centreX\",\n        value: function (t) {\n          return i.avg(t.getMinX(), t.getMaxX());\n        }\n      }, {\n        key: \"avg\",\n        value: function (t, e) {\n          return (t + e) / 2;\n        }\n      }, {\n        key: \"getItems\",\n        value: function (t) {\n          for (var e = new Array(t.size()).fill(null), n = 0; !t.isEmpty();) {\n            var i = t.poll();\n            e[n] = i.getBoundable(0).getItem(), n++;\n          }\n          return e;\n        }\n      }, {\n        key: \"centreY\",\n        value: function (t) {\n          return i.avg(t.getMinY(), t.getMaxY());\n        }\n      }]);\n    }(hn),\n    gn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"computeBounds\",\n        value: function () {\n          for (var t = null, e = this.getChildBoundables().iterator(); e.hasNext();) {\n            var n = e.next();\n            null === t ? t = new U(n.getBounds()) : t.expandToInclude(n.getBounds());\n          }\n          return t;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          var t = arguments[0];\n          sn.constructor_.call(this, t);\n        }\n      }]);\n    }(sn);\n  fn.STRtreeNode = gn, fn.xComparator = new (function () {\n    return s(function t() {\n      n(this, t);\n    }, [{\n      key: \"interfaces_\",\n      get: function () {\n        return [P];\n      }\n    }, {\n      key: \"compare\",\n      value: function (t, e) {\n        return hn.compareDoubles(fn.centreX(t.getBounds()), fn.centreX(e.getBounds()));\n      }\n    }]);\n  }())(), fn.yComparator = new (function () {\n    return s(function t() {\n      n(this, t);\n    }, [{\n      key: \"interfaces_\",\n      get: function () {\n        return [P];\n      }\n    }, {\n      key: \"compare\",\n      value: function (t, e) {\n        return hn.compareDoubles(fn.centreY(t.getBounds()), fn.centreY(e.getBounds()));\n      }\n    }]);\n  }())(), fn.intersectsOp = new (function () {\n    return s(function t() {\n      n(this, t);\n    }, [{\n      key: \"interfaces_\",\n      get: function () {\n        return [IntersectsOp];\n      }\n    }, {\n      key: \"intersects\",\n      value: function (t, e) {\n        return t.intersects(e);\n      }\n    }]);\n  }())(), fn.DEFAULT_NODE_CAPACITY = 10;\n  var vn = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"relativeSign\",\n        value: function (t, e) {\n          return t < e ? -1 : t > e ? 1 : 0;\n        }\n      }, {\n        key: \"compare\",\n        value: function (e, n, i) {\n          if (n.equals2D(i)) return 0;\n          var r = t.relativeSign(n.x, i.x),\n            s = t.relativeSign(n.y, i.y);\n          switch (e) {\n            case 0:\n              return t.compareValue(r, s);\n            case 1:\n              return t.compareValue(s, r);\n            case 2:\n              return t.compareValue(s, -r);\n            case 3:\n              return t.compareValue(-r, s);\n            case 4:\n              return t.compareValue(-r, -s);\n            case 5:\n              return t.compareValue(-s, -r);\n            case 6:\n              return t.compareValue(-s, r);\n            case 7:\n              return t.compareValue(r, -s);\n          }\n          return G.shouldNeverReachHere(\"invalid octant value\"), 0;\n        }\n      }, {\n        key: \"compareValue\",\n        value: function (t, e) {\n          return t < 0 ? -1 : t > 0 ? 1 : e < 0 ? -1 : e > 0 ? 1 : 0;\n        }\n      }]);\n    }(),\n    yn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getCoordinate\",\n        value: function () {\n          return this.coord;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          t.print(this.coord), t.print(\" seg # = \" + this.segmentIndex);\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this.segmentIndex < e.segmentIndex ? -1 : this.segmentIndex > e.segmentIndex ? 1 : this.coord.equals2D(e.coord) ? 0 : this._isInterior ? e._isInterior ? vn.compare(this._segmentOctant, this.coord, e.coord) : 1 : -1;\n        }\n      }, {\n        key: \"isEndPoint\",\n        value: function (t) {\n          return 0 === this.segmentIndex && !this._isInterior || this.segmentIndex === t;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this.segmentIndex + \":\" + this.coord.toString();\n        }\n      }, {\n        key: \"isInterior\",\n        value: function () {\n          return this._isInterior;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._segString = null, this.coord = null, this.segmentIndex = null, this._segmentOctant = null, this._isInterior = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2],\n            i = arguments[3];\n          this._segString = t, this.coord = new X(e), this.segmentIndex = n, this._segmentOctant = i, this._isInterior = !e.equals2D(t.getCoordinate(n));\n        }\n      }]);\n    }(),\n    dn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"hasNext\",\n        value: function () {}\n      }, {\n        key: \"next\",\n        value: function () {}\n      }, {\n        key: \"remove\",\n        value: function () {}\n      }]);\n    }(),\n    _n = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getSplitCoordinates\",\n        value: function () {\n          var t = new Zt();\n          this.addEndpoints();\n          for (var e = this.iterator(), n = e.next(); e.hasNext();) {\n            var i = e.next();\n            this.addEdgeCoordinates(n, i, t), n = i;\n          }\n          return t.toCoordinateArray();\n        }\n      }, {\n        key: \"addCollapsedNodes\",\n        value: function () {\n          var t = new yt();\n          this.findCollapsesFromInsertedNodes(t), this.findCollapsesFromExistingVertices(t);\n          for (var e = t.iterator(); e.hasNext();) {\n            var n = e.next().intValue();\n            this.add(this._edge.getCoordinate(n), n);\n          }\n        }\n      }, {\n        key: \"createSplitEdgePts\",\n        value: function (t, e) {\n          var n = e.segmentIndex - t.segmentIndex + 2;\n          if (2 === n) return [new X(t.coord), new X(e.coord)];\n          var i = this._edge.getCoordinate(e.segmentIndex),\n            r = e.isInterior() || !e.coord.equals2D(i);\n          r || n--;\n          var s = new Array(n).fill(null),\n            a = 0;\n          s[a++] = new X(t.coord);\n          for (var o = t.segmentIndex + 1; o <= e.segmentIndex; o++) s[a++] = this._edge.getCoordinate(o);\n          return r && (s[a] = new X(e.coord)), s;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          t.println(\"Intersections:\");\n          for (var e = this.iterator(); e.hasNext();) {\n            e.next().print(t);\n          }\n        }\n      }, {\n        key: \"findCollapsesFromExistingVertices\",\n        value: function (t) {\n          for (var e = 0; e < this._edge.size() - 2; e++) {\n            var n = this._edge.getCoordinate(e);\n            this._edge.getCoordinate(e + 1);\n            var i = this._edge.getCoordinate(e + 2);\n            n.equals2D(i) && t.add(at.valueOf(e + 1));\n          }\n        }\n      }, {\n        key: \"addEdgeCoordinates\",\n        value: function (t, e, n) {\n          var i = this.createSplitEdgePts(t, e);\n          n.add(i, !1);\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return this._nodeMap.values().iterator();\n        }\n      }, {\n        key: \"addSplitEdges\",\n        value: function (t) {\n          this.addEndpoints(), this.addCollapsedNodes();\n          for (var e = this.iterator(), n = e.next(); e.hasNext();) {\n            var i = e.next(),\n              r = this.createSplitEdge(n, i);\n            t.add(r), n = i;\n          }\n        }\n      }, {\n        key: \"findCollapseIndex\",\n        value: function (t, e, n) {\n          if (!t.coord.equals2D(e.coord)) return !1;\n          var i = e.segmentIndex - t.segmentIndex;\n          return e.isInterior() || i--, 1 === i && (n[0] = t.segmentIndex + 1, !0);\n        }\n      }, {\n        key: \"findCollapsesFromInsertedNodes\",\n        value: function (t) {\n          for (var e = new Array(1).fill(null), n = this.iterator(), i = n.next(); n.hasNext();) {\n            var r = n.next();\n            this.findCollapseIndex(i, r, e) && t.add(at.valueOf(e[0])), i = r;\n          }\n        }\n      }, {\n        key: \"getEdge\",\n        value: function () {\n          return this._edge;\n        }\n      }, {\n        key: \"addEndpoints\",\n        value: function () {\n          var t = this._edge.size() - 1;\n          this.add(this._edge.getCoordinate(0), 0), this.add(this._edge.getCoordinate(t), t);\n        }\n      }, {\n        key: \"createSplitEdge\",\n        value: function (t, e) {\n          var n = this.createSplitEdgePts(t, e);\n          return new xn(n, this._edge.getData());\n        }\n      }, {\n        key: \"add\",\n        value: function (t, e) {\n          var n = new yn(this._edge, t, e, this._edge.getSegmentOctant(e)),\n            i = this._nodeMap.get(n);\n          return null !== i ? (G.isTrue(i.coord.equals2D(t), \"Found equal nodes with different coordinates\"), i) : (this._nodeMap.put(n, n), n);\n        }\n      }, {\n        key: \"checkSplitEdgesCorrectness\",\n        value: function (t) {\n          var e = this._edge.getCoordinates(),\n            n = t.get(0).getCoordinate(0);\n          if (!n.equals2D(e[0])) throw new D(\"bad split edge start point at \" + n);\n          var i = t.get(t.size() - 1).getCoordinates(),\n            r = i[i.length - 1];\n          if (!r.equals2D(e[e.length - 1])) throw new D(\"bad split edge end point at \" + r);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._nodeMap = new He(), this._edge = null;\n          var t = arguments[0];\n          this._edge = t;\n        }\n      }]);\n    }(),\n    pn = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"octant\",\n        value: function () {\n          if (\"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n            var e = arguments[0],\n              n = arguments[1];\n            if (0 === e && 0 === n) throw new m(\"Cannot compute the octant for point ( \" + e + \", \" + n + \" )\");\n            var i = Math.abs(e),\n              r = Math.abs(n);\n            return e >= 0 ? n >= 0 ? i >= r ? 0 : 1 : i >= r ? 7 : 6 : n >= 0 ? i >= r ? 3 : 2 : i >= r ? 4 : 5;\n          }\n          if (arguments[0] instanceof X && arguments[1] instanceof X) {\n            var s = arguments[0],\n              a = arguments[1],\n              o = a.x - s.x,\n              u = a.y - s.y;\n            if (0 === o && 0 === u) throw new m(\"Cannot compute the octant for two identical points \" + s);\n            return t.octant(o, u);\n          }\n        }\n      }]);\n    }(),\n    mn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"getCoordinates\",\n        value: function () {}\n      }, {\n        key: \"size\",\n        value: function () {}\n      }, {\n        key: \"getCoordinate\",\n        value: function (t) {}\n      }, {\n        key: \"isClosed\",\n        value: function () {}\n      }, {\n        key: \"setData\",\n        value: function (t) {}\n      }, {\n        key: \"getData\",\n        value: function () {}\n      }]);\n    }(),\n    kn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"addIntersection\",\n        value: function (t, e) {}\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [mn];\n        }\n      }]);\n    }(),\n    xn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getCoordinates\",\n        value: function () {\n          return this._pts;\n        }\n      }, {\n        key: \"size\",\n        value: function () {\n          return this._pts.length;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function (t) {\n          return this._pts[t];\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          return this._pts[0].equals(this._pts[this._pts.length - 1]);\n        }\n      }, {\n        key: \"getSegmentOctant\",\n        value: function (t) {\n          return t === this._pts.length - 1 ? -1 : this.safeOctant(this.getCoordinate(t), this.getCoordinate(t + 1));\n        }\n      }, {\n        key: \"setData\",\n        value: function (t) {\n          this._data = t;\n        }\n      }, {\n        key: \"safeOctant\",\n        value: function (t, e) {\n          return t.equals2D(e) ? 0 : pn.octant(t, e);\n        }\n      }, {\n        key: \"getData\",\n        value: function () {\n          return this._data;\n        }\n      }, {\n        key: \"addIntersection\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            this.addIntersectionNode(t, e);\n          } else if (4 === arguments.length) {\n            var n = arguments[1],\n              i = arguments[3],\n              r = new X(arguments[0].getIntersection(i));\n            this.addIntersection(r, n);\n          }\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return Ce.toLineString(new Qt(this._pts));\n        }\n      }, {\n        key: \"getNodeList\",\n        value: function () {\n          return this._nodeList;\n        }\n      }, {\n        key: \"addIntersectionNode\",\n        value: function (t, e) {\n          var n = e,\n            i = n + 1;\n          if (i < this._pts.length) {\n            var r = this._pts[i];\n            t.equals2D(r) && (n = i);\n          }\n          return this._nodeList.add(t, n);\n        }\n      }, {\n        key: \"addIntersections\",\n        value: function (t, e, n) {\n          for (var i = 0; i < t.getIntersectionNum(); i++) this.addIntersection(t, e, n, i);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [kn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._nodeList = new _n(this), this._pts = null, this._data = null;\n          var t = arguments[0],\n            e = arguments[1];\n          this._pts = t, this._data = e;\n        }\n      }, {\n        key: \"getNodedSubstrings\",\n        value: function () {\n          if (1 === arguments.length) {\n            var e = arguments[0],\n              n = new yt();\n            return t.getNodedSubstrings(e, n), n;\n          }\n          if (2 === arguments.length) for (var i = arguments[1], r = arguments[0].iterator(); r.hasNext();) {\n            r.next().getNodeList().addSplitEdges(i);\n          }\n        }\n      }]);\n    }(),\n    In = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"minX\",\n        value: function () {\n          return Math.min(this.p0.x, this.p1.x);\n        }\n      }, {\n        key: \"orientationIndex\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0],\n              n = ct.index(this.p0, this.p1, e.p0),\n              i = ct.index(this.p0, this.p1, e.p1);\n            return n >= 0 && i >= 0 || n <= 0 && i <= 0 ? Math.max(n, i) : 0;\n          }\n          if (arguments[0] instanceof X) {\n            var r = arguments[0];\n            return ct.index(this.p0, this.p1, r);\n          }\n        }\n      }, {\n        key: \"toGeometry\",\n        value: function (t) {\n          return t.createLineString([this.p0, this.p1]);\n        }\n      }, {\n        key: \"isVertical\",\n        value: function () {\n          return this.p0.x === this.p1.x;\n        }\n      }, {\n        key: \"equals\",\n        value: function (e) {\n          if (!(e instanceof t)) return !1;\n          var n = e;\n          return this.p0.equals(n.p0) && this.p1.equals(n.p1);\n        }\n      }, {\n        key: \"intersection\",\n        value: function (t) {\n          var e = new we();\n          return e.computeIntersection(this.p0, this.p1, t.p0, t.p1), e.hasIntersection() ? e.getIntersection(0) : null;\n        }\n      }, {\n        key: \"project\",\n        value: function () {\n          if (arguments[0] instanceof X) {\n            var e = arguments[0];\n            if (e.equals(this.p0) || e.equals(this.p1)) return new X(e);\n            var n = this.projectionFactor(e),\n              i = new X();\n            return i.x = this.p0.x + n * (this.p1.x - this.p0.x), i.y = this.p0.y + n * (this.p1.y - this.p0.y), i;\n          }\n          if (arguments[0] instanceof t) {\n            var r = arguments[0],\n              s = this.projectionFactor(r.p0),\n              a = this.projectionFactor(r.p1);\n            if (s >= 1 && a >= 1) return null;\n            if (s <= 0 && a <= 0) return null;\n            var o = this.project(r.p0);\n            s < 0 && (o = this.p0), s > 1 && (o = this.p1);\n            var u = this.project(r.p1);\n            return a < 0 && (u = this.p0), a > 1 && (u = this.p1), new t(o, u);\n          }\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          this.p1.compareTo(this.p0) < 0 && this.reverse();\n        }\n      }, {\n        key: \"angle\",\n        value: function () {\n          return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function (t) {\n          return 0 === t ? this.p0 : this.p1;\n        }\n      }, {\n        key: \"distancePerpendicular\",\n        value: function (t) {\n          return xt.pointToLinePerpendicular(t, this.p0, this.p1);\n        }\n      }, {\n        key: \"minY\",\n        value: function () {\n          return Math.min(this.p0.y, this.p1.y);\n        }\n      }, {\n        key: \"midPoint\",\n        value: function () {\n          return t.midPoint(this.p0, this.p1);\n        }\n      }, {\n        key: \"projectionFactor\",\n        value: function (t) {\n          if (t.equals(this.p0)) return 0;\n          if (t.equals(this.p1)) return 1;\n          var e = this.p1.x - this.p0.x,\n            n = this.p1.y - this.p0.y,\n            i = e * e + n * n;\n          return i <= 0 ? A.NaN : ((t.x - this.p0.x) * e + (t.y - this.p0.y) * n) / i;\n        }\n      }, {\n        key: \"closestPoints\",\n        value: function (t) {\n          var e = this.intersection(t);\n          if (null !== e) return [e, e];\n          var n = new Array(2).fill(null),\n            i = A.MAX_VALUE,\n            r = null,\n            s = this.closestPoint(t.p0);\n          i = s.distance(t.p0), n[0] = s, n[1] = t.p0;\n          var a = this.closestPoint(t.p1);\n          (r = a.distance(t.p1)) < i && (i = r, n[0] = a, n[1] = t.p1);\n          var o = t.closestPoint(this.p0);\n          (r = o.distance(this.p0)) < i && (i = r, n[0] = this.p0, n[1] = o);\n          var u = t.closestPoint(this.p1);\n          return (r = u.distance(this.p1)) < i && (i = r, n[0] = this.p1, n[1] = u), n;\n        }\n      }, {\n        key: \"closestPoint\",\n        value: function (t) {\n          var e = this.projectionFactor(t);\n          return e > 0 && e < 1 ? this.project(t) : this.p0.distance(t) < this.p1.distance(t) ? this.p0 : this.p1;\n        }\n      }, {\n        key: \"maxX\",\n        value: function () {\n          return Math.max(this.p0.x, this.p1.x);\n        }\n      }, {\n        key: \"getLength\",\n        value: function () {\n          return this.p0.distance(this.p1);\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t,\n            n = this.p0.compareTo(e.p0);\n          return 0 !== n ? n : this.p1.compareTo(e.p1);\n        }\n      }, {\n        key: \"reverse\",\n        value: function () {\n          var t = this.p0;\n          this.p0 = this.p1, this.p1 = t;\n        }\n      }, {\n        key: \"equalsTopo\",\n        value: function (t) {\n          return this.p0.equals(t.p0) && this.p1.equals(t.p1) || this.p0.equals(t.p1) && this.p1.equals(t.p0);\n        }\n      }, {\n        key: \"lineIntersection\",\n        value: function (t) {\n          return pt.intersection(this.p0, this.p1, t.p0, t.p1);\n        }\n      }, {\n        key: \"maxY\",\n        value: function () {\n          return Math.max(this.p0.y, this.p1.y);\n        }\n      }, {\n        key: \"pointAlongOffset\",\n        value: function (t, e) {\n          var n = this.p0.x + t * (this.p1.x - this.p0.x),\n            i = this.p0.y + t * (this.p1.y - this.p0.y),\n            r = this.p1.x - this.p0.x,\n            s = this.p1.y - this.p0.y,\n            a = Math.sqrt(r * r + s * s),\n            o = 0,\n            u = 0;\n          if (0 !== e) {\n            if (a <= 0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n            o = e * r / a, u = e * s / a;\n          }\n          return new X(n - u, i + o);\n        }\n      }, {\n        key: \"setCoordinates\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            this.setCoordinates(t.p0, t.p1);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this.p0.x = e.x, this.p0.y = e.y, this.p1.x = n.x, this.p1.y = n.y;\n          }\n        }\n      }, {\n        key: \"segmentFraction\",\n        value: function (t) {\n          var e = this.projectionFactor(t);\n          return e < 0 ? e = 0 : (e > 1 || A.isNaN(e)) && (e = 1), e;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n        }\n      }, {\n        key: \"isHorizontal\",\n        value: function () {\n          return this.p0.y === this.p1.y;\n        }\n      }, {\n        key: \"reflect\",\n        value: function (t) {\n          var e = this.p1.getY() - this.p0.getY(),\n            n = this.p0.getX() - this.p1.getX(),\n            i = this.p0.getY() * (this.p1.getX() - this.p0.getX()) - this.p0.getX() * (this.p1.getY() - this.p0.getY()),\n            r = e * e + n * n,\n            s = e * e - n * n,\n            a = t.getX(),\n            o = t.getY();\n          return new X((-s * a - 2 * e * n * o - 2 * e * i) / r, (s * o - 2 * e * n * a - 2 * n * i) / r);\n        }\n      }, {\n        key: \"distance\",\n        value: function () {\n          if (arguments[0] instanceof t) {\n            var e = arguments[0];\n            return xt.segmentToSegment(this.p0, this.p1, e.p0, e.p1);\n          }\n          if (arguments[0] instanceof X) {\n            var n = arguments[0];\n            return xt.pointToSegment(n, this.p0, this.p1);\n          }\n        }\n      }, {\n        key: \"pointAlong\",\n        value: function (t) {\n          var e = new X();\n          return e.x = this.p0.x + t * (this.p1.x - this.p0.x), e.y = this.p0.y + t * (this.p1.y - this.p0.y), e;\n        }\n      }, {\n        key: \"hashCode\",\n        value: function () {\n          var t = A.doubleToLongBits(this.p0.x);\n          t ^= 31 * A.doubleToLongBits(this.p0.y);\n          var e = Math.trunc(t) ^ Math.trunc(t >> 32),\n            n = A.doubleToLongBits(this.p1.x);\n          return n ^= 31 * A.doubleToLongBits(this.p1.y), e ^ (Math.trunc(n) ^ Math.trunc(n >> 32));\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x, E];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.p0 = null, this.p1 = null, 0 === arguments.length) t.constructor_.call(this, new X(), new X());else if (1 === arguments.length) {\n            var e = arguments[0];\n            t.constructor_.call(this, e.p0, e.p1);\n          } else if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1];\n            this.p0 = n, this.p1 = i;\n          } else if (4 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1],\n              a = arguments[2],\n              o = arguments[3];\n            t.constructor_.call(this, new X(r, s), new X(a, o));\n          }\n        }\n      }, {\n        key: \"midPoint\",\n        value: function (t, e) {\n          return new X((t.x + e.x) / 2, (t.y + e.y) / 2);\n        }\n      }]);\n    }(),\n    En = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"overlap\",\n        value: function () {\n          if (2 === arguments.length) ;else if (4 === arguments.length) {\n            var t = arguments[1],\n              e = arguments[2],\n              n = arguments[3];\n            arguments[0].getLineSegment(t, this._overlapSeg1), e.getLineSegment(n, this._overlapSeg2), this.overlap(this._overlapSeg1, this._overlapSeg2);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._overlapSeg1 = new In(), this._overlapSeg2 = new In();\n        }\n      }]);\n    }(),\n    Nn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getLineSegment\",\n        value: function (t, e) {\n          e.p0 = this._pts[t], e.p1 = this._pts[t + 1];\n        }\n      }, {\n        key: \"computeSelect\",\n        value: function (t, e, n, i) {\n          var r = this._pts[e],\n            s = this._pts[n];\n          if (n - e == 1) return i.select(this, e), null;\n          if (!t.intersects(r, s)) return null;\n          var a = Math.trunc((e + n) / 2);\n          e < a && this.computeSelect(t, e, a, i), a < n && this.computeSelect(t, a, n, i);\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          for (var t = new Array(this._end - this._start + 1).fill(null), e = 0, n = this._start; n <= this._end; n++) t[e++] = this._pts[n];\n          return t;\n        }\n      }, {\n        key: \"computeOverlaps\",\n        value: function () {\n          if (2 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1];\n            this.computeOverlaps(this._start, this._end, t, t._start, t._end, e);\n          } else if (6 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = arguments[2],\n              s = arguments[3],\n              a = arguments[4],\n              o = arguments[5];\n            if (i - n == 1 && a - s == 1) return o.overlap(this, n, r, s), null;\n            if (!this.overlaps(n, i, r, s, a)) return null;\n            var u = Math.trunc((n + i) / 2),\n              l = Math.trunc((s + a) / 2);\n            n < u && (s < l && this.computeOverlaps(n, u, r, s, l, o), l < a && this.computeOverlaps(n, u, r, l, a, o)), u < i && (s < l && this.computeOverlaps(u, i, r, s, l, o), l < a && this.computeOverlaps(u, i, r, l, a, o));\n          }\n        }\n      }, {\n        key: \"setId\",\n        value: function (t) {\n          this._id = t;\n        }\n      }, {\n        key: \"select\",\n        value: function (t, e) {\n          this.computeSelect(t, this._start, this._end, e);\n        }\n      }, {\n        key: \"getEnvelope\",\n        value: function () {\n          if (null === this._env) {\n            var t = this._pts[this._start],\n              e = this._pts[this._end];\n            this._env = new U(t, e);\n          }\n          return this._env;\n        }\n      }, {\n        key: \"overlaps\",\n        value: function (t, e, n, i, r) {\n          return U.intersects(this._pts[t], this._pts[e], n._pts[i], n._pts[r]);\n        }\n      }, {\n        key: \"getEndIndex\",\n        value: function () {\n          return this._end;\n        }\n      }, {\n        key: \"getStartIndex\",\n        value: function () {\n          return this._start;\n        }\n      }, {\n        key: \"getContext\",\n        value: function () {\n          return this._context;\n        }\n      }, {\n        key: \"getId\",\n        value: function () {\n          return this._id;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._pts = null, this._start = null, this._end = null, this._env = null, this._context = null, this._id = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2],\n            i = arguments[3];\n          this._pts = t, this._start = e, this._end = n, this._context = i;\n        }\n      }]);\n    }(),\n    Tn = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, null, [{\n        key: \"findChainEnd\",\n        value: function (t, e) {\n          for (var n = e; n < t.length - 1 && t[n].equals2D(t[n + 1]);) n++;\n          if (n >= t.length - 1) return t.length - 1;\n          for (var i = je.quadrant(t[n], t[n + 1]), r = e + 1; r < t.length;) {\n            if (!t[r - 1].equals2D(t[r])) if (je.quadrant(t[r - 1], t[r]) !== i) break;\n            r++;\n          }\n          return r - 1;\n        }\n      }, {\n        key: \"getChains\",\n        value: function () {\n          if (1 === arguments.length) {\n            var e = arguments[0];\n            return t.getChains(e, null);\n          }\n          if (2 === arguments.length) {\n            var n = arguments[0],\n              i = arguments[1],\n              r = new yt(),\n              s = 0;\n            do {\n              var a = t.findChainEnd(n, s),\n                o = new Nn(n, s, a, i);\n              r.add(o), s = a;\n            } while (s < n.length - 1);\n            return r;\n          }\n        }\n      }]);\n    }(),\n    Sn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"computeNodes\",\n        value: function (t) {}\n      }, {\n        key: \"getNodedSubstrings\",\n        value: function () {}\n      }]);\n    }(),\n    Ln = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"setSegmentIntersector\",\n        value: function (t) {\n          this._segInt = t;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Sn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._segInt = null, 0 === arguments.length) ;else if (1 === arguments.length) {\n            var t = arguments[0];\n            this.setSegmentIntersector(t);\n          }\n        }\n      }]);\n    }(),\n    Cn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"getMonotoneChains\",\n        value: function () {\n          return this._monoChains;\n        }\n      }, {\n        key: \"getNodedSubstrings\",\n        value: function () {\n          return xn.getNodedSubstrings(this._nodedSegStrings);\n        }\n      }, {\n        key: \"getIndex\",\n        value: function () {\n          return this._index;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          for (var e = Tn.getChains(t.getCoordinates(), t).iterator(); e.hasNext();) {\n            var n = e.next();\n            n.setId(this._idCounter++), this._index.insert(n.getEnvelope(), n), this._monoChains.add(n);\n          }\n        }\n      }, {\n        key: \"computeNodes\",\n        value: function (t) {\n          this._nodedSegStrings = t;\n          for (var e = t.iterator(); e.hasNext();) this.add(e.next());\n          this.intersectChains();\n        }\n      }, {\n        key: \"intersectChains\",\n        value: function () {\n          for (var t = new Rn(this._segInt), e = this._monoChains.iterator(); e.hasNext();) for (var n = e.next(), i = this._index.query(n.getEnvelope()).iterator(); i.hasNext();) {\n            var r = i.next();\n            if (r.getId() > n.getId() && (n.computeOverlaps(r, t), this._nOverlaps++), this._segInt.isDone()) return null;\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._monoChains = new yt(), this._index = new fn(), this._idCounter = 0, this._nodedSegStrings = null, this._nOverlaps = 0, 0 === arguments.length) ;else if (1 === arguments.length) {\n            var t = arguments[0];\n            Ln.constructor_.call(this, t);\n          }\n        }\n      }]);\n    }(Ln),\n    Rn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"overlap\",\n        value: function () {\n          if (4 !== arguments.length) return f(i, \"overlap\", this, 1).apply(this, arguments);\n          var t = arguments[1],\n            e = arguments[2],\n            n = arguments[3],\n            r = arguments[0].getContext(),\n            s = e.getContext();\n          this._si.processIntersections(r, t, s, n);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._si = null;\n          var t = arguments[0];\n          this._si = t;\n        }\n      }]);\n    }(En);\n  Cn.SegmentOverlapAction = Rn;\n  var wn = function () {\n    function t() {\n      n(this, t), t.constructor_.apply(this, arguments);\n    }\n    return s(t, [{\n      key: \"isDeletable\",\n      value: function (t, e, n, i) {\n        var r = this._inputLine[t],\n          s = this._inputLine[e],\n          a = this._inputLine[n];\n        return !!this.isConcave(r, s, a) && !!this.isShallow(r, s, a, i) && this.isShallowSampled(r, s, t, n, i);\n      }\n    }, {\n      key: \"deleteShallowConcavities\",\n      value: function () {\n        for (var e = 1, n = this.findNextNonDeletedIndex(e), i = this.findNextNonDeletedIndex(n), r = !1; i < this._inputLine.length;) {\n          var s = !1;\n          this.isDeletable(e, n, i, this._distanceTol) && (this._isDeleted[n] = t.DELETE, s = !0, r = !0), e = s ? i : n, n = this.findNextNonDeletedIndex(e), i = this.findNextNonDeletedIndex(n);\n        }\n        return r;\n      }\n    }, {\n      key: \"isShallowConcavity\",\n      value: function (t, e, n, i) {\n        return ct.index(t, e, n) === this._angleOrientation && xt.pointToSegment(e, t, n) < i;\n      }\n    }, {\n      key: \"isShallowSampled\",\n      value: function (e, n, i, r, s) {\n        var a = Math.trunc((r - i) / t.NUM_PTS_TO_CHECK);\n        a <= 0 && (a = 1);\n        for (var o = i; o < r; o += a) if (!this.isShallow(e, n, this._inputLine[o], s)) return !1;\n        return !0;\n      }\n    }, {\n      key: \"isConcave\",\n      value: function (t, e, n) {\n        var i = ct.index(t, e, n) === this._angleOrientation;\n        return i;\n      }\n    }, {\n      key: \"simplify\",\n      value: function (t) {\n        this._distanceTol = Math.abs(t), t < 0 && (this._angleOrientation = ct.CLOCKWISE), this._isDeleted = new Array(this._inputLine.length).fill(null);\n        var e = !1;\n        do {\n          e = this.deleteShallowConcavities();\n        } while (e);\n        return this.collapseLine();\n      }\n    }, {\n      key: \"findNextNonDeletedIndex\",\n      value: function (e) {\n        for (var n = e + 1; n < this._inputLine.length && this._isDeleted[n] === t.DELETE;) n++;\n        return n;\n      }\n    }, {\n      key: \"isShallow\",\n      value: function (t, e, n, i) {\n        return xt.pointToSegment(e, t, n) < i;\n      }\n    }, {\n      key: \"collapseLine\",\n      value: function () {\n        for (var e = new Zt(), n = 0; n < this._inputLine.length; n++) this._isDeleted[n] !== t.DELETE && e.add(this._inputLine[n]);\n        return e.toCoordinateArray();\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        this._inputLine = null, this._distanceTol = null, this._isDeleted = null, this._angleOrientation = ct.COUNTERCLOCKWISE;\n        var t = arguments[0];\n        this._inputLine = t;\n      }\n    }, {\n      key: \"simplify\",\n      value: function (e, n) {\n        return new t(e).simplify(n);\n      }\n    }]);\n  }();\n  wn.INIT = 0, wn.DELETE = 1, wn.KEEP = 1, wn.NUM_PTS_TO_CHECK = 10;\n  var On = function () {\n    function t() {\n      n(this, t), t.constructor_.apply(this, arguments);\n    }\n    return s(t, [{\n      key: \"getCoordinates\",\n      value: function () {\n        return this._ptList.toArray(t.COORDINATE_ARRAY_TYPE);\n      }\n    }, {\n      key: \"setPrecisionModel\",\n      value: function (t) {\n        this._precisionModel = t;\n      }\n    }, {\n      key: \"addPt\",\n      value: function (t) {\n        var e = new X(t);\n        if (this._precisionModel.makePrecise(e), this.isRedundant(e)) return null;\n        this._ptList.add(e);\n      }\n    }, {\n      key: \"reverse\",\n      value: function () {}\n    }, {\n      key: \"addPts\",\n      value: function (t, e) {\n        if (e) for (var n = 0; n < t.length; n++) this.addPt(t[n]);else for (var i = t.length - 1; i >= 0; i--) this.addPt(t[i]);\n      }\n    }, {\n      key: \"isRedundant\",\n      value: function (t) {\n        if (this._ptList.size() < 1) return !1;\n        var e = this._ptList.get(this._ptList.size() - 1);\n        return t.distance(e) < this._minimimVertexDistance;\n      }\n    }, {\n      key: \"toString\",\n      value: function () {\n        return new ae().createLineString(this.getCoordinates()).toString();\n      }\n    }, {\n      key: \"closeRing\",\n      value: function () {\n        if (this._ptList.size() < 1) return null;\n        var t = new X(this._ptList.get(0)),\n          e = this._ptList.get(this._ptList.size() - 1);\n        if (t.equals(e)) return null;\n        this._ptList.add(t);\n      }\n    }, {\n      key: \"setMinimumVertexDistance\",\n      value: function (t) {\n        this._minimimVertexDistance = t;\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        this._ptList = null, this._precisionModel = null, this._minimimVertexDistance = 0, this._ptList = new yt();\n      }\n    }]);\n  }();\n  On.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n  var bn = function () {\n    function t() {\n      n(this, t);\n    }\n    return s(t, null, [{\n      key: \"toDegrees\",\n      value: function (t) {\n        return 180 * t / Math.PI;\n      }\n    }, {\n      key: \"normalize\",\n      value: function (e) {\n        for (; e > Math.PI;) e -= t.PI_TIMES_2;\n        for (; e <= -Math.PI;) e += t.PI_TIMES_2;\n        return e;\n      }\n    }, {\n      key: \"angle\",\n      value: function () {\n        if (1 === arguments.length) {\n          var t = arguments[0];\n          return Math.atan2(t.y, t.x);\n        }\n        if (2 === arguments.length) {\n          var e = arguments[0],\n            n = arguments[1],\n            i = n.x - e.x,\n            r = n.y - e.y;\n          return Math.atan2(r, i);\n        }\n      }\n    }, {\n      key: \"isAcute\",\n      value: function (t, e, n) {\n        var i = t.x - e.x,\n          r = t.y - e.y;\n        return i * (n.x - e.x) + r * (n.y - e.y) > 0;\n      }\n    }, {\n      key: \"isObtuse\",\n      value: function (t, e, n) {\n        var i = t.x - e.x,\n          r = t.y - e.y;\n        return i * (n.x - e.x) + r * (n.y - e.y) < 0;\n      }\n    }, {\n      key: \"interiorAngle\",\n      value: function (e, n, i) {\n        var r = t.angle(n, e),\n          s = t.angle(n, i);\n        return Math.abs(s - r);\n      }\n    }, {\n      key: \"normalizePositive\",\n      value: function (e) {\n        if (e < 0) {\n          for (; e < 0;) e += t.PI_TIMES_2;\n          e >= t.PI_TIMES_2 && (e = 0);\n        } else {\n          for (; e >= t.PI_TIMES_2;) e -= t.PI_TIMES_2;\n          e < 0 && (e = 0);\n        }\n        return e;\n      }\n    }, {\n      key: \"angleBetween\",\n      value: function (e, n, i) {\n        var r = t.angle(n, e),\n          s = t.angle(n, i);\n        return t.diff(r, s);\n      }\n    }, {\n      key: \"diff\",\n      value: function (t, e) {\n        var n = null;\n        return (n = t < e ? e - t : t - e) > Math.PI && (n = 2 * Math.PI - n), n;\n      }\n    }, {\n      key: \"toRadians\",\n      value: function (t) {\n        return t * Math.PI / 180;\n      }\n    }, {\n      key: \"getTurn\",\n      value: function (e, n) {\n        var i = Math.sin(n - e);\n        return i > 0 ? t.COUNTERCLOCKWISE : i < 0 ? t.CLOCKWISE : t.NONE;\n      }\n    }, {\n      key: \"angleBetweenOriented\",\n      value: function (e, n, i) {\n        var r = t.angle(n, e),\n          s = t.angle(n, i) - r;\n        return s <= -Math.PI ? s + t.PI_TIMES_2 : s > Math.PI ? s - t.PI_TIMES_2 : s;\n      }\n    }]);\n  }();\n  bn.PI_TIMES_2 = 2 * Math.PI, bn.PI_OVER_2 = Math.PI / 2, bn.PI_OVER_4 = Math.PI / 4, bn.COUNTERCLOCKWISE = ct.COUNTERCLOCKWISE, bn.CLOCKWISE = ct.CLOCKWISE, bn.NONE = ct.COLLINEAR;\n  var Mn = function () {\n    function t() {\n      n(this, t), t.constructor_.apply(this, arguments);\n    }\n    return s(t, [{\n      key: \"addNextSegment\",\n      value: function (t, e) {\n        if (this._s0 = this._s1, this._s1 = this._s2, this._s2 = t, this._seg0.setCoordinates(this._s0, this._s1), this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0), this._seg1.setCoordinates(this._s1, this._s2), this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1), this._s1.equals(this._s2)) return null;\n        var n = ct.index(this._s0, this._s1, this._s2),\n          i = n === ct.CLOCKWISE && this._side === $.LEFT || n === ct.COUNTERCLOCKWISE && this._side === $.RIGHT;\n        0 === n ? this.addCollinear(e) : i ? this.addOutsideTurn(n, e) : this.addInsideTurn(n, e);\n      }\n    }, {\n      key: \"addLineEndCap\",\n      value: function (t, e) {\n        var n = new In(t, e),\n          i = new In();\n        this.computeOffsetSegment(n, $.LEFT, this._distance, i);\n        var r = new In();\n        this.computeOffsetSegment(n, $.RIGHT, this._distance, r);\n        var s = e.x - t.x,\n          a = e.y - t.y,\n          o = Math.atan2(a, s);\n        switch (this._bufParams.getEndCapStyle()) {\n          case _.CAP_ROUND:\n            this._segList.addPt(i.p1), this.addDirectedFillet(e, o + Math.PI / 2, o - Math.PI / 2, ct.CLOCKWISE, this._distance), this._segList.addPt(r.p1);\n            break;\n          case _.CAP_FLAT:\n            this._segList.addPt(i.p1), this._segList.addPt(r.p1);\n            break;\n          case _.CAP_SQUARE:\n            var u = new X();\n            u.x = Math.abs(this._distance) * Math.cos(o), u.y = Math.abs(this._distance) * Math.sin(o);\n            var l = new X(i.p1.x + u.x, i.p1.y + u.y),\n              h = new X(r.p1.x + u.x, r.p1.y + u.y);\n            this._segList.addPt(l), this._segList.addPt(h);\n        }\n      }\n    }, {\n      key: \"getCoordinates\",\n      value: function () {\n        return this._segList.getCoordinates();\n      }\n    }, {\n      key: \"addMitreJoin\",\n      value: function (t, e, n, i) {\n        var r = pt.intersection(e.p0, e.p1, n.p0, n.p1);\n        if (null !== r && (i <= 0 ? 1 : r.distance(t) / Math.abs(i)) <= this._bufParams.getMitreLimit()) return this._segList.addPt(r), null;\n        this.addLimitedMitreJoin(e, n, i, this._bufParams.getMitreLimit());\n      }\n    }, {\n      key: \"addOutsideTurn\",\n      value: function (e, n) {\n        if (this._offset0.p1.distance(this._offset1.p0) < this._distance * t.OFFSET_SEGMENT_SEPARATION_FACTOR) return this._segList.addPt(this._offset0.p1), null;\n        this._bufParams.getJoinStyle() === _.JOIN_MITRE ? this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance) : this._bufParams.getJoinStyle() === _.JOIN_BEVEL ? this.addBevelJoin(this._offset0, this._offset1) : (n && this._segList.addPt(this._offset0.p1), this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, e, this._distance), this._segList.addPt(this._offset1.p0));\n      }\n    }, {\n      key: \"createSquare\",\n      value: function (t) {\n        this._segList.addPt(new X(t.x + this._distance, t.y + this._distance)), this._segList.addPt(new X(t.x + this._distance, t.y - this._distance)), this._segList.addPt(new X(t.x - this._distance, t.y - this._distance)), this._segList.addPt(new X(t.x - this._distance, t.y + this._distance)), this._segList.closeRing();\n      }\n    }, {\n      key: \"addSegments\",\n      value: function (t, e) {\n        this._segList.addPts(t, e);\n      }\n    }, {\n      key: \"addFirstSegment\",\n      value: function () {\n        this._segList.addPt(this._offset1.p0);\n      }\n    }, {\n      key: \"addCornerFillet\",\n      value: function (t, e, n, i, r) {\n        var s = e.x - t.x,\n          a = e.y - t.y,\n          o = Math.atan2(a, s),\n          u = n.x - t.x,\n          l = n.y - t.y,\n          h = Math.atan2(l, u);\n        i === ct.CLOCKWISE ? o <= h && (o += 2 * Math.PI) : o >= h && (o -= 2 * Math.PI), this._segList.addPt(e), this.addDirectedFillet(t, o, h, i, r), this._segList.addPt(n);\n      }\n    }, {\n      key: \"addLastSegment\",\n      value: function () {\n        this._segList.addPt(this._offset1.p1);\n      }\n    }, {\n      key: \"initSideSegments\",\n      value: function (t, e, n) {\n        this._s1 = t, this._s2 = e, this._side = n, this._seg1.setCoordinates(t, e), this.computeOffsetSegment(this._seg1, n, this._distance, this._offset1);\n      }\n    }, {\n      key: \"addLimitedMitreJoin\",\n      value: function (t, e, n, i) {\n        var r = this._seg0.p1,\n          s = bn.angle(r, this._seg0.p0),\n          a = bn.angleBetweenOriented(this._seg0.p0, r, this._seg1.p1) / 2,\n          o = bn.normalize(s + a),\n          u = bn.normalize(o + Math.PI),\n          l = i * n,\n          h = n - l * Math.abs(Math.sin(a)),\n          c = r.x + l * Math.cos(u),\n          f = r.y + l * Math.sin(u),\n          g = new X(c, f),\n          v = new In(r, g),\n          y = v.pointAlongOffset(1, h),\n          d = v.pointAlongOffset(1, -h);\n        this._side === $.LEFT ? (this._segList.addPt(y), this._segList.addPt(d)) : (this._segList.addPt(d), this._segList.addPt(y));\n      }\n    }, {\n      key: \"addDirectedFillet\",\n      value: function (t, e, n, i, r) {\n        var s = i === ct.CLOCKWISE ? -1 : 1,\n          a = Math.abs(e - n),\n          o = Math.trunc(a / this._filletAngleQuantum + .5);\n        if (o < 1) return null;\n        for (var u = a / o, l = new X(), h = 0; h < o; h++) {\n          var c = e + s * h * u;\n          l.x = t.x + r * Math.cos(c), l.y = t.y + r * Math.sin(c), this._segList.addPt(l);\n        }\n      }\n    }, {\n      key: \"computeOffsetSegment\",\n      value: function (t, e, n, i) {\n        var r = e === $.LEFT ? 1 : -1,\n          s = t.p1.x - t.p0.x,\n          a = t.p1.y - t.p0.y,\n          o = Math.sqrt(s * s + a * a),\n          u = r * n * s / o,\n          l = r * n * a / o;\n        i.p0.x = t.p0.x - l, i.p0.y = t.p0.y + u, i.p1.x = t.p1.x - l, i.p1.y = t.p1.y + u;\n      }\n    }, {\n      key: \"addInsideTurn\",\n      value: function (e, n) {\n        if (this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1), this._li.hasIntersection()) this._segList.addPt(this._li.getIntersection(0));else if (this._hasNarrowConcaveAngle = !0, this._offset0.p1.distance(this._offset1.p0) < this._distance * t.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) this._segList.addPt(this._offset0.p1);else {\n          if (this._segList.addPt(this._offset0.p1), this._closingSegLengthFactor > 0) {\n            var i = new X((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n            this._segList.addPt(i);\n            var r = new X((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n            this._segList.addPt(r);\n          } else this._segList.addPt(this._s1);\n          this._segList.addPt(this._offset1.p0);\n        }\n      }\n    }, {\n      key: \"createCircle\",\n      value: function (t) {\n        var e = new X(t.x + this._distance, t.y);\n        this._segList.addPt(e), this.addDirectedFillet(t, 0, 2 * Math.PI, -1, this._distance), this._segList.closeRing();\n      }\n    }, {\n      key: \"addBevelJoin\",\n      value: function (t, e) {\n        this._segList.addPt(t.p1), this._segList.addPt(e.p0);\n      }\n    }, {\n      key: \"init\",\n      value: function (e) {\n        this._distance = e, this._maxCurveSegmentError = e * (1 - Math.cos(this._filletAngleQuantum / 2)), this._segList = new On(), this._segList.setPrecisionModel(this._precisionModel), this._segList.setMinimumVertexDistance(e * t.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n      }\n    }, {\n      key: \"addCollinear\",\n      value: function (t) {\n        this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2), this._li.getIntersectionNum() >= 2 && (this._bufParams.getJoinStyle() === _.JOIN_BEVEL || this._bufParams.getJoinStyle() === _.JOIN_MITRE ? (t && this._segList.addPt(this._offset0.p1), this._segList.addPt(this._offset1.p0)) : this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, ct.CLOCKWISE, this._distance));\n      }\n    }, {\n      key: \"closeRing\",\n      value: function () {\n        this._segList.closeRing();\n      }\n    }, {\n      key: \"hasNarrowConcaveAngle\",\n      value: function () {\n        return this._hasNarrowConcaveAngle;\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        this._maxCurveSegmentError = 0, this._filletAngleQuantum = null, this._closingSegLengthFactor = 1, this._segList = null, this._distance = 0, this._precisionModel = null, this._bufParams = null, this._li = null, this._s0 = null, this._s1 = null, this._s2 = null, this._seg0 = new In(), this._seg1 = new In(), this._offset0 = new In(), this._offset1 = new In(), this._side = 0, this._hasNarrowConcaveAngle = !1;\n        var e = arguments[0],\n          n = arguments[1],\n          i = arguments[2];\n        this._precisionModel = e, this._bufParams = n, this._li = new we(), this._filletAngleQuantum = Math.PI / 2 / n.getQuadrantSegments(), n.getQuadrantSegments() >= 8 && n.getJoinStyle() === _.JOIN_ROUND && (this._closingSegLengthFactor = t.MAX_CLOSING_SEG_LEN_FACTOR), this.init(i);\n      }\n    }]);\n  }();\n  Mn.OFFSET_SEGMENT_SEPARATION_FACTOR = .001, Mn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = .001, Mn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1e-6, Mn.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n  var An = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getOffsetCurve\",\n        value: function (t, e) {\n          if (this._distance = e, 0 === e) return null;\n          var n = e < 0,\n            i = Math.abs(e),\n            r = this.getSegGen(i);\n          t.length <= 1 ? this.computePointCurve(t[0], r) : this.computeOffsetCurve(t, n, r);\n          var s = r.getCoordinates();\n          return n && jt.reverse(s), s;\n        }\n      }, {\n        key: \"computeSingleSidedBufferCurve\",\n        value: function (t, e, n) {\n          var i = this.simplifyTolerance(this._distance);\n          if (e) {\n            n.addSegments(t, !0);\n            var r = wn.simplify(t, -i),\n              s = r.length - 1;\n            n.initSideSegments(r[s], r[s - 1], $.LEFT), n.addFirstSegment();\n            for (var a = s - 2; a >= 0; a--) n.addNextSegment(r[a], !0);\n          } else {\n            n.addSegments(t, !1);\n            var o = wn.simplify(t, i),\n              u = o.length - 1;\n            n.initSideSegments(o[0], o[1], $.LEFT), n.addFirstSegment();\n            for (var l = 2; l <= u; l++) n.addNextSegment(o[l], !0);\n          }\n          n.addLastSegment(), n.closeRing();\n        }\n      }, {\n        key: \"computeRingBufferCurve\",\n        value: function (t, e, n) {\n          var i = this.simplifyTolerance(this._distance);\n          e === $.RIGHT && (i = -i);\n          var r = wn.simplify(t, i),\n            s = r.length - 1;\n          n.initSideSegments(r[s - 1], r[0], e);\n          for (var a = 1; a <= s; a++) {\n            var o = 1 !== a;\n            n.addNextSegment(r[a], o);\n          }\n          n.closeRing();\n        }\n      }, {\n        key: \"computeLineBufferCurve\",\n        value: function (t, e) {\n          var n = this.simplifyTolerance(this._distance),\n            i = wn.simplify(t, n),\n            r = i.length - 1;\n          e.initSideSegments(i[0], i[1], $.LEFT);\n          for (var s = 2; s <= r; s++) e.addNextSegment(i[s], !0);\n          e.addLastSegment(), e.addLineEndCap(i[r - 1], i[r]);\n          var a = wn.simplify(t, -n),\n            o = a.length - 1;\n          e.initSideSegments(a[o], a[o - 1], $.LEFT);\n          for (var u = o - 2; u >= 0; u--) e.addNextSegment(a[u], !0);\n          e.addLastSegment(), e.addLineEndCap(a[1], a[0]), e.closeRing();\n        }\n      }, {\n        key: \"computePointCurve\",\n        value: function (t, e) {\n          switch (this._bufParams.getEndCapStyle()) {\n            case _.CAP_ROUND:\n              e.createCircle(t);\n              break;\n            case _.CAP_SQUARE:\n              e.createSquare(t);\n          }\n        }\n      }, {\n        key: \"getLineCurve\",\n        value: function (t, e) {\n          if (this._distance = e, this.isLineOffsetEmpty(e)) return null;\n          var n = Math.abs(e),\n            i = this.getSegGen(n);\n          if (t.length <= 1) this.computePointCurve(t[0], i);else if (this._bufParams.isSingleSided()) {\n            var r = e < 0;\n            this.computeSingleSidedBufferCurve(t, r, i);\n          } else this.computeLineBufferCurve(t, i);\n          return i.getCoordinates();\n        }\n      }, {\n        key: \"getBufferParameters\",\n        value: function () {\n          return this._bufParams;\n        }\n      }, {\n        key: \"simplifyTolerance\",\n        value: function (t) {\n          return t * this._bufParams.getSimplifyFactor();\n        }\n      }, {\n        key: \"getRingCurve\",\n        value: function (e, n, i) {\n          if (this._distance = i, e.length <= 2) return this.getLineCurve(e, i);\n          if (0 === i) return t.copyCoordinates(e);\n          var r = this.getSegGen(i);\n          return this.computeRingBufferCurve(e, n, r), r.getCoordinates();\n        }\n      }, {\n        key: \"computeOffsetCurve\",\n        value: function (t, e, n) {\n          var i = this.simplifyTolerance(this._distance);\n          if (e) {\n            var r = wn.simplify(t, -i),\n              s = r.length - 1;\n            n.initSideSegments(r[s], r[s - 1], $.LEFT), n.addFirstSegment();\n            for (var a = s - 2; a >= 0; a--) n.addNextSegment(r[a], !0);\n          } else {\n            var o = wn.simplify(t, i),\n              u = o.length - 1;\n            n.initSideSegments(o[0], o[1], $.LEFT), n.addFirstSegment();\n            for (var l = 2; l <= u; l++) n.addNextSegment(o[l], !0);\n          }\n          n.addLastSegment();\n        }\n      }, {\n        key: \"isLineOffsetEmpty\",\n        value: function (t) {\n          return 0 === t || t < 0 && !this._bufParams.isSingleSided();\n        }\n      }, {\n        key: \"getSegGen\",\n        value: function (t) {\n          return new Mn(this._precisionModel, this._bufParams, t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._distance = 0, this._precisionModel = null, this._bufParams = null;\n          var t = arguments[0],\n            e = arguments[1];\n          this._precisionModel = t, this._bufParams = e;\n        }\n      }, {\n        key: \"copyCoordinates\",\n        value: function (t) {\n          for (var e = new Array(t.length).fill(null), n = 0; n < e.length; n++) e[n] = new X(t[n]);\n          return e;\n        }\n      }]);\n    }(),\n    Pn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"findStabbedSegments\",\n        value: function () {\n          if (1 === arguments.length) {\n            for (var t = arguments[0], e = new yt(), n = this._subgraphs.iterator(); n.hasNext();) {\n              var i = n.next(),\n                r = i.getEnvelope();\n              t.y < r.getMinY() || t.y > r.getMaxY() || this.findStabbedSegments(t, i.getDirectedEdges(), e);\n            }\n            return e;\n          }\n          if (3 === arguments.length) if (rt(arguments[2], nt) && arguments[0] instanceof X && arguments[1] instanceof Ke) for (var s = arguments[0], a = arguments[1], o = arguments[2], u = a.getEdge().getCoordinates(), l = 0; l < u.length - 1; l++) {\n            if (this._seg.p0 = u[l], this._seg.p1 = u[l + 1], this._seg.p0.y > this._seg.p1.y && this._seg.reverse(), !(Math.max(this._seg.p0.x, this._seg.p1.x) < s.x || this._seg.isHorizontal() || s.y < this._seg.p0.y || s.y > this._seg.p1.y || ct.index(this._seg.p0, this._seg.p1, s) === ct.RIGHT)) {\n              var h = a.getDepth($.LEFT);\n              this._seg.p0.equals(u[l]) || (h = a.getDepth($.RIGHT));\n              var c = new Dn(this._seg, h);\n              o.add(c);\n            }\n          } else if (rt(arguments[2], nt) && arguments[0] instanceof X && rt(arguments[1], nt)) for (var f = arguments[0], g = arguments[2], v = arguments[1].iterator(); v.hasNext();) {\n            var y = v.next();\n            y.isForward() && this.findStabbedSegments(f, y, g);\n          }\n        }\n      }, {\n        key: \"getDepth\",\n        value: function (t) {\n          var e = this.findStabbedSegments(t);\n          return 0 === e.size() ? 0 : an.min(e)._leftDepth;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._subgraphs = null, this._seg = new In();\n          var t = arguments[0];\n          this._subgraphs = t;\n        }\n      }]);\n    }(),\n    Dn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          if (this._upwardSeg.minX() >= e._upwardSeg.maxX()) return 1;\n          if (this._upwardSeg.maxX() <= e._upwardSeg.minX()) return -1;\n          var n = this._upwardSeg.orientationIndex(e._upwardSeg);\n          return 0 !== n || 0 !== (n = -1 * e._upwardSeg.orientationIndex(this._upwardSeg)) ? n : this._upwardSeg.compareTo(e._upwardSeg);\n        }\n      }, {\n        key: \"compareX\",\n        value: function (t, e) {\n          var n = t.p0.compareTo(e.p0);\n          return 0 !== n ? n : t.p1.compareTo(e.p1);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this._upwardSeg.toString();\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._upwardSeg = null, this._leftDepth = null;\n          var t = arguments[0],\n            e = arguments[1];\n          this._upwardSeg = new In(t), this._leftDepth = e;\n        }\n      }]);\n    }();\n  Pn.DepthSegment = Dn;\n  var Fn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, null, [{\n        key: \"constructor_\",\n        value: function () {\n          p.constructor_.call(this, \"Projective point not representable on the Cartesian plane.\");\n        }\n      }]);\n    }(p),\n    Gn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getY\",\n        value: function () {\n          var t = this.y / this.w;\n          if (A.isNaN(t) || A.isInfinite(t)) throw new Fn();\n          return t;\n        }\n      }, {\n        key: \"getX\",\n        value: function () {\n          var t = this.x / this.w;\n          if (A.isNaN(t) || A.isInfinite(t)) throw new Fn();\n          return t;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          var t = new X();\n          return t.x = this.getX(), t.y = this.getY(), t;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.x = null, this.y = null, this.w = null, 0 === arguments.length) this.x = 0, this.y = 0, this.w = 1;else if (1 === arguments.length) {\n            var e = arguments[0];\n            this.x = e.x, this.y = e.y, this.w = 1;\n          } else if (2 === arguments.length) {\n            if (\"number\" == typeof arguments[0] && \"number\" == typeof arguments[1]) {\n              var n = arguments[0],\n                i = arguments[1];\n              this.x = n, this.y = i, this.w = 1;\n            } else if (arguments[0] instanceof t && arguments[1] instanceof t) {\n              var r = arguments[0],\n                s = arguments[1];\n              this.x = r.y * s.w - s.y * r.w, this.y = s.x * r.w - r.x * s.w, this.w = r.x * s.y - s.x * r.y;\n            } else if (arguments[0] instanceof X && arguments[1] instanceof X) {\n              var a = arguments[0],\n                o = arguments[1];\n              this.x = a.y - o.y, this.y = o.x - a.x, this.w = a.x * o.y - o.x * a.y;\n            }\n          } else if (3 === arguments.length) {\n            var u = arguments[0],\n              l = arguments[1],\n              h = arguments[2];\n            this.x = u, this.y = l, this.w = h;\n          } else if (4 === arguments.length) {\n            var c = arguments[0],\n              f = arguments[1],\n              g = arguments[2],\n              v = arguments[3],\n              y = c.y - f.y,\n              d = f.x - c.x,\n              _ = c.x * f.y - f.x * c.y,\n              p = g.y - v.y,\n              m = v.x - g.x,\n              k = g.x * v.y - v.x * g.y;\n            this.x = d * k - m * _, this.y = p * _ - y * k, this.w = y * m - p * d;\n          }\n        }\n      }]);\n    }(),\n    qn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"area\",\n        value: function () {\n          return t.area(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"signedArea\",\n        value: function () {\n          return t.signedArea(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"interpolateZ\",\n        value: function (e) {\n          if (null === e) throw new m(\"Supplied point is null.\");\n          return t.interpolateZ(e, this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"longestSideLength\",\n        value: function () {\n          return t.longestSideLength(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"isAcute\",\n        value: function () {\n          return t.isAcute(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"circumcentre\",\n        value: function () {\n          return t.circumcentre(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"area3D\",\n        value: function () {\n          return t.area3D(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"centroid\",\n        value: function () {\n          return t.centroid(this.p0, this.p1, this.p2);\n        }\n      }, {\n        key: \"inCentre\",\n        value: function () {\n          return t.inCentre(this.p0, this.p1, this.p2);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this.p0 = null, this.p1 = null, this.p2 = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          this.p0 = t, this.p1 = e, this.p2 = n;\n        }\n      }, {\n        key: \"area\",\n        value: function (t, e, n) {\n          return Math.abs(((n.x - t.x) * (e.y - t.y) - (e.x - t.x) * (n.y - t.y)) / 2);\n        }\n      }, {\n        key: \"signedArea\",\n        value: function (t, e, n) {\n          return ((n.x - t.x) * (e.y - t.y) - (e.x - t.x) * (n.y - t.y)) / 2;\n        }\n      }, {\n        key: \"det\",\n        value: function (t, e, n, i) {\n          return t * i - e * n;\n        }\n      }, {\n        key: \"interpolateZ\",\n        value: function (t, e, n, i) {\n          var r = e.x,\n            s = e.y,\n            a = n.x - r,\n            o = i.x - r,\n            u = n.y - s,\n            l = i.y - s,\n            h = a * l - o * u,\n            c = t.x - r,\n            f = t.y - s,\n            g = (l * c - o * f) / h,\n            v = (-u * c + a * f) / h;\n          return e.getZ() + g * (n.getZ() - e.getZ()) + v * (i.getZ() - e.getZ());\n        }\n      }, {\n        key: \"longestSideLength\",\n        value: function (t, e, n) {\n          var i = t.distance(e),\n            r = e.distance(n),\n            s = n.distance(t),\n            a = i;\n          return r > a && (a = r), s > a && (a = s), a;\n        }\n      }, {\n        key: \"circumcentreDD\",\n        value: function (t, e, n) {\n          var i = ut.valueOf(t.x).subtract(n.x),\n            r = ut.valueOf(t.y).subtract(n.y),\n            s = ut.valueOf(e.x).subtract(n.x),\n            a = ut.valueOf(e.y).subtract(n.y),\n            o = ut.determinant(i, r, s, a).multiply(2),\n            u = i.sqr().add(r.sqr()),\n            l = s.sqr().add(a.sqr()),\n            h = ut.determinant(r, u, a, l),\n            c = ut.determinant(i, u, s, l),\n            f = ut.valueOf(n.x).subtract(h.divide(o)).doubleValue(),\n            g = ut.valueOf(n.y).add(c.divide(o)).doubleValue();\n          return new X(f, g);\n        }\n      }, {\n        key: \"isAcute\",\n        value: function (t, e, n) {\n          return !!bn.isAcute(t, e, n) && !!bn.isAcute(e, n, t) && !!bn.isAcute(n, t, e);\n        }\n      }, {\n        key: \"circumcentre\",\n        value: function (e, n, i) {\n          var r = i.x,\n            s = i.y,\n            a = e.x - r,\n            o = e.y - s,\n            u = n.x - r,\n            l = n.y - s,\n            h = 2 * t.det(a, o, u, l),\n            c = t.det(o, a * a + o * o, l, u * u + l * l),\n            f = t.det(a, a * a + o * o, u, u * u + l * l);\n          return new X(r - c / h, s + f / h);\n        }\n      }, {\n        key: \"perpendicularBisector\",\n        value: function (t, e) {\n          var n = e.x - t.x,\n            i = e.y - t.y,\n            r = new Gn(t.x + n / 2, t.y + i / 2, 1),\n            s = new Gn(t.x - i + n / 2, t.y + n + i / 2, 1);\n          return new Gn(r, s);\n        }\n      }, {\n        key: \"angleBisector\",\n        value: function (t, e, n) {\n          var i = e.distance(t),\n            r = i / (i + e.distance(n)),\n            s = n.x - t.x,\n            a = n.y - t.y;\n          return new X(t.x + r * s, t.y + r * a);\n        }\n      }, {\n        key: \"area3D\",\n        value: function (t, e, n) {\n          var i = e.x - t.x,\n            r = e.y - t.y,\n            s = e.getZ() - t.getZ(),\n            a = n.x - t.x,\n            o = n.y - t.y,\n            u = n.getZ() - t.getZ(),\n            l = r * u - s * o,\n            h = s * a - i * u,\n            c = i * o - r * a,\n            f = l * l + h * h + c * c,\n            g = Math.sqrt(f) / 2;\n          return g;\n        }\n      }, {\n        key: \"centroid\",\n        value: function (t, e, n) {\n          var i = (t.x + e.x + n.x) / 3,\n            r = (t.y + e.y + n.y) / 3;\n          return new X(i, r);\n        }\n      }, {\n        key: \"inCentre\",\n        value: function (t, e, n) {\n          var i = e.distance(n),\n            r = t.distance(n),\n            s = t.distance(e),\n            a = i + r + s,\n            o = (i * t.x + r * e.x + s * n.x) / a,\n            u = (i * t.y + r * e.y + s * n.y) / a;\n          return new X(o, u);\n        }\n      }]);\n    }(),\n    Yn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"addRingSide\",\n        value: function (t, e, n, i, r) {\n          if (0 === e && t.length < Xt.MINIMUM_VALID_SIZE) return null;\n          var s = i,\n            a = r;\n          t.length >= Xt.MINIMUM_VALID_SIZE && ct.isCCW(t) && (s = r, a = i, n = $.opposite(n));\n          var o = this._curveBuilder.getRingCurve(t, n, e);\n          this.addCurve(o, s, a);\n        }\n      }, {\n        key: \"addRingBothSides\",\n        value: function (t, e) {\n          this.addRingSide(t, e, $.LEFT, H.EXTERIOR, H.INTERIOR), this.addRingSide(t, e, $.RIGHT, H.INTERIOR, H.EXTERIOR);\n        }\n      }, {\n        key: \"addPoint\",\n        value: function (t) {\n          if (this._distance <= 0) return null;\n          var e = t.getCoordinates(),\n            n = this._curveBuilder.getLineCurve(e, this._distance);\n          this.addCurve(n, H.EXTERIOR, H.INTERIOR);\n        }\n      }, {\n        key: \"addPolygon\",\n        value: function (t) {\n          var e = this._distance,\n            n = $.LEFT;\n          this._distance < 0 && (e = -this._distance, n = $.RIGHT);\n          var i = t.getExteriorRing(),\n            r = jt.removeRepeatedPoints(i.getCoordinates());\n          if (this._distance < 0 && this.isErodedCompletely(i, this._distance)) return null;\n          if (this._distance <= 0 && r.length < 3) return null;\n          this.addRingSide(r, e, n, H.EXTERIOR, H.INTERIOR);\n          for (var s = 0; s < t.getNumInteriorRing(); s++) {\n            var a = t.getInteriorRingN(s),\n              o = jt.removeRepeatedPoints(a.getCoordinates());\n            this._distance > 0 && this.isErodedCompletely(a, -this._distance) || this.addRingSide(o, e, $.opposite(n), H.INTERIOR, H.EXTERIOR);\n          }\n        }\n      }, {\n        key: \"isTriangleErodedCompletely\",\n        value: function (t, e) {\n          var n = new qn(t[0], t[1], t[2]),\n            i = n.inCentre();\n          return xt.pointToSegment(i, n.p0, n.p1) < Math.abs(e);\n        }\n      }, {\n        key: \"addLineString\",\n        value: function (t) {\n          if (this._curveBuilder.isLineOffsetEmpty(this._distance)) return null;\n          var e = jt.removeRepeatedPoints(t.getCoordinates());\n          if (jt.isRing(e) && !this._curveBuilder.getBufferParameters().isSingleSided()) this.addRingBothSides(e, this._distance);else {\n            var n = this._curveBuilder.getLineCurve(e, this._distance);\n            this.addCurve(n, H.EXTERIOR, H.INTERIOR);\n          }\n        }\n      }, {\n        key: \"addCurve\",\n        value: function (t, e, n) {\n          if (null === t || t.length < 2) return null;\n          var i = new xn(t, new Ae(0, H.BOUNDARY, e, n));\n          this._curveList.add(i);\n        }\n      }, {\n        key: \"getCurves\",\n        value: function () {\n          return this.add(this._inputGeom), this._curveList;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          if (t.isEmpty()) return null;\n          if (t instanceof Dt) this.addPolygon(t);else if (t instanceof wt) this.addLineString(t);else if (t instanceof bt) this.addPoint(t);else if (t instanceof zt) this.addCollection(t);else if (t instanceof se) this.addCollection(t);else if (t instanceof te) this.addCollection(t);else {\n            if (!(t instanceof Yt)) throw new W(t.getGeometryType());\n            this.addCollection(t);\n          }\n        }\n      }, {\n        key: \"isErodedCompletely\",\n        value: function (t, e) {\n          var n = t.getCoordinates();\n          if (n.length < 4) return e < 0;\n          if (4 === n.length) return this.isTriangleErodedCompletely(n, e);\n          var i = t.getEnvelopeInternal(),\n            r = Math.min(i.getHeight(), i.getWidth());\n          return e < 0 && 2 * Math.abs(e) > r;\n        }\n      }, {\n        key: \"addCollection\",\n        value: function (t) {\n          for (var e = 0; e < t.getNumGeometries(); e++) {\n            var n = t.getGeometryN(e);\n            this.add(n);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._inputGeom = null, this._distance = null, this._curveBuilder = null, this._curveList = new yt();\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          this._inputGeom = t, this._distance = e, this._curveBuilder = n;\n        }\n      }]);\n    }(),\n    zn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"locate\",\n        value: function (t) {}\n      }]);\n    }(),\n    Xn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"next\",\n        value: function () {\n          if (this._atStart) return this._atStart = !1, t.isAtomic(this._parent) && this._index++, this._parent;\n          if (null !== this._subcollectionIterator) {\n            if (this._subcollectionIterator.hasNext()) return this._subcollectionIterator.next();\n            this._subcollectionIterator = null;\n          }\n          if (this._index >= this._max) throw new j();\n          var e = this._parent.getGeometryN(this._index++);\n          return e instanceof Yt ? (this._subcollectionIterator = new t(e), this._subcollectionIterator.next()) : e;\n        }\n      }, {\n        key: \"remove\",\n        value: function () {\n          throw new W(this.getClass().getName());\n        }\n      }, {\n        key: \"hasNext\",\n        value: function () {\n          if (this._atStart) return !0;\n          if (null !== this._subcollectionIterator) {\n            if (this._subcollectionIterator.hasNext()) return !0;\n            this._subcollectionIterator = null;\n          }\n          return !(this._index >= this._max);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [dn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._parent = null, this._atStart = null, this._max = null, this._index = null, this._subcollectionIterator = null;\n          var t = arguments[0];\n          this._parent = t, this._atStart = !0, this._index = 0, this._max = t.getNumGeometries();\n        }\n      }, {\n        key: \"isAtomic\",\n        value: function (t) {\n          return !(t instanceof Yt);\n        }\n      }]);\n    }(),\n    Bn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"locate\",\n        value: function (e) {\n          return t.locate(e, this._geom);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [zn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._geom = null;\n          var t = arguments[0];\n          this._geom = t;\n        }\n      }, {\n        key: \"locatePointInPolygon\",\n        value: function (e, n) {\n          if (n.isEmpty()) return H.EXTERIOR;\n          var i = n.getExteriorRing(),\n            r = t.locatePointInRing(e, i);\n          if (r !== H.INTERIOR) return r;\n          for (var s = 0; s < n.getNumInteriorRing(); s++) {\n            var a = n.getInteriorRingN(s),\n              o = t.locatePointInRing(e, a);\n            if (o === H.BOUNDARY) return H.BOUNDARY;\n            if (o === H.INTERIOR) return H.EXTERIOR;\n          }\n          return H.INTERIOR;\n        }\n      }, {\n        key: \"locatePointInRing\",\n        value: function (t, e) {\n          return e.getEnvelopeInternal().intersects(t) ? be.locateInRing(t, e.getCoordinates()) : H.EXTERIOR;\n        }\n      }, {\n        key: \"containsPointInPolygon\",\n        value: function (e, n) {\n          return H.EXTERIOR !== t.locatePointInPolygon(e, n);\n        }\n      }, {\n        key: \"locateInGeometry\",\n        value: function (e, n) {\n          if (n instanceof Dt) return t.locatePointInPolygon(e, n);\n          if (n instanceof Yt) for (var i = new Xn(n); i.hasNext();) {\n            var r = i.next();\n            if (r !== n) {\n              var s = t.locateInGeometry(e, r);\n              if (s !== H.EXTERIOR) return s;\n            }\n          }\n          return H.EXTERIOR;\n        }\n      }, {\n        key: \"isContained\",\n        value: function (e, n) {\n          return H.EXTERIOR !== t.locate(e, n);\n        }\n      }, {\n        key: \"locate\",\n        value: function (e, n) {\n          return n.isEmpty() ? H.EXTERIOR : n.getEnvelopeInternal().intersects(e) ? t.locateInGeometry(e, n) : H.EXTERIOR;\n        }\n      }]);\n    }(),\n    Un = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getNextCW\",\n        value: function (t) {\n          this.getEdges();\n          var e = this._edgeList.indexOf(t),\n            n = e - 1;\n          return 0 === e && (n = this._edgeList.size() - 1), this._edgeList.get(n);\n        }\n      }, {\n        key: \"propagateSideLabels\",\n        value: function (t) {\n          for (var e = H.NONE, n = this.iterator(); n.hasNext();) {\n            var i = n.next().getLabel();\n            i.isArea(t) && i.getLocation(t, $.LEFT) !== H.NONE && (e = i.getLocation(t, $.LEFT));\n          }\n          if (e === H.NONE) return null;\n          for (var r = e, s = this.iterator(); s.hasNext();) {\n            var a = s.next(),\n              o = a.getLabel();\n            if (o.getLocation(t, $.ON) === H.NONE && o.setLocation(t, $.ON, r), o.isArea(t)) {\n              var u = o.getLocation(t, $.LEFT),\n                l = o.getLocation(t, $.RIGHT);\n              if (l !== H.NONE) {\n                if (l !== r) throw new gt(\"side location conflict\", a.getCoordinate());\n                u === H.NONE && G.shouldNeverReachHere(\"found single null side (at \" + a.getCoordinate() + \")\"), r = u;\n              } else G.isTrue(o.getLocation(t, $.LEFT) === H.NONE, \"found single null side\"), o.setLocation(t, $.RIGHT, r), o.setLocation(t, $.LEFT, r);\n            }\n          }\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          var t = this.iterator();\n          return t.hasNext() ? t.next().getCoordinate() : null;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          mt.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n          for (var e = this.iterator(); e.hasNext();) {\n            e.next().print(t);\n          }\n        }\n      }, {\n        key: \"isAreaLabelsConsistent\",\n        value: function (t) {\n          return this.computeEdgeEndLabels(t.getBoundaryNodeRule()), this.checkAreaLabelsConsistent(0);\n        }\n      }, {\n        key: \"checkAreaLabelsConsistent\",\n        value: function (t) {\n          var e = this.getEdges();\n          if (e.size() <= 0) return !0;\n          var n = e.size() - 1,\n            i = e.get(n).getLabel().getLocation(t, $.LEFT);\n          G.isTrue(i !== H.NONE, \"Found unlabelled area edge\");\n          for (var r = i, s = this.iterator(); s.hasNext();) {\n            var a = s.next().getLabel();\n            G.isTrue(a.isArea(t), \"Found non-area edge\");\n            var o = a.getLocation(t, $.LEFT),\n              u = a.getLocation(t, $.RIGHT);\n            if (o === u) return !1;\n            if (u !== r) return !1;\n            r = o;\n          }\n          return !0;\n        }\n      }, {\n        key: \"findIndex\",\n        value: function (t) {\n          this.iterator();\n          for (var e = 0; e < this._edgeList.size(); e++) {\n            if (this._edgeList.get(e) === t) return e;\n          }\n          return -1;\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return this.getEdges().iterator();\n        }\n      }, {\n        key: \"getEdges\",\n        value: function () {\n          return null === this._edgeList && (this._edgeList = new yt(this._edgeMap.values())), this._edgeList;\n        }\n      }, {\n        key: \"getLocation\",\n        value: function (t, e, n) {\n          return this._ptInAreaLocation[t] === H.NONE && (this._ptInAreaLocation[t] = Bn.locate(e, n[t].getGeometry())), this._ptInAreaLocation[t];\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var t = new st();\n          t.append(\"EdgeEndStar:   \" + this.getCoordinate()), t.append(\"\\n\");\n          for (var e = this.iterator(); e.hasNext();) {\n            var n = e.next();\n            t.append(n), t.append(\"\\n\");\n          }\n          return t.toString();\n        }\n      }, {\n        key: \"computeEdgeEndLabels\",\n        value: function (t) {\n          for (var e = this.iterator(); e.hasNext();) {\n            e.next().computeLabel(t);\n          }\n        }\n      }, {\n        key: \"computeLabelling\",\n        value: function (t) {\n          this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()), this.propagateSideLabels(0), this.propagateSideLabels(1);\n          for (var e = [!1, !1], n = this.iterator(); n.hasNext();) for (var i = n.next().getLabel(), r = 0; r < 2; r++) i.isLine(r) && i.getLocation(r) === H.BOUNDARY && (e[r] = !0);\n          for (var s = this.iterator(); s.hasNext();) for (var a = s.next(), o = a.getLabel(), u = 0; u < 2; u++) if (o.isAnyNull(u)) {\n            var l = H.NONE;\n            if (e[u]) l = H.EXTERIOR;else {\n              var h = a.getCoordinate();\n              l = this.getLocation(u, h, t);\n            }\n            o.setAllLocationsIfNull(u, l);\n          }\n        }\n      }, {\n        key: \"getDegree\",\n        value: function () {\n          return this._edgeMap.size();\n        }\n      }, {\n        key: \"insertEdgeEnd\",\n        value: function (t, e) {\n          this._edgeMap.put(t, e), this._edgeList = null;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._edgeMap = new He(), this._edgeList = null, this._ptInAreaLocation = [H.NONE, H.NONE];\n        }\n      }]);\n    }(),\n    Vn = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"linkResultDirectedEdges\",\n        value: function () {\n          this.getResultAreaEdges();\n          for (var t = null, e = null, n = this._SCANNING_FOR_INCOMING, i = 0; i < this._resultAreaEdgeList.size(); i++) {\n            var r = this._resultAreaEdgeList.get(i),\n              s = r.getSym();\n            if (r.getLabel().isArea()) switch (null === t && r.isInResult() && (t = r), n) {\n              case this._SCANNING_FOR_INCOMING:\n                if (!s.isInResult()) continue;\n                e = s, n = this._LINKING_TO_OUTGOING;\n                break;\n              case this._LINKING_TO_OUTGOING:\n                if (!r.isInResult()) continue;\n                e.setNext(r), n = this._SCANNING_FOR_INCOMING;\n            }\n          }\n          if (n === this._LINKING_TO_OUTGOING) {\n            if (null === t) throw new gt(\"no outgoing dirEdge found\", this.getCoordinate());\n            G.isTrue(t.isInResult(), \"unable to link last incoming dirEdge\"), e.setNext(t);\n          }\n        }\n      }, {\n        key: \"insert\",\n        value: function (t) {\n          var e = t;\n          this.insertEdgeEnd(e, e);\n        }\n      }, {\n        key: \"getRightmostEdge\",\n        value: function () {\n          var t = this.getEdges(),\n            e = t.size();\n          if (e < 1) return null;\n          var n = t.get(0);\n          if (1 === e) return n;\n          var i = t.get(e - 1),\n            r = n.getQuadrant(),\n            s = i.getQuadrant();\n          return je.isNorthern(r) && je.isNorthern(s) ? n : je.isNorthern(r) || je.isNorthern(s) ? 0 !== n.getDy() ? n : 0 !== i.getDy() ? i : (G.shouldNeverReachHere(\"found two horizontal edges incident on node\"), null) : i;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          mt.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n          for (var e = this.iterator(); e.hasNext();) {\n            var n = e.next();\n            t.print(\"out \"), n.print(t), t.println(), t.print(\"in \"), n.getSym().print(t), t.println();\n          }\n        }\n      }, {\n        key: \"getResultAreaEdges\",\n        value: function () {\n          if (null !== this._resultAreaEdgeList) return this._resultAreaEdgeList;\n          this._resultAreaEdgeList = new yt();\n          for (var t = this.iterator(); t.hasNext();) {\n            var e = t.next();\n            (e.isInResult() || e.getSym().isInResult()) && this._resultAreaEdgeList.add(e);\n          }\n          return this._resultAreaEdgeList;\n        }\n      }, {\n        key: \"updateLabelling\",\n        value: function (t) {\n          for (var e = this.iterator(); e.hasNext();) {\n            var n = e.next().getLabel();\n            n.setAllLocationsIfNull(0, t.getLocation(0)), n.setAllLocationsIfNull(1, t.getLocation(1));\n          }\n        }\n      }, {\n        key: \"linkAllDirectedEdges\",\n        value: function () {\n          this.getEdges();\n          for (var t = null, e = null, n = this._edgeList.size() - 1; n >= 0; n--) {\n            var i = this._edgeList.get(n),\n              r = i.getSym();\n            null === e && (e = r), null !== t && r.setNext(t), t = i;\n          }\n          e.setNext(t);\n        }\n      }, {\n        key: \"computeDepths\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0],\n              e = this.findIndex(t),\n              n = t.getDepth($.LEFT),\n              i = t.getDepth($.RIGHT),\n              r = this.computeDepths(e + 1, this._edgeList.size(), n);\n            if (this.computeDepths(0, e, r) !== i) throw new gt(\"depth mismatch at \" + t.getCoordinate());\n          } else if (3 === arguments.length) {\n            for (var s = arguments[1], a = arguments[2], o = arguments[0]; o < s; o++) {\n              var u = this._edgeList.get(o);\n              u.setEdgeDepths($.RIGHT, a), a = u.getDepth($.LEFT);\n            }\n            return a;\n          }\n        }\n      }, {\n        key: \"mergeSymLabels\",\n        value: function () {\n          for (var t = this.iterator(); t.hasNext();) {\n            var e = t.next();\n            e.getLabel().merge(e.getSym().getLabel());\n          }\n        }\n      }, {\n        key: \"linkMinimalDirectedEdges\",\n        value: function (t) {\n          for (var e = null, n = null, i = this._SCANNING_FOR_INCOMING, r = this._resultAreaEdgeList.size() - 1; r >= 0; r--) {\n            var s = this._resultAreaEdgeList.get(r),\n              a = s.getSym();\n            switch (null === e && s.getEdgeRing() === t && (e = s), i) {\n              case this._SCANNING_FOR_INCOMING:\n                if (a.getEdgeRing() !== t) continue;\n                n = a, i = this._LINKING_TO_OUTGOING;\n                break;\n              case this._LINKING_TO_OUTGOING:\n                if (s.getEdgeRing() !== t) continue;\n                n.setNextMin(s), i = this._SCANNING_FOR_INCOMING;\n            }\n          }\n          i === this._LINKING_TO_OUTGOING && (G.isTrue(null !== e, \"found null for first outgoing dirEdge\"), G.isTrue(e.getEdgeRing() === t, \"unable to link last incoming dirEdge\"), n.setNextMin(e));\n        }\n      }, {\n        key: \"getOutgoingDegree\",\n        value: function () {\n          if (0 === arguments.length) {\n            for (var t = 0, e = this.iterator(); e.hasNext();) {\n              e.next().isInResult() && t++;\n            }\n            return t;\n          }\n          if (1 === arguments.length) {\n            for (var n = arguments[0], i = 0, r = this.iterator(); r.hasNext();) {\n              r.next().getEdgeRing() === n && i++;\n            }\n            return i;\n          }\n        }\n      }, {\n        key: \"getLabel\",\n        value: function () {\n          return this._label;\n        }\n      }, {\n        key: \"findCoveredLineEdges\",\n        value: function () {\n          for (var t = H.NONE, e = this.iterator(); e.hasNext();) {\n            var n = e.next(),\n              i = n.getSym();\n            if (!n.isLineEdge()) {\n              if (n.isInResult()) {\n                t = H.INTERIOR;\n                break;\n              }\n              if (i.isInResult()) {\n                t = H.EXTERIOR;\n                break;\n              }\n            }\n          }\n          if (t === H.NONE) return null;\n          for (var r = t, s = this.iterator(); s.hasNext();) {\n            var a = s.next(),\n              o = a.getSym();\n            a.isLineEdge() ? a.getEdge().setCovered(r === H.INTERIOR) : (a.isInResult() && (r = H.EXTERIOR), o.isInResult() && (r = H.INTERIOR));\n          }\n        }\n      }, {\n        key: \"computeLabelling\",\n        value: function (t) {\n          f(i, \"computeLabelling\", this, 1).call(this, t), this._label = new Ae(H.NONE);\n          for (var e = this.iterator(); e.hasNext();) for (var n = e.next().getEdge().getLabel(), r = 0; r < 2; r++) {\n            var s = n.getLocation(r);\n            s !== H.INTERIOR && s !== H.BOUNDARY || this._label.setLocation(r, H.INTERIOR);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._resultAreaEdgeList = null, this._label = null, this._SCANNING_FOR_INCOMING = 1, this._LINKING_TO_OUTGOING = 2;\n        }\n      }]);\n    }(Un),\n    Hn = function (t) {\n      function i() {\n        return n(this, i), e(this, i);\n      }\n      return l(i, t), s(i, [{\n        key: \"createNode\",\n        value: function (t) {\n          return new qe(t, new Vn());\n        }\n      }]);\n    }(Je),\n    Zn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"compareTo\",\n        value: function (e) {\n          var n = e;\n          return t.compareOriented(this._pts, this._orientation, n._pts, n._orientation);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._pts = null, this._orientation = null;\n          var e = arguments[0];\n          this._pts = e, this._orientation = t.orientation(e);\n        }\n      }, {\n        key: \"orientation\",\n        value: function (t) {\n          return 1 === jt.increasingDirection(t);\n        }\n      }, {\n        key: \"compareOriented\",\n        value: function (t, e, n, i) {\n          for (var r = e ? 1 : -1, s = i ? 1 : -1, a = e ? t.length : -1, o = i ? n.length : -1, u = e ? 0 : t.length - 1, l = i ? 0 : n.length - 1;;) {\n            var h = t[u].compareTo(n[l]);\n            if (0 !== h) return h;\n            var c = (u += r) === a,\n              f = (l += s) === o;\n            if (c && !f) return -1;\n            if (!c && f) return 1;\n            if (c && f) return 0;\n          }\n        }\n      }]);\n    }(),\n    jn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"print\",\n        value: function (t) {\n          t.print(\"MULTILINESTRING ( \");\n          for (var e = 0; e < this._edges.size(); e++) {\n            var n = this._edges.get(e);\n            e > 0 && t.print(\",\"), t.print(\"(\");\n            for (var i = n.getCoordinates(), r = 0; r < i.length; r++) r > 0 && t.print(\",\"), t.print(i[r].x + \" \" + i[r].y);\n            t.println(\")\");\n          }\n          t.print(\")  \");\n        }\n      }, {\n        key: \"addAll\",\n        value: function (t) {\n          for (var e = t.iterator(); e.hasNext();) this.add(e.next());\n        }\n      }, {\n        key: \"findEdgeIndex\",\n        value: function (t) {\n          for (var e = 0; e < this._edges.size(); e++) if (this._edges.get(e).equals(t)) return e;\n          return -1;\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return this._edges.iterator();\n        }\n      }, {\n        key: \"getEdges\",\n        value: function () {\n          return this._edges;\n        }\n      }, {\n        key: \"get\",\n        value: function (t) {\n          return this._edges.get(t);\n        }\n      }, {\n        key: \"findEqualEdge\",\n        value: function (t) {\n          var e = new Zn(t.getCoordinates());\n          return this._ocaMap.get(e);\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          this._edges.add(t);\n          var e = new Zn(t.getCoordinates());\n          this._ocaMap.put(e, t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._edges = new yt(), this._ocaMap = new He();\n        }\n      }]);\n    }(),\n    Wn = function () {\n      return s(function t() {\n        n(this, t);\n      }, [{\n        key: \"processIntersections\",\n        value: function (t, e, n, i) {}\n      }, {\n        key: \"isDone\",\n        value: function () {}\n      }]);\n    }(),\n    Kn = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"isTrivialIntersection\",\n        value: function (e, n, i, r) {\n          if (e === i && 1 === this._li.getIntersectionNum()) {\n            if (t.isAdjacentSegments(n, r)) return !0;\n            if (e.isClosed()) {\n              var s = e.size() - 1;\n              if (0 === n && r === s || 0 === r && n === s) return !0;\n            }\n          }\n          return !1;\n        }\n      }, {\n        key: \"getProperIntersectionPoint\",\n        value: function () {\n          return this._properIntersectionPoint;\n        }\n      }, {\n        key: \"hasProperInteriorIntersection\",\n        value: function () {\n          return this._hasProperInterior;\n        }\n      }, {\n        key: \"getLineIntersector\",\n        value: function () {\n          return this._li;\n        }\n      }, {\n        key: \"hasProperIntersection\",\n        value: function () {\n          return this._hasProper;\n        }\n      }, {\n        key: \"processIntersections\",\n        value: function (t, e, n, i) {\n          if (t === n && e === i) return null;\n          this.numTests++;\n          var r = t.getCoordinates()[e],\n            s = t.getCoordinates()[e + 1],\n            a = n.getCoordinates()[i],\n            o = n.getCoordinates()[i + 1];\n          this._li.computeIntersection(r, s, a, o), this._li.hasIntersection() && (this.numIntersections++, this._li.isInteriorIntersection() && (this.numInteriorIntersections++, this._hasInterior = !0), this.isTrivialIntersection(t, e, n, i) || (this._hasIntersection = !0, t.addIntersections(this._li, e, 0), n.addIntersections(this._li, i, 1), this._li.isProper() && (this.numProperIntersections++, this._hasProper = !0, this._hasProperInterior = !0)));\n        }\n      }, {\n        key: \"hasIntersection\",\n        value: function () {\n          return this._hasIntersection;\n        }\n      }, {\n        key: \"isDone\",\n        value: function () {\n          return !1;\n        }\n      }, {\n        key: \"hasInteriorIntersection\",\n        value: function () {\n          return this._hasInterior;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Wn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._hasIntersection = !1, this._hasProper = !1, this._hasProperInterior = !1, this._hasInterior = !1, this._properIntersectionPoint = null, this._li = null, this._isSelfIntersection = null, this.numIntersections = 0, this.numInteriorIntersections = 0, this.numProperIntersections = 0, this.numTests = 0;\n          var t = arguments[0];\n          this._li = t;\n        }\n      }, {\n        key: \"isAdjacentSegments\",\n        value: function (t, e) {\n          return 1 === Math.abs(t - e);\n        }\n      }]);\n    }(),\n    Jn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getSegmentIndex\",\n        value: function () {\n          return this.segmentIndex;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          return this.coord;\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          t.print(this.coord), t.print(\" seg # = \" + this.segmentIndex), t.println(\" dist = \" + this.dist);\n        }\n      }, {\n        key: \"compareTo\",\n        value: function (t) {\n          var e = t;\n          return this.compare(e.segmentIndex, e.dist);\n        }\n      }, {\n        key: \"isEndPoint\",\n        value: function (t) {\n          return 0 === this.segmentIndex && 0 === this.dist || this.segmentIndex === t;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n        }\n      }, {\n        key: \"getDistance\",\n        value: function () {\n          return this.dist;\n        }\n      }, {\n        key: \"compare\",\n        value: function (t, e) {\n          return this.segmentIndex < t ? -1 : this.segmentIndex > t ? 1 : this.dist < e ? -1 : this.dist > e ? 1 : 0;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [x];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this.coord = null, this.segmentIndex = null, this.dist = null;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          this.coord = new X(t), this.segmentIndex = e, this.dist = n;\n        }\n      }]);\n    }(),\n    Qn = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"print\",\n        value: function (t) {\n          t.println(\"Intersections:\");\n          for (var e = this.iterator(); e.hasNext();) {\n            e.next().print(t);\n          }\n        }\n      }, {\n        key: \"iterator\",\n        value: function () {\n          return this._nodeMap.values().iterator();\n        }\n      }, {\n        key: \"addSplitEdges\",\n        value: function (t) {\n          this.addEndpoints();\n          for (var e = this.iterator(), n = e.next(); e.hasNext();) {\n            var i = e.next(),\n              r = this.createSplitEdge(n, i);\n            t.add(r), n = i;\n          }\n        }\n      }, {\n        key: \"addEndpoints\",\n        value: function () {\n          var t = this.edge.pts.length - 1;\n          this.add(this.edge.pts[0], 0, 0), this.add(this.edge.pts[t], t, 0);\n        }\n      }, {\n        key: \"createSplitEdge\",\n        value: function (t, e) {\n          var n = e.segmentIndex - t.segmentIndex + 2,\n            i = this.edge.pts[e.segmentIndex],\n            r = e.dist > 0 || !e.coord.equals2D(i);\n          r || n--;\n          var s = new Array(n).fill(null),\n            a = 0;\n          s[a++] = new X(t.coord);\n          for (var o = t.segmentIndex + 1; o <= e.segmentIndex; o++) s[a++] = this.edge.pts[o];\n          return r && (s[a] = e.coord), new ri(s, new Ae(this.edge._label));\n        }\n      }, {\n        key: \"add\",\n        value: function (t, e, n) {\n          var i = new Jn(t, e, n),\n            r = this._nodeMap.get(i);\n          return null !== r ? r : (this._nodeMap.put(i, i), i);\n        }\n      }, {\n        key: \"isIntersection\",\n        value: function (t) {\n          for (var e = this.iterator(); e.hasNext();) {\n            if (e.next().coord.equals(t)) return !0;\n          }\n          return !1;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._nodeMap = new He(), this.edge = null;\n          var t = arguments[0];\n          this.edge = t;\n        }\n      }]);\n    }(),\n    $n = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"isIntersects\",\n        value: function () {\n          return !this.isDisjoint();\n        }\n      }, {\n        key: \"isCovers\",\n        value: function () {\n          return (t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) || t.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY]) || t.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR]) || t.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY])) && this._matrix[H.EXTERIOR][H.INTERIOR] === Lt.FALSE && this._matrix[H.EXTERIOR][H.BOUNDARY] === Lt.FALSE;\n        }\n      }, {\n        key: \"isCoveredBy\",\n        value: function () {\n          return (t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) || t.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY]) || t.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR]) || t.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY])) && this._matrix[H.INTERIOR][H.EXTERIOR] === Lt.FALSE && this._matrix[H.BOUNDARY][H.EXTERIOR] === Lt.FALSE;\n        }\n      }, {\n        key: \"set\",\n        value: function () {\n          if (1 === arguments.length) for (var t = arguments[0], e = 0; e < t.length; e++) {\n            var n = Math.trunc(e / 3),\n              i = e % 3;\n            this._matrix[n][i] = Lt.toDimensionValue(t.charAt(e));\n          } else if (3 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1],\n              a = arguments[2];\n            this._matrix[r][s] = a;\n          }\n        }\n      }, {\n        key: \"isContains\",\n        value: function () {\n          return t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && this._matrix[H.EXTERIOR][H.INTERIOR] === Lt.FALSE && this._matrix[H.EXTERIOR][H.BOUNDARY] === Lt.FALSE;\n        }\n      }, {\n        key: \"setAtLeast\",\n        value: function () {\n          if (1 === arguments.length) for (var t = arguments[0], e = 0; e < t.length; e++) {\n            var n = Math.trunc(e / 3),\n              i = e % 3;\n            this.setAtLeast(n, i, Lt.toDimensionValue(t.charAt(e)));\n          } else if (3 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1],\n              a = arguments[2];\n            this._matrix[r][s] < a && (this._matrix[r][s] = a);\n          }\n        }\n      }, {\n        key: \"setAtLeastIfValid\",\n        value: function (t, e, n) {\n          t >= 0 && e >= 0 && this.setAtLeast(t, e, n);\n        }\n      }, {\n        key: \"isWithin\",\n        value: function () {\n          return t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && this._matrix[H.INTERIOR][H.EXTERIOR] === Lt.FALSE && this._matrix[H.BOUNDARY][H.EXTERIOR] === Lt.FALSE;\n        }\n      }, {\n        key: \"isTouches\",\n        value: function (e, n) {\n          return e > n ? this.isTouches(n, e) : (e === Lt.A && n === Lt.A || e === Lt.L && n === Lt.L || e === Lt.L && n === Lt.A || e === Lt.P && n === Lt.A || e === Lt.P && n === Lt.L) && this._matrix[H.INTERIOR][H.INTERIOR] === Lt.FALSE && (t.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY]) || t.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR]) || t.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY]));\n        }\n      }, {\n        key: \"isOverlaps\",\n        value: function (e, n) {\n          return e === Lt.P && n === Lt.P || e === Lt.A && n === Lt.A ? t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && t.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR]) && t.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]) : e === Lt.L && n === Lt.L && 1 === this._matrix[H.INTERIOR][H.INTERIOR] && t.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR]) && t.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]);\n        }\n      }, {\n        key: \"isEquals\",\n        value: function (e, n) {\n          return e === n && t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && this._matrix[H.INTERIOR][H.EXTERIOR] === Lt.FALSE && this._matrix[H.BOUNDARY][H.EXTERIOR] === Lt.FALSE && this._matrix[H.EXTERIOR][H.INTERIOR] === Lt.FALSE && this._matrix[H.EXTERIOR][H.BOUNDARY] === Lt.FALSE;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          for (var t = new Jt(\"123456789\"), e = 0; e < 3; e++) for (var n = 0; n < 3; n++) t.setCharAt(3 * e + n, Lt.toDimensionSymbol(this._matrix[e][n]));\n          return t.toString();\n        }\n      }, {\n        key: \"setAll\",\n        value: function (t) {\n          for (var e = 0; e < 3; e++) for (var n = 0; n < 3; n++) this._matrix[e][n] = t;\n        }\n      }, {\n        key: \"get\",\n        value: function (t, e) {\n          return this._matrix[t][e];\n        }\n      }, {\n        key: \"transpose\",\n        value: function () {\n          var t = this._matrix[1][0];\n          return this._matrix[1][0] = this._matrix[0][1], this._matrix[0][1] = t, t = this._matrix[2][0], this._matrix[2][0] = this._matrix[0][2], this._matrix[0][2] = t, t = this._matrix[2][1], this._matrix[2][1] = this._matrix[1][2], this._matrix[1][2] = t, this;\n        }\n      }, {\n        key: \"matches\",\n        value: function (e) {\n          if (9 !== e.length) throw new m(\"Should be length 9: \" + e);\n          for (var n = 0; n < 3; n++) for (var i = 0; i < 3; i++) if (!t.matches(this._matrix[n][i], e.charAt(3 * n + i))) return !1;\n          return !0;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          for (var e = 0; e < 3; e++) for (var n = 0; n < 3; n++) this.setAtLeast(e, n, t.get(e, n));\n        }\n      }, {\n        key: \"isDisjoint\",\n        value: function () {\n          return this._matrix[H.INTERIOR][H.INTERIOR] === Lt.FALSE && this._matrix[H.INTERIOR][H.BOUNDARY] === Lt.FALSE && this._matrix[H.BOUNDARY][H.INTERIOR] === Lt.FALSE && this._matrix[H.BOUNDARY][H.BOUNDARY] === Lt.FALSE;\n        }\n      }, {\n        key: \"isCrosses\",\n        value: function (e, n) {\n          return e === Lt.P && n === Lt.L || e === Lt.P && n === Lt.A || e === Lt.L && n === Lt.A ? t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && t.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR]) : e === Lt.L && n === Lt.P || e === Lt.A && n === Lt.P || e === Lt.A && n === Lt.L ? t.isTrue(this._matrix[H.INTERIOR][H.INTERIOR]) && t.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]) : e === Lt.L && n === Lt.L && 0 === this._matrix[H.INTERIOR][H.INTERIOR];\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [I];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._matrix = null, 0 === arguments.length) this._matrix = Array(3).fill().map(function () {\n            return Array(3);\n          }), this.setAll(Lt.FALSE);else if (1 === arguments.length) if (\"string\" == typeof arguments[0]) {\n            var e = arguments[0];\n            t.constructor_.call(this), this.set(e);\n          } else if (arguments[0] instanceof t) {\n            var n = arguments[0];\n            t.constructor_.call(this), this._matrix[H.INTERIOR][H.INTERIOR] = n._matrix[H.INTERIOR][H.INTERIOR], this._matrix[H.INTERIOR][H.BOUNDARY] = n._matrix[H.INTERIOR][H.BOUNDARY], this._matrix[H.INTERIOR][H.EXTERIOR] = n._matrix[H.INTERIOR][H.EXTERIOR], this._matrix[H.BOUNDARY][H.INTERIOR] = n._matrix[H.BOUNDARY][H.INTERIOR], this._matrix[H.BOUNDARY][H.BOUNDARY] = n._matrix[H.BOUNDARY][H.BOUNDARY], this._matrix[H.BOUNDARY][H.EXTERIOR] = n._matrix[H.BOUNDARY][H.EXTERIOR], this._matrix[H.EXTERIOR][H.INTERIOR] = n._matrix[H.EXTERIOR][H.INTERIOR], this._matrix[H.EXTERIOR][H.BOUNDARY] = n._matrix[H.EXTERIOR][H.BOUNDARY], this._matrix[H.EXTERIOR][H.EXTERIOR] = n._matrix[H.EXTERIOR][H.EXTERIOR];\n          }\n        }\n      }, {\n        key: \"matches\",\n        value: function () {\n          if (Number.isInteger(arguments[0]) && \"string\" == typeof arguments[1]) {\n            var e = arguments[0],\n              n = arguments[1];\n            return n === Lt.SYM_DONTCARE || n === Lt.SYM_TRUE && (e >= 0 || e === Lt.TRUE) || n === Lt.SYM_FALSE && e === Lt.FALSE || n === Lt.SYM_P && e === Lt.P || n === Lt.SYM_L && e === Lt.L || n === Lt.SYM_A && e === Lt.A;\n          }\n          if (\"string\" == typeof arguments[0] && \"string\" == typeof arguments[1]) {\n            var i = arguments[1];\n            return new t(arguments[0]).matches(i);\n          }\n        }\n      }, {\n        key: \"isTrue\",\n        value: function (t) {\n          return t >= 0 || t === Lt.TRUE;\n        }\n      }]);\n    }(),\n    ti = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"size\",\n        value: function () {\n          return this._size;\n        }\n      }, {\n        key: \"addAll\",\n        value: function (t) {\n          return null === t || 0 === t.length ? null : (this.ensureCapacity(this._size + t.length), mt.arraycopy(t, 0, this._data, this._size, t.length), void (this._size += t.length));\n        }\n      }, {\n        key: \"ensureCapacity\",\n        value: function (t) {\n          if (t <= this._data.length) return null;\n          var e = Math.max(t, 2 * this._data.length);\n          this._data = At.copyOf(this._data, e);\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          var t = new Array(this._size).fill(null);\n          return mt.arraycopy(this._data, 0, t, 0, this._size), t;\n        }\n      }, {\n        key: \"add\",\n        value: function (t) {\n          this.ensureCapacity(this._size + 1), this._data[this._size] = t, ++this._size;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._data = null, this._size = 0, 0 === arguments.length) t.constructor_.call(this, 10);else if (1 === arguments.length) {\n            var e = arguments[0];\n            this._data = new Array(e).fill(null);\n          }\n        }\n      }]);\n    }(),\n    ei = function () {\n      function t() {\n        n(this, t);\n      }\n      return s(t, [{\n        key: \"getChainStartIndices\",\n        value: function (t) {\n          var e = 0,\n            n = new ti(Math.trunc(t.length / 2));\n          n.add(e);\n          do {\n            var i = this.findChainEnd(t, e);\n            n.add(i), e = i;\n          } while (e < t.length - 1);\n          return n.toArray();\n        }\n      }, {\n        key: \"findChainEnd\",\n        value: function (t, e) {\n          for (var n = je.quadrant(t[e], t[e + 1]), i = e + 1; i < t.length;) {\n            if (je.quadrant(t[i - 1], t[i]) !== n) break;\n            i++;\n          }\n          return i - 1;\n        }\n      }, {\n        key: \"OLDgetChainStartIndices\",\n        value: function (e) {\n          var n = 0,\n            i = new yt();\n          i.add(n);\n          do {\n            var r = this.findChainEnd(e, n);\n            i.add(r), n = r;\n          } while (n < e.length - 1);\n          return t.toIntArray(i);\n        }\n      }], [{\n        key: \"toIntArray\",\n        value: function (t) {\n          for (var e = new Array(t.size()).fill(null), n = 0; n < e.length; n++) e[n] = t.get(n).intValue();\n          return e;\n        }\n      }]);\n    }(),\n    ni = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"getCoordinates\",\n        value: function () {\n          return this.pts;\n        }\n      }, {\n        key: \"getMaxX\",\n        value: function (t) {\n          var e = this.pts[this.startIndex[t]].x,\n            n = this.pts[this.startIndex[t + 1]].x;\n          return e > n ? e : n;\n        }\n      }, {\n        key: \"getMinX\",\n        value: function (t) {\n          var e = this.pts[this.startIndex[t]].x,\n            n = this.pts[this.startIndex[t + 1]].x;\n          return e < n ? e : n;\n        }\n      }, {\n        key: \"computeIntersectsForChain\",\n        value: function () {\n          if (4 === arguments.length) {\n            var t = arguments[0],\n              e = arguments[1],\n              n = arguments[2],\n              i = arguments[3];\n            this.computeIntersectsForChain(this.startIndex[t], this.startIndex[t + 1], e, e.startIndex[n], e.startIndex[n + 1], i);\n          } else if (6 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1],\n              a = arguments[2],\n              o = arguments[3],\n              u = arguments[4],\n              l = arguments[5];\n            if (s - r == 1 && u - o == 1) return l.addIntersections(this.e, r, a.e, o), null;\n            if (!this.overlaps(r, s, a, o, u)) return null;\n            var h = Math.trunc((r + s) / 2),\n              c = Math.trunc((o + u) / 2);\n            r < h && (o < c && this.computeIntersectsForChain(r, h, a, o, c, l), c < u && this.computeIntersectsForChain(r, h, a, c, u, l)), h < s && (o < c && this.computeIntersectsForChain(h, s, a, o, c, l), c < u && this.computeIntersectsForChain(h, s, a, c, u, l));\n          }\n        }\n      }, {\n        key: \"overlaps\",\n        value: function (t, e, n, i, r) {\n          return U.intersects(this.pts[t], this.pts[e], n.pts[i], n.pts[r]);\n        }\n      }, {\n        key: \"getStartIndexes\",\n        value: function () {\n          return this.startIndex;\n        }\n      }, {\n        key: \"computeIntersects\",\n        value: function (t, e) {\n          for (var n = 0; n < this.startIndex.length - 1; n++) for (var i = 0; i < t.startIndex.length - 1; i++) this.computeIntersectsForChain(n, t, i, e);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this.e = null, this.pts = null, this.startIndex = null;\n          var t = arguments[0];\n          this.e = t, this.pts = t.getCoordinates();\n          var e = new ei();\n          this.startIndex = e.getChainStartIndices(this.pts);\n        }\n      }]);\n    }(),\n    ii = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"getDepth\",\n        value: function (t, e) {\n          return this._depth[t][e];\n        }\n      }, {\n        key: \"setDepth\",\n        value: function (t, e, n) {\n          this._depth[t][e] = n;\n        }\n      }, {\n        key: \"isNull\",\n        value: function () {\n          if (0 === arguments.length) {\n            for (var e = 0; e < 2; e++) for (var n = 0; n < 3; n++) if (this._depth[e][n] !== t.NULL_VALUE) return !1;\n            return !0;\n          }\n          if (1 === arguments.length) {\n            var i = arguments[0];\n            return this._depth[i][1] === t.NULL_VALUE;\n          }\n          if (2 === arguments.length) {\n            var r = arguments[0],\n              s = arguments[1];\n            return this._depth[r][s] === t.NULL_VALUE;\n          }\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          for (var t = 0; t < 2; t++) if (!this.isNull(t)) {\n            var e = this._depth[t][1];\n            this._depth[t][2] < e && (e = this._depth[t][2]), e < 0 && (e = 0);\n            for (var n = 1; n < 3; n++) {\n              var i = 0;\n              this._depth[t][n] > e && (i = 1), this._depth[t][n] = i;\n            }\n          }\n        }\n      }, {\n        key: \"getDelta\",\n        value: function (t) {\n          return this._depth[t][$.RIGHT] - this._depth[t][$.LEFT];\n        }\n      }, {\n        key: \"getLocation\",\n        value: function (t, e) {\n          return this._depth[t][e] <= 0 ? H.EXTERIOR : H.INTERIOR;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          return \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n        }\n      }, {\n        key: \"add\",\n        value: function () {\n          if (1 === arguments.length) for (var e = arguments[0], n = 0; n < 2; n++) for (var i = 1; i < 3; i++) {\n            var r = e.getLocation(n, i);\n            r !== H.EXTERIOR && r !== H.INTERIOR || (this.isNull(n, i) ? this._depth[n][i] = t.depthAtLocation(r) : this._depth[n][i] += t.depthAtLocation(r));\n          } else if (3 === arguments.length) {\n            var s = arguments[0],\n              a = arguments[1];\n            arguments[2] === H.INTERIOR && this._depth[s][a]++;\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._depth = Array(2).fill().map(function () {\n            return Array(3);\n          });\n          for (var e = 0; e < 2; e++) for (var n = 0; n < 3; n++) this._depth[e][n] = t.NULL_VALUE;\n        }\n      }, {\n        key: \"depthAtLocation\",\n        value: function (e) {\n          return e === H.EXTERIOR ? 0 : e === H.INTERIOR ? 1 : t.NULL_VALUE;\n        }\n      }]);\n    }();\n  ii.NULL_VALUE = -1;\n  var ri = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"getDepth\",\n        value: function () {\n          return this._depth;\n        }\n      }, {\n        key: \"getCollapsedEdge\",\n        value: function () {\n          var t = new Array(2).fill(null);\n          return t[0] = this.pts[0], t[1] = this.pts[1], new i(t, Ae.toLineLabel(this._label));\n        }\n      }, {\n        key: \"isIsolated\",\n        value: function () {\n          return this._isIsolated;\n        }\n      }, {\n        key: \"getCoordinates\",\n        value: function () {\n          return this.pts;\n        }\n      }, {\n        key: \"setIsolated\",\n        value: function (t) {\n          this._isIsolated = t;\n        }\n      }, {\n        key: \"setName\",\n        value: function (t) {\n          this._name = t;\n        }\n      }, {\n        key: \"equals\",\n        value: function (t) {\n          if (!(t instanceof i)) return !1;\n          var e = t;\n          if (this.pts.length !== e.pts.length) return !1;\n          for (var n = !0, r = !0, s = this.pts.length, a = 0; a < this.pts.length; a++) if (this.pts[a].equals2D(e.pts[a]) || (n = !1), this.pts[a].equals2D(e.pts[--s]) || (r = !1), !n && !r) return !1;\n          return !0;\n        }\n      }, {\n        key: \"getCoordinate\",\n        value: function () {\n          if (0 === arguments.length) return this.pts.length > 0 ? this.pts[0] : null;\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.pts[t];\n          }\n        }\n      }, {\n        key: \"print\",\n        value: function (t) {\n          t.print(\"edge \" + this._name + \": \"), t.print(\"LINESTRING (\");\n          for (var e = 0; e < this.pts.length; e++) e > 0 && t.print(\",\"), t.print(this.pts[e].x + \" \" + this.pts[e].y);\n          t.print(\")  \" + this._label + \" \" + this._depthDelta);\n        }\n      }, {\n        key: \"computeIM\",\n        value: function (t) {\n          i.updateIM(this._label, t);\n        }\n      }, {\n        key: \"isCollapsed\",\n        value: function () {\n          return !!this._label.isArea() && 3 === this.pts.length && !!this.pts[0].equals(this.pts[2]);\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          return this.pts[0].equals(this.pts[this.pts.length - 1]);\n        }\n      }, {\n        key: \"getMaximumSegmentIndex\",\n        value: function () {\n          return this.pts.length - 1;\n        }\n      }, {\n        key: \"getDepthDelta\",\n        value: function () {\n          return this._depthDelta;\n        }\n      }, {\n        key: \"getNumPoints\",\n        value: function () {\n          return this.pts.length;\n        }\n      }, {\n        key: \"printReverse\",\n        value: function (t) {\n          t.print(\"edge \" + this._name + \": \");\n          for (var e = this.pts.length - 1; e >= 0; e--) t.print(this.pts[e] + \" \");\n          t.println(\"\");\n        }\n      }, {\n        key: \"getMonotoneChainEdge\",\n        value: function () {\n          return null === this._mce && (this._mce = new ni(this)), this._mce;\n        }\n      }, {\n        key: \"getEnvelope\",\n        value: function () {\n          if (null === this._env) {\n            this._env = new U();\n            for (var t = 0; t < this.pts.length; t++) this._env.expandToInclude(this.pts[t]);\n          }\n          return this._env;\n        }\n      }, {\n        key: \"addIntersection\",\n        value: function (t, e, n, i) {\n          var r = new X(t.getIntersection(i)),\n            s = e,\n            a = t.getEdgeDistance(n, i),\n            o = s + 1;\n          if (o < this.pts.length) {\n            var u = this.pts[o];\n            r.equals2D(u) && (s = o, a = 0);\n          }\n          this.eiList.add(r, s, a);\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var t = new Jt();\n          t.append(\"edge \" + this._name + \": \"), t.append(\"LINESTRING (\");\n          for (var e = 0; e < this.pts.length; e++) e > 0 && t.append(\",\"), t.append(this.pts[e].x + \" \" + this.pts[e].y);\n          return t.append(\")  \" + this._label + \" \" + this._depthDelta), t.toString();\n        }\n      }, {\n        key: \"isPointwiseEqual\",\n        value: function (t) {\n          if (this.pts.length !== t.pts.length) return !1;\n          for (var e = 0; e < this.pts.length; e++) if (!this.pts[e].equals2D(t.pts[e])) return !1;\n          return !0;\n        }\n      }, {\n        key: \"setDepthDelta\",\n        value: function (t) {\n          this._depthDelta = t;\n        }\n      }, {\n        key: \"getEdgeIntersectionList\",\n        value: function () {\n          return this.eiList;\n        }\n      }, {\n        key: \"addIntersections\",\n        value: function (t, e, n) {\n          for (var i = 0; i < t.getIntersectionNum(); i++) this.addIntersection(t, e, n, i);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this.pts = null, this._env = null, this.eiList = new Qn(this), this._name = null, this._mce = null, this._isIsolated = !0, this._depth = new ii(), this._depthDelta = 0, 1 === arguments.length) {\n            var t = arguments[0];\n            i.constructor_.call(this, t, null);\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this.pts = e, this._label = n;\n          }\n        }\n      }, {\n        key: \"updateIM\",\n        value: function () {\n          if (!(2 === arguments.length && arguments[1] instanceof $n && arguments[0] instanceof Ae)) return f(i, \"updateIM\", this).apply(this, arguments);\n          var t = arguments[0],\n            e = arguments[1];\n          e.setAtLeastIfValid(t.getLocation(0, $.ON), t.getLocation(1, $.ON), 1), t.isArea() && (e.setAtLeastIfValid(t.getLocation(0, $.LEFT), t.getLocation(1, $.LEFT), 2), e.setAtLeastIfValid(t.getLocation(0, $.RIGHT), t.getLocation(1, $.RIGHT), 2));\n        }\n      }]);\n    }(Ge),\n    si = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"setWorkingPrecisionModel\",\n        value: function (t) {\n          this._workingPrecisionModel = t;\n        }\n      }, {\n        key: \"insertUniqueEdge\",\n        value: function (e) {\n          var n = this._edgeList.findEqualEdge(e);\n          if (null !== n) {\n            var i = n.getLabel(),\n              r = e.getLabel();\n            n.isPointwiseEqual(e) || (r = new Ae(e.getLabel())).flip(), i.merge(r);\n            var s = t.depthDelta(r),\n              a = n.getDepthDelta() + s;\n            n.setDepthDelta(a);\n          } else this._edgeList.add(e), e.setDepthDelta(t.depthDelta(e.getLabel()));\n        }\n      }, {\n        key: \"buildSubgraphs\",\n        value: function (t, e) {\n          for (var n = new yt(), i = t.iterator(); i.hasNext();) {\n            var r = i.next(),\n              s = r.getRightmostCoordinate(),\n              a = new Pn(n).getDepth(s);\n            r.computeDepth(a), r.findResultEdges(), n.add(r), e.add(r.getDirectedEdges(), r.getNodes());\n          }\n        }\n      }, {\n        key: \"createSubgraphs\",\n        value: function (t) {\n          for (var e = new yt(), n = t.getNodes().iterator(); n.hasNext();) {\n            var i = n.next();\n            if (!i.isVisited()) {\n              var r = new _t();\n              r.create(i), e.add(r);\n            }\n          }\n          return an.sort(e, an.reverseOrder()), e;\n        }\n      }, {\n        key: \"createEmptyResultGeometry\",\n        value: function () {\n          return this._geomFact.createPolygon();\n        }\n      }, {\n        key: \"getNoder\",\n        value: function (t) {\n          if (null !== this._workingNoder) return this._workingNoder;\n          var e = new Cn(),\n            n = new we();\n          return n.setPrecisionModel(t), e.setSegmentIntersector(new Kn(n)), e;\n        }\n      }, {\n        key: \"buffer\",\n        value: function (t, e) {\n          var n = this._workingPrecisionModel;\n          null === n && (n = t.getPrecisionModel()), this._geomFact = t.getFactory();\n          var i = new An(n, this._bufParams),\n            r = new Yn(t, e, i).getCurves();\n          if (r.size() <= 0) return this.createEmptyResultGeometry();\n          this.computeNodedEdges(r, n), this._graph = new Qe(new Hn()), this._graph.addEdges(this._edgeList.getEdges());\n          var s = this.createSubgraphs(this._graph),\n            a = new $e(this._geomFact);\n          this.buildSubgraphs(s, a);\n          var o = a.getPolygons();\n          return o.size() <= 0 ? this.createEmptyResultGeometry() : this._geomFact.buildGeometry(o);\n        }\n      }, {\n        key: \"computeNodedEdges\",\n        value: function (t, e) {\n          var n = this.getNoder(e);\n          n.computeNodes(t);\n          for (var i = n.getNodedSubstrings().iterator(); i.hasNext();) {\n            var r = i.next(),\n              s = r.getCoordinates();\n            if (2 !== s.length || !s[0].equals2D(s[1])) {\n              var a = r.getData(),\n                o = new ri(r.getCoordinates(), new Ae(a));\n              this.insertUniqueEdge(o);\n            }\n          }\n        }\n      }, {\n        key: \"setNoder\",\n        value: function (t) {\n          this._workingNoder = t;\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._bufParams = null, this._workingPrecisionModel = null, this._workingNoder = null, this._geomFact = null, this._graph = null, this._edgeList = new jn();\n          var t = arguments[0];\n          this._bufParams = t;\n        }\n      }, {\n        key: \"depthDelta\",\n        value: function (t) {\n          var e = t.getLocation(0, $.LEFT),\n            n = t.getLocation(0, $.RIGHT);\n          return e === H.INTERIOR && n === H.EXTERIOR ? 1 : e === H.EXTERIOR && n === H.INTERIOR ? -1 : 0;\n        }\n      }, {\n        key: \"convertSegStrings\",\n        value: function (t) {\n          for (var e = new ae(), n = new yt(); t.hasNext();) {\n            var i = t.next(),\n              r = e.createLineString(i.getCoordinates());\n            n.add(r);\n          }\n          return e.buildGeometry(n);\n        }\n      }]);\n    }(),\n    ai = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"rescale\",\n        value: function () {\n          if (rt(arguments[0], Z)) for (var t = arguments[0].iterator(); t.hasNext();) {\n            var e = t.next();\n            this.rescale(e.getCoordinates());\n          } else if (arguments[0] instanceof Array) {\n            for (var n = arguments[0], i = 0; i < n.length; i++) n[i].x = n[i].x / this._scaleFactor + this._offsetX, n[i].y = n[i].y / this._scaleFactor + this._offsetY;\n            2 === n.length && n[0].equals2D(n[1]) && mt.out.println(n);\n          }\n        }\n      }, {\n        key: \"scale\",\n        value: function () {\n          if (rt(arguments[0], Z)) {\n            for (var t = arguments[0], e = new yt(t.size()), n = t.iterator(); n.hasNext();) {\n              var i = n.next();\n              e.add(new xn(this.scale(i.getCoordinates()), i.getData()));\n            }\n            return e;\n          }\n          if (arguments[0] instanceof Array) {\n            for (var r = arguments[0], s = new Array(r.length).fill(null), a = 0; a < r.length; a++) s[a] = new X(Math.round((r[a].x - this._offsetX) * this._scaleFactor), Math.round((r[a].y - this._offsetY) * this._scaleFactor), r[a].getZ());\n            return jt.removeRepeatedPoints(s);\n          }\n        }\n      }, {\n        key: \"isIntegerPrecision\",\n        value: function () {\n          return 1 === this._scaleFactor;\n        }\n      }, {\n        key: \"getNodedSubstrings\",\n        value: function () {\n          var t = this._noder.getNodedSubstrings();\n          return this._isScaled && this.rescale(t), t;\n        }\n      }, {\n        key: \"computeNodes\",\n        value: function (t) {\n          var e = t;\n          this._isScaled && (e = this.scale(t)), this._noder.computeNodes(e);\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Sn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._noder = null, this._scaleFactor = null, this._offsetX = null, this._offsetY = null, this._isScaled = !1, 2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            t.constructor_.call(this, e, n, 0, 0);\n          } else if (4 === arguments.length) {\n            var i = arguments[0],\n              r = arguments[1];\n            this._noder = i, this._scaleFactor = r, this._isScaled = !this.isIntegerPrecision();\n          }\n        }\n      }]);\n    }(),\n    oi = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"checkEndPtVertexIntersections\",\n        value: function () {\n          if (0 === arguments.length) for (var t = this._segStrings.iterator(); t.hasNext();) {\n            var e = t.next().getCoordinates();\n            this.checkEndPtVertexIntersections(e[0], this._segStrings), this.checkEndPtVertexIntersections(e[e.length - 1], this._segStrings);\n          } else if (2 === arguments.length) for (var n = arguments[0], i = arguments[1].iterator(); i.hasNext();) for (var r = i.next().getCoordinates(), s = 1; s < r.length - 1; s++) if (r[s].equals(n)) throw new D(\"found endpt/interior pt intersection at index \" + s + \" :pt \" + n);\n        }\n      }, {\n        key: \"checkInteriorIntersections\",\n        value: function () {\n          if (0 === arguments.length) for (var t = this._segStrings.iterator(); t.hasNext();) for (var e = t.next(), n = this._segStrings.iterator(); n.hasNext();) {\n            var i = n.next();\n            this.checkInteriorIntersections(e, i);\n          } else if (2 === arguments.length) for (var r = arguments[0], s = arguments[1], a = r.getCoordinates(), o = s.getCoordinates(), u = 0; u < a.length - 1; u++) for (var l = 0; l < o.length - 1; l++) this.checkInteriorIntersections(r, u, s, l);else if (4 === arguments.length) {\n            var h = arguments[0],\n              c = arguments[1],\n              f = arguments[2],\n              g = arguments[3];\n            if (h === f && c === g) return null;\n            var v = h.getCoordinates()[c],\n              y = h.getCoordinates()[c + 1],\n              d = f.getCoordinates()[g],\n              _ = f.getCoordinates()[g + 1];\n            if (this._li.computeIntersection(v, y, d, _), this._li.hasIntersection() && (this._li.isProper() || this.hasInteriorIntersection(this._li, v, y) || this.hasInteriorIntersection(this._li, d, _))) throw new D(\"found non-noded intersection at \" + v + \"-\" + y + \" and \" + d + \"-\" + _);\n          }\n        }\n      }, {\n        key: \"checkValid\",\n        value: function () {\n          this.checkEndPtVertexIntersections(), this.checkInteriorIntersections(), this.checkCollapses();\n        }\n      }, {\n        key: \"checkCollapses\",\n        value: function () {\n          if (0 === arguments.length) for (var t = this._segStrings.iterator(); t.hasNext();) {\n            var e = t.next();\n            this.checkCollapses(e);\n          } else if (1 === arguments.length) for (var n = arguments[0].getCoordinates(), i = 0; i < n.length - 2; i++) this.checkCollapse(n[i], n[i + 1], n[i + 2]);\n        }\n      }, {\n        key: \"hasInteriorIntersection\",\n        value: function (t, e, n) {\n          for (var i = 0; i < t.getIntersectionNum(); i++) {\n            var r = t.getIntersection(i);\n            if (!r.equals(e) && !r.equals(n)) return !0;\n          }\n          return !1;\n        }\n      }, {\n        key: \"checkCollapse\",\n        value: function (e, n, i) {\n          if (e.equals(i)) throw new D(\"found non-noded collapse at \" + t.fact.createLineString([e, n, i]));\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._li = new we(), this._segStrings = null;\n          var t = arguments[0];\n          this._segStrings = t;\n        }\n      }]);\n    }();\n  oi.fact = new ae();\n  var ui = function () {\n    function t() {\n      n(this, t), t.constructor_.apply(this, arguments);\n    }\n    return s(t, [{\n      key: \"intersectsScaled\",\n      value: function (t, e) {\n        var n = Math.min(t.x, e.x),\n          i = Math.max(t.x, e.x),\n          r = Math.min(t.y, e.y),\n          s = Math.max(t.y, e.y),\n          a = this._maxx < n || this._minx > i || this._maxy < r || this._miny > s;\n        if (a) return !1;\n        var o = this.intersectsToleranceSquare(t, e);\n        return G.isTrue(!(a && o), \"Found bad envelope test\"), o;\n      }\n    }, {\n      key: \"initCorners\",\n      value: function (t) {\n        var e = .5;\n        this._minx = t.x - e, this._maxx = t.x + e, this._miny = t.y - e, this._maxy = t.y + e, this._corner[0] = new X(this._maxx, this._maxy), this._corner[1] = new X(this._minx, this._maxy), this._corner[2] = new X(this._minx, this._miny), this._corner[3] = new X(this._maxx, this._miny);\n      }\n    }, {\n      key: \"intersects\",\n      value: function (t, e) {\n        return 1 === this._scaleFactor ? this.intersectsScaled(t, e) : (this.copyScaled(t, this._p0Scaled), this.copyScaled(e, this._p1Scaled), this.intersectsScaled(this._p0Scaled, this._p1Scaled));\n      }\n    }, {\n      key: \"scale\",\n      value: function (t) {\n        return Math.round(t * this._scaleFactor);\n      }\n    }, {\n      key: \"getCoordinate\",\n      value: function () {\n        return this._originalPt;\n      }\n    }, {\n      key: \"copyScaled\",\n      value: function (t, e) {\n        e.x = this.scale(t.x), e.y = this.scale(t.y);\n      }\n    }, {\n      key: \"getSafeEnvelope\",\n      value: function () {\n        if (null === this._safeEnv) {\n          var e = t.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n          this._safeEnv = new U(this._originalPt.x - e, this._originalPt.x + e, this._originalPt.y - e, this._originalPt.y + e);\n        }\n        return this._safeEnv;\n      }\n    }, {\n      key: \"intersectsPixelClosure\",\n      value: function (t, e) {\n        return this._li.computeIntersection(t, e, this._corner[0], this._corner[1]), !!this._li.hasIntersection() || (this._li.computeIntersection(t, e, this._corner[1], this._corner[2]), !!this._li.hasIntersection() || (this._li.computeIntersection(t, e, this._corner[2], this._corner[3]), !!this._li.hasIntersection() || (this._li.computeIntersection(t, e, this._corner[3], this._corner[0]), !!this._li.hasIntersection())));\n      }\n    }, {\n      key: \"intersectsToleranceSquare\",\n      value: function (t, e) {\n        var n = !1,\n          i = !1;\n        return this._li.computeIntersection(t, e, this._corner[0], this._corner[1]), !!this._li.isProper() || (this._li.computeIntersection(t, e, this._corner[1], this._corner[2]), !!this._li.isProper() || (this._li.hasIntersection() && (n = !0), this._li.computeIntersection(t, e, this._corner[2], this._corner[3]), !!this._li.isProper() || (this._li.hasIntersection() && (i = !0), this._li.computeIntersection(t, e, this._corner[3], this._corner[0]), !!this._li.isProper() || !(!n || !i) || !!t.equals(this._pt) || !!e.equals(this._pt))));\n      }\n    }, {\n      key: \"addSnappedNode\",\n      value: function (t, e) {\n        var n = t.getCoordinate(e),\n          i = t.getCoordinate(e + 1);\n        return !!this.intersects(n, i) && (t.addIntersection(this.getCoordinate(), e), !0);\n      }\n    }], [{\n      key: \"constructor_\",\n      value: function () {\n        this._li = null, this._pt = null, this._originalPt = null, this._ptScaled = null, this._p0Scaled = null, this._p1Scaled = null, this._scaleFactor = null, this._minx = null, this._maxx = null, this._miny = null, this._maxy = null, this._corner = new Array(4).fill(null), this._safeEnv = null;\n        var t = arguments[0],\n          e = arguments[1],\n          n = arguments[2];\n        if (this._originalPt = t, this._pt = t, this._scaleFactor = e, this._li = n, e <= 0) throw new m(\"Scale factor must be non-zero\");\n        1 !== e && (this._pt = new X(this.scale(t.x), this.scale(t.y)), this._p0Scaled = new X(), this._p1Scaled = new X()), this.initCorners(this._pt);\n      }\n    }]);\n  }();\n  ui.SAFE_ENV_EXPANSION_FACTOR = .75;\n  var li = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"select\",\n        value: function () {\n          if (1 === arguments.length) ;else if (2 === arguments.length) {\n            var t = arguments[1];\n            arguments[0].getLineSegment(t, this.selectedSegment), this.select(this.selectedSegment);\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this.selectedSegment = new In();\n        }\n      }]);\n    }(),\n    hi = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"snap\",\n        value: function () {\n          if (1 === arguments.length) {\n            var t = arguments[0];\n            return this.snap(t, null, -1);\n          }\n          if (3 === arguments.length) {\n            var e = arguments[0],\n              i = arguments[1],\n              r = arguments[2],\n              a = e.getSafeEnvelope(),\n              o = new ci(e, i, r);\n            return this._index.query(a, new (function () {\n              return s(function t() {\n                n(this, t);\n              }, [{\n                key: \"interfaces_\",\n                get: function () {\n                  return [ln];\n                }\n              }, {\n                key: \"visitItem\",\n                value: function (t) {\n                  t.select(a, o);\n                }\n              }]);\n            }())()), o.isNodeAdded();\n          }\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._index = null;\n          var t = arguments[0];\n          this._index = t;\n        }\n      }]);\n    }(),\n    ci = function (t) {\n      function i() {\n        var t;\n        return n(this, i), t = e(this, i), i.constructor_.apply(t, arguments), t;\n      }\n      return l(i, t), s(i, [{\n        key: \"isNodeAdded\",\n        value: function () {\n          return this._isNodeAdded;\n        }\n      }, {\n        key: \"select\",\n        value: function () {\n          if (!(2 === arguments.length && Number.isInteger(arguments[1]) && arguments[0] instanceof Nn)) return f(i, \"select\", this, 1).apply(this, arguments);\n          var t = arguments[1],\n            e = arguments[0].getContext();\n          if (this._parentEdge === e && (t === this._hotPixelVertexIndex || t + 1 === this._hotPixelVertexIndex)) return null;\n          this._isNodeAdded |= this._hotPixel.addSnappedNode(e, t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._hotPixel = null, this._parentEdge = null, this._hotPixelVertexIndex = null, this._isNodeAdded = !1;\n          var t = arguments[0],\n            e = arguments[1],\n            n = arguments[2];\n          this._hotPixel = t, this._parentEdge = e, this._hotPixelVertexIndex = n;\n        }\n      }]);\n    }(li);\n  hi.HotPixelSnapAction = ci;\n  var fi = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"processIntersections\",\n        value: function (t, e, n, i) {\n          if (t === n && e === i) return null;\n          var r = t.getCoordinates()[e],\n            s = t.getCoordinates()[e + 1],\n            a = n.getCoordinates()[i],\n            o = n.getCoordinates()[i + 1];\n          if (this._li.computeIntersection(r, s, a, o), this._li.hasIntersection() && this._li.isInteriorIntersection()) {\n            for (var u = 0; u < this._li.getIntersectionNum(); u++) this._interiorIntersections.add(this._li.getIntersection(u));\n            t.addIntersections(this._li, e, 0), n.addIntersections(this._li, i, 1);\n          }\n        }\n      }, {\n        key: \"isDone\",\n        value: function () {\n          return !1;\n        }\n      }, {\n        key: \"getInteriorIntersections\",\n        value: function () {\n          return this._interiorIntersections;\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Wn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._li = null, this._interiorIntersections = null;\n          var t = arguments[0];\n          this._li = t, this._interiorIntersections = new yt();\n        }\n      }]);\n    }(),\n    gi = function () {\n      return s(function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }, [{\n        key: \"checkCorrectness\",\n        value: function (t) {\n          var e = xn.getNodedSubstrings(t),\n            n = new oi(e);\n          try {\n            n.checkValid();\n          } catch (t) {\n            if (!(t instanceof p)) throw t;\n            t.printStackTrace();\n          }\n        }\n      }, {\n        key: \"getNodedSubstrings\",\n        value: function () {\n          return xn.getNodedSubstrings(this._nodedSegStrings);\n        }\n      }, {\n        key: \"snapRound\",\n        value: function (t, e) {\n          var n = this.findInteriorIntersections(t, e);\n          this.computeIntersectionSnaps(n), this.computeVertexSnaps(t);\n        }\n      }, {\n        key: \"findInteriorIntersections\",\n        value: function (t, e) {\n          var n = new fi(e);\n          return this._noder.setSegmentIntersector(n), this._noder.computeNodes(t), n.getInteriorIntersections();\n        }\n      }, {\n        key: \"computeVertexSnaps\",\n        value: function () {\n          if (rt(arguments[0], Z)) for (var t = arguments[0].iterator(); t.hasNext();) {\n            var e = t.next();\n            this.computeVertexSnaps(e);\n          } else if (arguments[0] instanceof xn) for (var n = arguments[0], i = n.getCoordinates(), r = 0; r < i.length; r++) {\n            var s = new ui(i[r], this._scaleFactor, this._li);\n            this._pointSnapper.snap(s, n, r) && n.addIntersection(i[r], r);\n          }\n        }\n      }, {\n        key: \"computeNodes\",\n        value: function (t) {\n          this._nodedSegStrings = t, this._noder = new Cn(), this._pointSnapper = new hi(this._noder.getIndex()), this.snapRound(t, this._li);\n        }\n      }, {\n        key: \"computeIntersectionSnaps\",\n        value: function (t) {\n          for (var e = t.iterator(); e.hasNext();) {\n            var n = e.next(),\n              i = new ui(n, this._scaleFactor, this._li);\n            this._pointSnapper.snap(i);\n          }\n        }\n      }, {\n        key: \"interfaces_\",\n        get: function () {\n          return [Sn];\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          this._pm = null, this._li = null, this._scaleFactor = null, this._noder = null, this._pointSnapper = null, this._nodedSegStrings = null;\n          var t = arguments[0];\n          this._pm = t, this._li = new we(), this._li.setPrecisionModel(t), this._scaleFactor = t.getScale();\n        }\n      }]);\n    }(),\n    vi = function () {\n      function t() {\n        n(this, t), t.constructor_.apply(this, arguments);\n      }\n      return s(t, [{\n        key: \"bufferFixedPrecision\",\n        value: function (t) {\n          var e = new ai(new gi(new ie(1)), t.getScale()),\n            n = new si(this._bufParams);\n          n.setWorkingPrecisionModel(t), n.setNoder(e), this._resultGeometry = n.buffer(this._argGeom, this._distance);\n        }\n      }, {\n        key: \"bufferReducedPrecision\",\n        value: function () {\n          if (0 === arguments.length) {\n            for (var e = t.MAX_PRECISION_DIGITS; e >= 0; e--) {\n              try {\n                this.bufferReducedPrecision(e);\n              } catch (t) {\n                if (!(t instanceof gt)) throw t;\n                this._saveException = t;\n              }\n              if (null !== this._resultGeometry) return null;\n            }\n            throw this._saveException;\n          }\n          if (1 === arguments.length) {\n            var n = arguments[0],\n              i = t.precisionScaleFactor(this._argGeom, this._distance, n),\n              r = new ie(i);\n            this.bufferFixedPrecision(r);\n          }\n        }\n      }, {\n        key: \"computeGeometry\",\n        value: function () {\n          if (this.bufferOriginalPrecision(), null !== this._resultGeometry) return null;\n          var t = this._argGeom.getFactory().getPrecisionModel();\n          t.getType() === ie.FIXED ? this.bufferFixedPrecision(t) : this.bufferReducedPrecision();\n        }\n      }, {\n        key: \"setQuadrantSegments\",\n        value: function (t) {\n          this._bufParams.setQuadrantSegments(t);\n        }\n      }, {\n        key: \"bufferOriginalPrecision\",\n        value: function () {\n          try {\n            var t = new si(this._bufParams);\n            this._resultGeometry = t.buffer(this._argGeom, this._distance);\n          } catch (t) {\n            if (!(t instanceof D)) throw t;\n            this._saveException = t;\n          }\n        }\n      }, {\n        key: \"getResultGeometry\",\n        value: function (t) {\n          return this._distance = t, this.computeGeometry(), this._resultGeometry;\n        }\n      }, {\n        key: \"setEndCapStyle\",\n        value: function (t) {\n          this._bufParams.setEndCapStyle(t);\n        }\n      }], [{\n        key: \"constructor_\",\n        value: function () {\n          if (this._argGeom = null, this._distance = null, this._bufParams = new _(), this._resultGeometry = null, this._saveException = null, 1 === arguments.length) {\n            var t = arguments[0];\n            this._argGeom = t;\n          } else if (2 === arguments.length) {\n            var e = arguments[0],\n              n = arguments[1];\n            this._argGeom = e, this._bufParams = n;\n          }\n        }\n      }, {\n        key: \"bufferOp\",\n        value: function () {\n          if (2 === arguments.length) {\n            var e = arguments[1];\n            return new t(arguments[0]).getResultGeometry(e);\n          }\n          if (3 === arguments.length) {\n            if (Number.isInteger(arguments[2]) && arguments[0] instanceof V && \"number\" == typeof arguments[1]) {\n              var n = arguments[1],\n                i = arguments[2],\n                r = new t(arguments[0]);\n              return r.setQuadrantSegments(i), r.getResultGeometry(n);\n            }\n            if (arguments[2] instanceof _ && arguments[0] instanceof V && \"number\" == typeof arguments[1]) {\n              var s = arguments[1];\n              return new t(arguments[0], arguments[2]).getResultGeometry(s);\n            }\n          } else if (4 === arguments.length) {\n            var a = arguments[1],\n              o = arguments[2],\n              u = arguments[3],\n              l = new t(arguments[0]);\n            return l.setQuadrantSegments(o), l.setEndCapStyle(u), l.getResultGeometry(a);\n          }\n        }\n      }, {\n        key: \"precisionScaleFactor\",\n        value: function (t, e, n) {\n          var i = t.getEnvelopeInternal(),\n            r = kt.max(Math.abs(i.getMaxX()), Math.abs(i.getMaxY()), Math.abs(i.getMinX()), Math.abs(i.getMinY())) + 2 * (e > 0 ? e : 0),\n            s = n - Math.trunc(Math.log(r) / Math.log(10) + 1);\n          return Math.pow(10, s);\n        }\n      }]);\n    }();\n  vi.CAP_ROUND = _.CAP_ROUND, vi.CAP_BUTT = _.CAP_FLAT, vi.CAP_FLAT = _.CAP_FLAT, vi.CAP_SQUARE = _.CAP_SQUARE, vi.MAX_PRECISION_DIGITS = 12;\n  var yi = [\"Point\", \"MultiPoint\", \"LineString\", \"MultiLineString\", \"Polygon\", \"MultiPolygon\"],\n    di = function () {\n      return s(function t(e) {\n        n(this, t), this.geometryFactory = e || new ae();\n      }, [{\n        key: \"read\",\n        value: function (t) {\n          var e,\n            n = (e = \"string\" == typeof t ? JSON.parse(t) : t).type;\n          if (!_i[n]) throw new Error(\"Unknown GeoJSON type: \" + e.type);\n          return -1 !== yi.indexOf(n) ? _i[n].call(this, e.coordinates) : \"GeometryCollection\" === n ? _i[n].call(this, e.geometries) : _i[n].call(this, e);\n        }\n      }, {\n        key: \"write\",\n        value: function (t) {\n          var e = t.getGeometryType();\n          if (!pi[e]) throw new Error(\"Geometry is not supported\");\n          return pi[e].call(this, t);\n        }\n      }]);\n    }(),\n    _i = {\n      Feature: function (t) {\n        var e = {};\n        for (var n in t) e[n] = t[n];\n        if (t.geometry) {\n          var i = t.geometry.type;\n          if (!_i[i]) throw new Error(\"Unknown GeoJSON type: \" + t.type);\n          e.geometry = this.read(t.geometry);\n        }\n        return t.bbox && (e.bbox = _i.bbox.call(this, t.bbox)), e;\n      },\n      FeatureCollection: function (t) {\n        var e = {};\n        if (t.features) {\n          e.features = [];\n          for (var n = 0; n < t.features.length; ++n) e.features.push(this.read(t.features[n]));\n        }\n        return t.bbox && (e.bbox = this.parse.bbox.call(this, t.bbox)), e;\n      },\n      coordinates: function (t) {\n        for (var e = [], n = 0; n < t.length; ++n) {\n          var r = t[n];\n          e.push(i(X, g(r)));\n        }\n        return e;\n      },\n      bbox: function (t) {\n        return this.geometryFactory.createLinearRing([new X(t[0], t[1]), new X(t[2], t[1]), new X(t[2], t[3]), new X(t[0], t[3]), new X(t[0], t[1])]);\n      },\n      Point: function (t) {\n        var e = i(X, g(t));\n        return this.geometryFactory.createPoint(e);\n      },\n      MultiPoint: function (t) {\n        for (var e = [], n = 0; n < t.length; ++n) e.push(_i.Point.call(this, t[n]));\n        return this.geometryFactory.createMultiPoint(e);\n      },\n      LineString: function (t) {\n        var e = _i.coordinates.call(this, t);\n        return this.geometryFactory.createLineString(e);\n      },\n      MultiLineString: function (t) {\n        for (var e = [], n = 0; n < t.length; ++n) e.push(_i.LineString.call(this, t[n]));\n        return this.geometryFactory.createMultiLineString(e);\n      },\n      Polygon: function (t) {\n        for (var e = _i.coordinates.call(this, t[0]), n = this.geometryFactory.createLinearRing(e), i = [], r = 1; r < t.length; ++r) {\n          var s = t[r],\n            a = _i.coordinates.call(this, s),\n            o = this.geometryFactory.createLinearRing(a);\n          i.push(o);\n        }\n        return this.geometryFactory.createPolygon(n, i);\n      },\n      MultiPolygon: function (t) {\n        for (var e = [], n = 0; n < t.length; ++n) {\n          var i = t[n];\n          e.push(_i.Polygon.call(this, i));\n        }\n        return this.geometryFactory.createMultiPolygon(e);\n      },\n      GeometryCollection: function (t) {\n        for (var e = [], n = 0; n < t.length; ++n) {\n          var i = t[n];\n          e.push(this.read(i));\n        }\n        return this.geometryFactory.createGeometryCollection(e);\n      }\n    },\n    pi = {\n      coordinate: function (t) {\n        var e = [t.x, t.y];\n        return t.z && e.push(t.z), t.m && e.push(t.m), e;\n      },\n      Point: function (t) {\n        return {\n          type: \"Point\",\n          coordinates: pi.coordinate.call(this, t.getCoordinate())\n        };\n      },\n      MultiPoint: function (t) {\n        for (var e = [], n = 0; n < t._geometries.length; ++n) {\n          var i = t._geometries[n],\n            r = pi.Point.call(this, i);\n          e.push(r.coordinates);\n        }\n        return {\n          type: \"MultiPoint\",\n          coordinates: e\n        };\n      },\n      LineString: function (t) {\n        for (var e = [], n = t.getCoordinates(), i = 0; i < n.length; ++i) {\n          var r = n[i];\n          e.push(pi.coordinate.call(this, r));\n        }\n        return {\n          type: \"LineString\",\n          coordinates: e\n        };\n      },\n      MultiLineString: function (t) {\n        for (var e = [], n = 0; n < t._geometries.length; ++n) {\n          var i = t._geometries[n],\n            r = pi.LineString.call(this, i);\n          e.push(r.coordinates);\n        }\n        return {\n          type: \"MultiLineString\",\n          coordinates: e\n        };\n      },\n      Polygon: function (t) {\n        var e = [],\n          n = pi.LineString.call(this, t._shell);\n        e.push(n.coordinates);\n        for (var i = 0; i < t._holes.length; ++i) {\n          var r = t._holes[i],\n            s = pi.LineString.call(this, r);\n          e.push(s.coordinates);\n        }\n        return {\n          type: \"Polygon\",\n          coordinates: e\n        };\n      },\n      MultiPolygon: function (t) {\n        for (var e = [], n = 0; n < t._geometries.length; ++n) {\n          var i = t._geometries[n],\n            r = pi.Polygon.call(this, i);\n          e.push(r.coordinates);\n        }\n        return {\n          type: \"MultiPolygon\",\n          coordinates: e\n        };\n      },\n      GeometryCollection: function (t) {\n        for (var e = [], n = 0; n < t._geometries.length; ++n) {\n          var i = t._geometries[n],\n            r = i.getGeometryType();\n          e.push(pi[r].call(this, i));\n        }\n        return {\n          type: \"GeometryCollection\",\n          geometries: e\n        };\n      }\n    };\n  return {\n    BufferOp: vi,\n    GeoJSONReader: function () {\n      return s(function t(e) {\n        n(this, t), this.parser = new di(e || new ae());\n      }, [{\n        key: \"read\",\n        value: function (t) {\n          return this.parser.read(t);\n        }\n      }]);\n    }(),\n    GeoJSONWriter: function () {\n      return s(function t() {\n        n(this, t), this.parser = new di(this.geometryFactory);\n      }, [{\n        key: \"write\",\n        value: function (t) {\n          return this.parser.write(t);\n        }\n      }]);\n    }()\n  };\n});\n", "export default class TinyQueue {\n  constructor(data = [], compare = defaultCompare) {\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n    if (this.length > 0) {\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n  }\n  push(item) {\n    this.data.push(item);\n    this.length++;\n    this._up(this.length - 1);\n  }\n  pop() {\n    if (this.length === 0) return undefined;\n    const top = this.data[0];\n    const bottom = this.data.pop();\n    this.length--;\n    if (this.length > 0) {\n      this.data[0] = bottom;\n      this._down(0);\n    }\n    return top;\n  }\n  peek() {\n    return this.data[0];\n  }\n  _up(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const item = data[pos];\n    while (pos > 0) {\n      const parent = pos - 1 >> 1;\n      const current = data[parent];\n      if (compare(item, current) >= 0) break;\n      data[pos] = current;\n      pos = parent;\n    }\n    data[pos] = item;\n  }\n  _down(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const halfLength = this.length >> 1;\n    const item = data[pos];\n    while (pos < halfLength) {\n      let left = (pos << 1) + 1;\n      let best = data[left];\n      const right = left + 1;\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n      if (compare(best, item) >= 0) break;\n      data[pos] = best;\n      pos = left;\n    }\n    data[pos] = item;\n  }\n}\nfunction defaultCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}", "module.exports = function pointInPolygonFlat(point, vs, start, end) {\n  var x = point[0],\n    y = point[1];\n  var inside = false;\n  if (start === undefined) start = 0;\n  if (end === undefined) end = vs.length;\n  var len = (end - start) / 2;\n  for (var i = 0, j = len - 1; i < len; j = i++) {\n    var xi = vs[start + i * 2 + 0],\n      yi = vs[start + i * 2 + 1];\n    var xj = vs[start + j * 2 + 0],\n      yj = vs[start + j * 2 + 1];\n    var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n  return inside;\n};", "// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested(point, vs, start, end) {\n  var x = point[0],\n    y = point[1];\n  var inside = false;\n  if (start === undefined) start = 0;\n  if (end === undefined) end = vs.length;\n  var len = end - start;\n  for (var i = 0, j = len - 1; i < len; j = i++) {\n    var xi = vs[i + start][0],\n      yi = vs[i + start][1];\n    var xj = vs[j + start][0],\n      yj = vs[j + start][1];\n    var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n  return inside;\n};", "var pointInPolygonFlat = require('./flat.js');\nvar pointInPolygonNested = require('./nested.js');\nmodule.exports = function pointInPolygon(point, vs, start, end) {\n  if (vs.length > 0 && Array.isArray(vs[0])) {\n    return pointInPolygonNested(point, vs, start, end);\n  } else {\n    return pointInPolygonFlat(point, vs, start, end);\n  }\n};\nmodule.exports.nested = pointInPolygonNested;\nmodule.exports.flat = pointInPolygonFlat;", "!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? e(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], e) : e((t = t || self).predicates = {});\n}(this, function (t) {\n  \"use strict\";\n\n  const e = 134217729,\n    n = 33306690738754706e-32;\n  function r(t, e, n, r, o) {\n    let f,\n      i,\n      u,\n      c,\n      s = e[0],\n      a = r[0],\n      d = 0,\n      l = 0;\n    a > s == a > -s ? (f = s, s = e[++d]) : (f = a, a = r[++l]);\n    let p = 0;\n    if (d < t && l < n) for (a > s == a > -s ? (u = f - ((i = s + f) - s), s = e[++d]) : (u = f - ((i = a + f) - a), a = r[++l]), f = i, 0 !== u && (o[p++] = u); d < t && l < n;) a > s == a > -s ? (u = f - ((i = f + s) - (c = i - f)) + (s - c), s = e[++d]) : (u = f - ((i = f + a) - (c = i - f)) + (a - c), a = r[++l]), f = i, 0 !== u && (o[p++] = u);\n    for (; d < t;) u = f - ((i = f + s) - (c = i - f)) + (s - c), s = e[++d], f = i, 0 !== u && (o[p++] = u);\n    for (; l < n;) u = f - ((i = f + a) - (c = i - f)) + (a - c), a = r[++l], f = i, 0 !== u && (o[p++] = u);\n    return 0 === f && 0 !== p || (o[p++] = f), p;\n  }\n  function o(t) {\n    return new Float64Array(t);\n  }\n  const f = 33306690738754716e-32,\n    i = 22204460492503146e-32,\n    u = 11093356479670487e-47,\n    c = o(4),\n    s = o(8),\n    a = o(12),\n    d = o(16),\n    l = o(4);\n  t.orient2d = function (t, o, p, b, y, h) {\n    const M = (o - h) * (p - y),\n      x = (t - y) * (b - h),\n      j = M - x;\n    if (0 === M || 0 === x || M > 0 != x > 0) return j;\n    const m = Math.abs(M + x);\n    return Math.abs(j) >= f * m ? j : -function (t, o, f, p, b, y, h) {\n      let M, x, j, m, _, v, w, A, F, O, P, g, k, q, z, B, C, D;\n      const E = t - b,\n        G = f - b,\n        H = o - y,\n        I = p - y;\n      _ = (z = (A = E - (w = (v = e * E) - (v - E))) * (O = I - (F = (v = e * I) - (v - I))) - ((q = E * I) - w * F - A * F - w * O)) - (P = z - (C = (A = H - (w = (v = e * H) - (v - H))) * (O = G - (F = (v = e * G) - (v - G))) - ((B = H * G) - w * F - A * F - w * O))), c[0] = z - (P + _) + (_ - C), _ = (k = q - ((g = q + P) - (_ = g - q)) + (P - _)) - (P = k - B), c[1] = k - (P + _) + (_ - B), _ = (D = g + P) - g, c[2] = g - (D - _) + (P - _), c[3] = D;\n      let J = function (t, e) {\n          let n = e[0];\n          for (let r = 1; r < t; r++) n += e[r];\n          return n;\n        }(4, c),\n        K = i * h;\n      if (J >= K || -J >= K) return J;\n      if (M = t - (E + (_ = t - E)) + (_ - b), j = f - (G + (_ = f - G)) + (_ - b), x = o - (H + (_ = o - H)) + (_ - y), m = p - (I + (_ = p - I)) + (_ - y), 0 === M && 0 === x && 0 === j && 0 === m) return J;\n      if (K = u * h + n * Math.abs(J), (J += E * m + I * M - (H * j + G * x)) >= K || -J >= K) return J;\n      _ = (z = (A = M - (w = (v = e * M) - (v - M))) * (O = I - (F = (v = e * I) - (v - I))) - ((q = M * I) - w * F - A * F - w * O)) - (P = z - (C = (A = x - (w = (v = e * x) - (v - x))) * (O = G - (F = (v = e * G) - (v - G))) - ((B = x * G) - w * F - A * F - w * O))), l[0] = z - (P + _) + (_ - C), _ = (k = q - ((g = q + P) - (_ = g - q)) + (P - _)) - (P = k - B), l[1] = k - (P + _) + (_ - B), _ = (D = g + P) - g, l[2] = g - (D - _) + (P - _), l[3] = D;\n      const L = r(4, c, 4, l, s);\n      _ = (z = (A = E - (w = (v = e * E) - (v - E))) * (O = m - (F = (v = e * m) - (v - m))) - ((q = E * m) - w * F - A * F - w * O)) - (P = z - (C = (A = H - (w = (v = e * H) - (v - H))) * (O = j - (F = (v = e * j) - (v - j))) - ((B = H * j) - w * F - A * F - w * O))), l[0] = z - (P + _) + (_ - C), _ = (k = q - ((g = q + P) - (_ = g - q)) + (P - _)) - (P = k - B), l[1] = k - (P + _) + (_ - B), _ = (D = g + P) - g, l[2] = g - (D - _) + (P - _), l[3] = D;\n      const N = r(L, s, 4, l, a);\n      _ = (z = (A = M - (w = (v = e * M) - (v - M))) * (O = m - (F = (v = e * m) - (v - m))) - ((q = M * m) - w * F - A * F - w * O)) - (P = z - (C = (A = x - (w = (v = e * x) - (v - x))) * (O = j - (F = (v = e * j) - (v - j))) - ((B = x * j) - w * F - A * F - w * O))), l[0] = z - (P + _) + (_ - C), _ = (k = q - ((g = q + P) - (_ = g - q)) + (P - _)) - (P = k - B), l[1] = k - (P + _) + (_ - B), _ = (D = g + P) - g, l[2] = g - (D - _) + (P - _), l[3] = D;\n      const Q = r(N, a, 4, l, d);\n      return d[Q - 1];\n    }(t, o, p, b, y, h, m);\n  }, t.orient2dfast = function (t, e, n, r, o, f) {\n    return (e - f) * (n - o) - (t - o) * (r - f);\n  }, Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n});", "'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n  Queue = Queue.default;\n}\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\nfunction concaveman(points, concavity, lengthThreshold) {\n  // a relative measure of concavity; higher value means simpler hull\n  concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n  // when a segment goes below this length threshold, it won't be drilled down further\n  lengthThreshold = lengthThreshold || 0;\n\n  // start with a convex hull of the points\n  var hull = fastConvexHull(points);\n\n  // index the points with an R-tree\n  var tree = new RBush(16);\n  tree.toBBox = function (a) {\n    return {\n      minX: a[0],\n      minY: a[1],\n      maxX: a[0],\n      maxY: a[1]\n    };\n  };\n  tree.compareMinX = function (a, b) {\n    return a[0] - b[0];\n  };\n  tree.compareMinY = function (a, b) {\n    return a[1] - b[1];\n  };\n  tree.load(points);\n\n  // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n  var queue = [];\n  for (var i = 0, last; i < hull.length; i++) {\n    var p = hull[i];\n    tree.remove(p);\n    last = insertNode(p, last);\n    queue.push(last);\n  }\n\n  // index the segments with an R-tree (for intersection checks)\n  var segTree = new RBush(16);\n  for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n  var sqConcavity = concavity * concavity;\n  var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n  // process edges one by one\n  while (queue.length) {\n    var node = queue.shift();\n    var a = node.p;\n    var b = node.next.p;\n\n    // skip the edge if it's already short enough\n    var sqLen = getSqDist(a, b);\n    if (sqLen < sqLenThreshold) continue;\n    var maxSqLen = sqLen / sqConcavity;\n\n    // find the best connection point for the current edge to flex inward to\n    p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n    // if we found a connection and it satisfies our concavity measure\n    if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n      // connect the edge endpoints through this point and add 2 new edges to the queue\n      queue.push(node);\n      queue.push(insertNode(p, node));\n\n      // update point and segment indexes\n      tree.remove(p);\n      segTree.remove(node);\n      segTree.insert(updateBBox(node));\n      segTree.insert(updateBBox(node.next));\n    }\n  }\n\n  // convert the resulting hull linked list to an array of points\n  node = last;\n  var concave = [];\n  do {\n    concave.push(node.p);\n    node = node.next;\n  } while (node !== last);\n  concave.push(node.p);\n  return concave;\n}\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n  var queue = new Queue([], compareDist);\n  var node = tree.data;\n\n  // search through the point R-tree with a depth-first search using a priority queue\n  // in the order of distance to the edge (b, c)\n  while (node) {\n    for (var i = 0; i < node.children.length; i++) {\n      var child = node.children[i];\n      var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n      if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n      queue.push({\n        node: child,\n        dist: dist\n      });\n    }\n    while (queue.length && !queue.peek().node.children) {\n      var item = queue.pop();\n      var p = item.node;\n\n      // skip all points that are as close to adjacent edges (a,b) and (c,d),\n      // and points that would introduce self-intersections when connected\n      var d0 = sqSegDist(p, a, b);\n      var d1 = sqSegDist(p, c, d);\n      if (item.dist < d0 && item.dist < d1 && noIntersections(b, p, segTree) && noIntersections(c, p, segTree)) return p;\n    }\n    node = queue.pop();\n    if (node) node = node.node;\n  }\n  return null;\n}\nfunction compareDist(a, b) {\n  return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n  if (inside(a, bbox) || inside(b, bbox)) return 0;\n  var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n  if (d1 === 0) return 0;\n  var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n  if (d2 === 0) return 0;\n  var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n  if (d3 === 0) return 0;\n  var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n  if (d4 === 0) return 0;\n  return Math.min(d1, d2, d3, d4);\n}\nfunction inside(a, bbox) {\n  return a[0] >= bbox.minX && a[0] <= bbox.maxX && a[1] >= bbox.minY && a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n  var minX = Math.min(a[0], b[0]);\n  var minY = Math.min(a[1], b[1]);\n  var maxX = Math.max(a[0], b[0]);\n  var maxY = Math.max(a[1], b[1]);\n  var edges = segTree.search({\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  });\n  for (var i = 0; i < edges.length; i++) {\n    if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n  }\n  return true;\n}\nfunction cross(p1, p2, p3) {\n  return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n  return p1 !== q2 && q1 !== p2 && cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 && cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n  var p1 = node.p;\n  var p2 = node.next.p;\n  node.minX = Math.min(p1[0], p2[0]);\n  node.minY = Math.min(p1[1], p2[1]);\n  node.maxX = Math.max(p1[0], p2[0]);\n  node.maxY = Math.max(p1[1], p2[1]);\n  return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n  var left = points[0];\n  var top = points[0];\n  var right = points[0];\n  var bottom = points[0];\n\n  // find the leftmost, rightmost, topmost and bottommost points\n  for (var i = 0; i < points.length; i++) {\n    var p = points[i];\n    if (p[0] < left[0]) left = p;\n    if (p[0] > right[0]) right = p;\n    if (p[1] < top[1]) top = p;\n    if (p[1] > bottom[1]) bottom = p;\n  }\n\n  // filter out points that are inside the resulting quadrilateral\n  var cull = [left, top, right, bottom];\n  var filtered = cull.slice();\n  for (i = 0; i < points.length; i++) {\n    if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n  }\n\n  // get convex hull around the filtered points\n  return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n  var node = {\n    p: p,\n    prev: null,\n    next: null,\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0\n  };\n  if (!prev) {\n    node.prev = node;\n    node.next = node;\n  } else {\n    node.next = prev.next;\n    node.prev = prev;\n    prev.next.prev = node;\n    prev.next = node;\n  }\n  return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n  var dx = p1[0] - p2[0],\n    dy = p1[1] - p2[1];\n  return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n  var x = p1[0],\n    y = p1[1],\n    dx = p2[0] - x,\n    dy = p2[1] - y;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n  }\n  dx = p[0] - x;\n  dy = p[1] - y;\n  return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var ux = x1 - x0;\n  var uy = y1 - y0;\n  var vx = x3 - x2;\n  var vy = y3 - y2;\n  var wx = x0 - x2;\n  var wy = y0 - y2;\n  var a = ux * ux + uy * uy;\n  var b = ux * vx + uy * vy;\n  var c = vx * vx + vy * vy;\n  var d = ux * wx + uy * wy;\n  var e = vx * wx + vy * wy;\n  var D = a * c - b * b;\n  var sc, sN, tc, tN;\n  var sD = D;\n  var tD = D;\n  if (D === 0) {\n    sN = 0;\n    sD = 1;\n    tN = e;\n    tD = c;\n  } else {\n    sN = b * e - c * d;\n    tN = a * e - b * d;\n    if (sN < 0) {\n      sN = 0;\n      tN = e;\n      tD = c;\n    } else if (sN > sD) {\n      sN = sD;\n      tN = e + b;\n      tD = c;\n    }\n  }\n  if (tN < 0.0) {\n    tN = 0.0;\n    if (-d < 0.0) sN = 0.0;else if (-d > a) sN = sD;else {\n      sN = -d;\n      sD = a;\n    }\n  } else if (tN > tD) {\n    tN = tD;\n    if (-d + b < 0.0) sN = 0;else if (-d + b > a) sN = sD;else {\n      sN = -d + b;\n      sD = a;\n    }\n  }\n  sc = sN === 0 ? 0 : sN / sD;\n  tc = tN === 0 ? 0 : tN / tD;\n  var cx = (1 - sc) * x0 + sc * x1;\n  var cy = (1 - sc) * y0 + sc * y1;\n  var cx2 = (1 - tc) * x2 + tc * x3;\n  var cy2 = (1 - tc) * y2 + tc * y3;\n  var dx = cx2 - cx;\n  var dy = cy2 - cy;\n  return dx * dx + dy * dy;\n}\nfunction compareByX(a, b) {\n  return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\nfunction convexHull(points) {\n  points.sort(compareByX);\n  var lower = [];\n  for (var i = 0; i < points.length; i++) {\n    while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n      lower.pop();\n    }\n    lower.push(points[i]);\n  }\n  var upper = [];\n  for (var ii = points.length - 1; ii >= 0; ii--) {\n    while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n      upper.pop();\n    }\n    upper.push(points[ii]);\n  }\n  upper.pop();\n  lower.pop();\n  return lower.concat(upper);\n}", "\"use strict\";\n\nmodule.exports = {\n  /**\n   * Euclidean distance\n   */\n  eudist: function eudist(v1, v2, sqrt) {\n    var len = v1.length;\n    var sum = 0;\n    for (var i = 0; i < len; i++) {\n      var d = (v1[i] || 0) - (v2[i] || 0);\n      sum += d * d;\n    }\n    // Square root not really needed\n    return sqrt ? Math.sqrt(sum) : sum;\n  },\n  mandist: function mandist(v1, v2, sqrt) {\n    var len = v1.length;\n    var sum = 0;\n    for (var i = 0; i < len; i++) {\n      sum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n    }\n\n    // Square root not really needed\n    return sqrt ? Math.sqrt(sum) : sum;\n  },\n  /**\n   * Unidimensional distance\n   */\n  dist: function dist(v1, v2, sqrt) {\n    var d = Math.abs(v1 - v2);\n    return sqrt ? d : d * d;\n  }\n};\n", "\"use strict\";\n\nvar Distance = require(\"./distance.js\"),\n  eudist = Distance.eudist,\n  dist = Distance.dist;\nmodule.exports = {\n  kmrand: function kmrand(data, k) {\n    var map = {},\n      ks = [],\n      t = k << 2;\n    var len = data.length;\n    var multi = data[0].length > 0;\n    while (ks.length < k && t-- > 0) {\n      var d = data[Math.floor(Math.random() * len)];\n      var key = multi ? d.join(\"_\") : \"\" + d;\n      if (!map[key]) {\n        map[key] = true;\n        ks.push(d);\n      }\n    }\n    if (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n  },\n  /**\n   * K-means++ initial centroid selection\n   */\n  kmpp: function kmpp(data, k) {\n    var distance = data[0].length ? eudist : dist;\n    var ks = [],\n      len = data.length;\n    var multi = data[0].length > 0;\n    var map = {};\n\n    // First random centroid\n    var c = data[Math.floor(Math.random() * len)];\n    var key = multi ? c.join(\"_\") : \"\" + c;\n    ks.push(c);\n    map[key] = true;\n\n    // Retrieve next centroids\n    while (ks.length < k) {\n      // Min Distances between current centroids and data points\n      var dists = [],\n        lk = ks.length;\n      var dsum = 0,\n        prs = [];\n      for (var i = 0; i < len; i++) {\n        var min = Infinity;\n        for (var j = 0; j < lk; j++) {\n          var _dist = distance(data[i], ks[j]);\n          if (_dist <= min) min = _dist;\n        }\n        dists[i] = min;\n      }\n\n      // Sum all min distances\n      for (var _i = 0; _i < len; _i++) {\n        dsum += dists[_i];\n      }\n\n      // Probabilities and cummulative prob (cumsum)\n      for (var _i2 = 0; _i2 < len; _i2++) {\n        prs[_i2] = {\n          i: _i2,\n          v: data[_i2],\n          pr: dists[_i2] / dsum,\n          cs: 0\n        };\n      }\n\n      // Sort Probabilities\n      prs.sort(function (a, b) {\n        return a.pr - b.pr;\n      });\n\n      // Cummulative Probabilities\n      prs[0].cs = prs[0].pr;\n      for (var _i3 = 1; _i3 < len; _i3++) {\n        prs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n      }\n\n      // Randomize\n      var rnd = Math.random();\n\n      // Gets only the items whose cumsum >= rnd\n      var idx = 0;\n      while (idx < len - 1 && prs[idx++].cs < rnd) {}\n      ks.push(prs[idx - 1].v);\n      /*\n      let done = false;\n      while(!done) {\n      \t// this is our new centroid\n      \tc = prs[idx-1].v\n      \tkey = multi? c.join(\"_\") : `${c}`;\n      \tif(!map[key]) {\n      \t\tmap[key] = true;\n      \t\tks.push(c);\n      \t\tdone = true;\n      \t}\n      \telse {\n      \t\tidx++;\n      \t}\n      }\n      */\n    }\n    return ks;\n  }\n};\n", "\"use strict\";\n\n/*jshint esversion: 6 */\nvar Distance = require(\"./distance.js\"),\n  ClusterInit = require(\"./kinit.js\"),\n  eudist = Distance.eudist,\n  mandist = Distance.mandist,\n  dist = Distance.dist,\n  kmrand = ClusterInit.kmrand,\n  kmpp = ClusterInit.kmpp;\nvar MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len, val, v) {\n  v = v || [];\n  for (var i = 0; i < len; i++) {\n    v[i] = val;\n  }\n  return v;\n}\nfunction skmeans(data, k, initial, maxit) {\n  var ks = [],\n    old = [],\n    idxs = [],\n    dist = [];\n  var conv = false,\n    it = maxit || MAX;\n  var len = data.length,\n    vlen = data[0].length,\n    multi = vlen > 0;\n  var count = [];\n  if (!initial) {\n    var _idxs = {};\n    while (ks.length < k) {\n      var idx = Math.floor(Math.random() * len);\n      if (!_idxs[idx]) {\n        _idxs[idx] = true;\n        ks.push(data[idx]);\n      }\n    }\n  } else if (initial == \"kmrand\") {\n    ks = kmrand(data, k);\n  } else if (initial == \"kmpp\") {\n    ks = kmpp(data, k);\n  } else {\n    ks = initial;\n  }\n  do {\n    // Reset k count\n    init(k, 0, count);\n\n    // For each value in data, find the nearest centroid\n    for (var i = 0; i < len; i++) {\n      var min = Infinity,\n        _idx = 0;\n      for (var j = 0; j < k; j++) {\n        // Multidimensional or unidimensional\n        var dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n        if (dist <= min) {\n          min = dist;\n          _idx = j;\n        }\n      }\n      idxs[i] = _idx; // Index of the selected centroid for that value\n      count[_idx]++; // Number of values for this centroid\n    }\n\n    // Recalculate centroids\n    var sum = [],\n      old = [],\n      dif = 0;\n    for (var _j = 0; _j < k; _j++) {\n      // Multidimensional or unidimensional\n      sum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n      old[_j] = ks[_j];\n    }\n\n    // If multidimensional\n    if (multi) {\n      for (var _j2 = 0; _j2 < k; _j2++) {\n        ks[_j2] = [];\n      } // Sum values and count for each centroid\n      for (var _i = 0; _i < len; _i++) {\n        var _idx2 = idxs[_i],\n          // Centroid for that item\n          vsum = sum[_idx2],\n          // Sum values for this centroid\n          vect = data[_i]; // Current vector\n\n        // Accumulate value on the centroid for current vector\n        for (var h = 0; h < vlen; h++) {\n          vsum[h] += vect[h];\n        }\n      }\n      // Calculate the average for each centroid\n      conv = true;\n      for (var _j3 = 0; _j3 < k; _j3++) {\n        var ksj = ks[_j3],\n          // Current centroid\n          sumj = sum[_j3],\n          // Accumulated centroid values\n          oldj = old[_j3],\n          // Old centroid value\n          cj = count[_j3]; // Number of elements for this centroid\n\n        // New average\n        for (var _h = 0; _h < vlen; _h++) {\n          ksj[_h] = sumj[_h] / cj || 0; // New centroid\n        }\n\n        // Find if centroids have moved\n        if (conv) {\n          for (var _h2 = 0; _h2 < vlen; _h2++) {\n            if (oldj[_h2] != ksj[_h2]) {\n              conv = false;\n              break;\n            }\n          }\n        }\n      }\n    }\n    // If unidimensional\n    else {\n      // Sum values and count for each centroid\n      for (var _i2 = 0; _i2 < len; _i2++) {\n        var _idx3 = idxs[_i2];\n        sum[_idx3] += data[_i2];\n      }\n      // Calculate the average for each centroid\n      for (var _j4 = 0; _j4 < k; _j4++) {\n        ks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n      }\n      // Find if centroids have moved\n      conv = true;\n      for (var _j5 = 0; _j5 < k; _j5++) {\n        if (old[_j5] != ks[_j5]) {\n          conv = false;\n          break;\n        }\n      }\n    }\n    conv = conv || --it <= 0;\n  } while (!conv);\n  return {\n    it: MAX - it,\n    k: k,\n    idxs: idxs,\n    centroids: ks\n  };\n}\nmodule.exports = skmeans;\n", "'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\nfunction earcut(data, holeIndices, dim) {\n  dim = dim || 2;\n  var hasHoles = holeIndices && holeIndices.length,\n    outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n    outerNode = linkedList(data, 0, outerLen, dim, true),\n    triangles = [];\n  if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n  var minX, minY, maxX, maxY, x, y, invSize;\n  if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n  // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n  if (data.length > 80 * dim) {\n    minX = maxX = data[0];\n    minY = maxY = data[1];\n    for (var i = dim; i < outerLen; i += dim) {\n      x = data[i];\n      y = data[i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    }\n\n    // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n    invSize = Math.max(maxX - minX, maxY - minY);\n    invSize = invSize !== 0 ? 32767 / invSize : 0;\n  }\n  earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n  return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n  var i, last;\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n  return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  var p = start,\n    again;\n  do {\n    again = false;\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n  return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n\n  // interlink polygon nodes in z-order\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  var stop = ear,\n    prev,\n    next;\n\n  // iterate through ears, slicing them one by one\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim | 0);\n      triangles.push(ear.i / dim | 0);\n      triangles.push(next.i / dim | 0);\n      removeNode(ear);\n\n      // skipping the next vertex leads to less sliver triangles\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n    ear = next;\n\n    // if we looped through the whole remaining polygon and can't find any more ears\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n        // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n        // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n      break;\n    }\n  }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n  var a = ear.prev,\n    b = ear,\n    c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // now make sure we don't have other points inside the potential ear\n  var ax = a.x,\n    bx = b.x,\n    cx = c.x,\n    ay = a.y,\n    by = b.y,\n    cy = c.y;\n\n  // triangle bbox; min & max are calculated like this for speed\n  var x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx,\n    y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy,\n    x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx,\n    y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n  var p = c.next;\n  while (p !== a) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n  return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n  var a = ear.prev,\n    b = ear,\n    c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  var ax = a.x,\n    bx = b.x,\n    cx = c.x,\n    ay = a.y,\n    by = b.y,\n    cy = c.y;\n\n  // triangle bbox; min & max are calculated like this for speed\n  var x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx,\n    y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy,\n    x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx,\n    y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n\n  // z-order range for the current triangle bbox;\n  var minZ = zOrder(x0, y0, minX, minY, invSize),\n    maxZ = zOrder(x1, y1, minX, minY, invSize);\n  var p = ear.prevZ,\n    n = ear.nextZ;\n\n  // look for points inside the triangle in both directions\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  // look for remaining points in decreasing z-order\n  while (p && p.z >= minZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  // look for remaining points in increasing z-order\n  while (n && n.z <= maxZ) {\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n  return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n  var p = start;\n  do {\n    var a = p.prev,\n      b = p.next.next;\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim | 0);\n      triangles.push(p.i / dim | 0);\n      triangles.push(b.i / dim | 0);\n\n      // remove two nodes involved\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n    p = p.next;\n  } while (p !== start);\n  return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  var a = start;\n  do {\n    var b = a.next.next;\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        var c = splitPolygon(a, b);\n\n        // filter colinear points around the cuts\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n\n        // run earcut on each half\n        earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n        earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n        return;\n      }\n      b = b.next;\n    }\n    a = a.next;\n  } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  var queue = [],\n    i,\n    len,\n    start,\n    end,\n    list;\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n  queue.sort(compareX);\n\n  // process holes from left to right\n  for (i = 0; i < queue.length; i++) {\n    outerNode = eliminateHole(queue[i], outerNode);\n  }\n  return outerNode;\n}\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n  var bridge = findHoleBridge(hole, outerNode);\n  if (!bridge) {\n    return outerNode;\n  }\n  var bridgeReverse = splitPolygon(bridge, hole);\n\n  // filter collinear points around the cuts\n  filterPoints(bridgeReverse, bridgeReverse.next);\n  return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n  var p = outerNode,\n    hx = hole.x,\n    hy = hole.y,\n    qx = -Infinity,\n    m;\n\n  // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n      if (x <= hx && x > qx) {\n        qx = x;\n        m = p.x < p.next.x ? p : p.next;\n        if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n      }\n    }\n    p = p.next;\n  } while (p !== outerNode);\n  if (!m) return null;\n\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  var stop = m,\n    mx = m.x,\n    my = m.y,\n    tanMin = Infinity,\n    tan;\n  p = m;\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n    p = p.next;\n  } while (p !== stop);\n  return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n  var p = start;\n  do {\n    if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n  var i,\n    p,\n    q,\n    e,\n    tail,\n    numMerges,\n    pSize,\n    qSize,\n    inSize = 1;\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n      qSize = inSize;\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n      p = q;\n    }\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n  return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = (x - minX) * invSize | 0;\n  y = (y - minY) * invSize | 0;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n  var p = start,\n    leftmost = start;\n  do {\n    if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n  return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) >= (ax - px) * (cy - py) && (ax - px) * (by - py) >= (bx - px) * (ay - py) && (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (\n  // dones't intersect other edges\n  locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (\n  // locally visible\n  area(a.prev, a, b.prev) || area(a, b.prev, b)) ||\n  // does not create opposite-facing sectors\n  equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n  var o1 = sign(area(p1, q1, p2));\n  var o2 = sign(area(p1, q1, q2));\n  var o3 = sign(area(p2, q2, p1));\n  var o4 = sign(area(p2, q2, q1));\n  if (o1 !== o2 && o3 !== o4) return true; // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n  return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n  return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n  var p = a;\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n  return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n  var p = a,\n    inside = false,\n    px = (a.x + b.x) / 2,\n    py = (a.y + b.y) / 2;\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n  return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n  var a2 = new Node(a.i, a.x, a.y),\n    b2 = new Node(b.i, b.x, b.y),\n    an = a.next,\n    bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n  var p = new Node(i, x, y);\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n  return p;\n}\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\nfunction Node(i, x, y) {\n  // vertex index in coordinates array\n  this.i = i;\n\n  // vertex coordinates\n  this.x = x;\n  this.y = y;\n\n  // previous and next vertex nodes in a polygon ring\n  this.prev = null;\n  this.next = null;\n\n  // z-order curve value\n  this.z = 0;\n\n  // previous and next nodes in z-order\n  this.prevZ = null;\n  this.nextZ = null;\n\n  // indicates whether this is a steiner point\n  this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n  var hasHoles = holeIndices && holeIndices.length;\n  var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n  var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n  if (hasHoles) {\n    for (var i = 0, len = holeIndices.length; i < len; i++) {\n      var start = holeIndices[i] * dim;\n      var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      polygonArea -= Math.abs(signedArea(data, start, end, dim));\n    }\n  }\n  var trianglesArea = 0;\n  for (i = 0; i < triangles.length; i += 3) {\n    var a = triangles[i] * dim;\n    var b = triangles[i + 1] * dim;\n    var c = triangles[i + 2] * dim;\n    trianglesArea += Math.abs((data[a] - data[c]) * (data[b + 1] - data[a + 1]) - (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n  }\n  return polygonArea === 0 && trianglesArea === 0 ? 0 : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\nfunction signedArea(data, start, end, dim) {\n  var sum = 0;\n  for (var i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n  return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n  var dim = data[0][0].length,\n    result = {\n      vertices: [],\n      holes: [],\n      dimensions: dim\n    },\n    holeIndex = 0;\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].length; j++) {\n      for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n    }\n    if (i > 0) {\n      holeIndex += data[i - 1].length;\n      result.holes.push(holeIndex);\n    }\n  }\n  return result;\n};", "// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = {\n    type: \"Feature\"\n  };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(coordinates.map(coords => {\n    return point(coords, properties);\n  }), options);\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(coordinates.map(coords => {\n    return polygon(coords, properties);\n  }), options);\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(coordinates.map(coords => {\n    return lineString(coords, properties);\n  }), options);\n}\nfunction featureCollection(features, options = {}) {\n  const fc = {\n    type: \"FeatureCollection\"\n  };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach(num => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport { areaFactors, azimuthToBearing, bearingToAzimuth, convertArea, convertLength, degreesToRadians, earthRadius, factors, feature, featureCollection, geometry, geometryCollection, isNumber, isObject, lengthToDegrees, lengthToRadians, lineString, lineStrings, multiLineString, multiPoint, multiPolygon, point, points, polygon, polygons, radiansToDegrees, radiansToLength, round, validateBBox, validateId };\n", "// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport { collectionOf, containsNumber, featureOf, geojsonType, getCoord, getCoords, getGeom, getType };\n", "// index.ts\nimport { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction bearing(start, end, options = {}) {\n  if (options.final === true) {\n    return calculateFinalBearing(start, end);\n  }\n  const coordinates1 = getCoord(start);\n  const coordinates2 = getCoord(end);\n  const lon1 = degreesToRadians(coordinates1[0]);\n  const lon2 = degreesToRadians(coordinates2[0]);\n  const lat1 = degreesToRadians(coordinates1[1]);\n  const lat2 = degreesToRadians(coordinates2[1]);\n  const a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n  const b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n  return radiansToDegrees(Math.atan2(a, b));\n}\nfunction calculateFinalBearing(start, end) {\n  let bear = bearing(end, start);\n  bear = (bear + 180) % 360;\n  return bear;\n}\nvar turf_bearing_default = bearing;\nexport { bearing, turf_bearing_default as default };\n", "// index.ts\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction destination(origin, distance, bearing, options = {}) {\n  const coordinates1 = getCoord(origin);\n  const longitude1 = degreesToRadians(coordinates1[0]);\n  const latitude1 = degreesToRadians(coordinates1[1]);\n  const bearingRad = degreesToRadians(bearing);\n  const radians = lengthToRadians(distance, options.units);\n  const latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) + Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n  const longitude2 = longitude1 + Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n  const lng = radiansToDegrees(longitude2);\n  const lat = radiansToDegrees(latitude2);\n  return point([lng, lat], options.properties);\n}\nvar turf_destination_default = destination;\nexport { turf_destination_default as default, destination };\n", "// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nvar turf_distance_default = distance;\nexport { turf_distance_default as default, distance };\n", "// index.ts\nimport { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance as measureDistance } from \"@turf/distance\";\nimport { point } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\nfunction along(line, distance, options = {}) {\n  const geom = getGeom(line);\n  const coords = geom.coordinates;\n  let travelled = 0;\n  for (let i = 0; i < coords.length; i++) {\n    if (distance >= travelled && i === coords.length - 1) {\n      break;\n    } else if (travelled >= distance) {\n      const overshot = distance - travelled;\n      if (!overshot) {\n        return point(coords[i]);\n      } else {\n        const direction = bearing(coords[i], coords[i - 1]) - 180;\n        const interpolated = destination(coords[i], overshot, direction, options);\n        return interpolated;\n      }\n    } else {\n      travelled += measureDistance(coords[i], coords[i + 1], options);\n    }\n  }\n  return point(coords[coords.length - 1]);\n}\nvar turf_along_default = along;\nexport { along, turf_along_default as default };\n", "// index.ts\nimport { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction rhumbBearing(start, end, options = {}) {\n  let bear360;\n  if (options.final) {\n    bear360 = calculateRhumbBearing(getCoord(end), getCoord(start));\n  } else {\n    bear360 = calculateRhumbBearing(getCoord(start), getCoord(end));\n  }\n  const bear180 = bear360 > 180 ? -(360 - bear360) : bear360;\n  return bear180;\n}\nfunction calculateRhumbBearing(from, to) {\n  const phi1 = degreesToRadians(from[1]);\n  const phi2 = degreesToRadians(to[1]);\n  let deltaLambda = degreesToRadians(to[0] - from[0]);\n  if (deltaLambda > Math.PI) {\n    deltaLambda -= 2 * Math.PI;\n  }\n  if (deltaLambda < -Math.PI) {\n    deltaLambda += 2 * Math.PI;\n  }\n  const deltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n  const theta = Math.atan2(deltaLambda, deltaPsi);\n  return (radiansToDegrees(theta) + 360) % 360;\n}\nvar turf_rhumb_bearing_default = rhumbBearing;\nexport { turf_rhumb_bearing_default as default, rhumbBearing };\n", "// index.ts\nimport { bearing } from \"@turf/bearing\";\nimport { bearingToAzimuth, isObject } from \"@turf/helpers\";\nimport { rhumbBearing } from \"@turf/rhumb-bearing\";\nfunction angle(startPoint, midPoint, endPoint, options = {}) {\n  if (!isObject(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  if (!startPoint) {\n    throw new Error(\"startPoint is required\");\n  }\n  if (!midPoint) {\n    throw new Error(\"midPoint is required\");\n  }\n  if (!endPoint) {\n    throw new Error(\"endPoint is required\");\n  }\n  const A = startPoint;\n  const O = midPoint;\n  const B = endPoint;\n  const azimuthOA = bearingToAzimuth(options.mercator !== true ? bearing(O, A) : rhumbBearing(O, A));\n  let azimuthOB = bearingToAzimuth(options.mercator !== true ? bearing(O, B) : rhumbBearing(O, B));\n  if (azimuthOB < azimuthOA) {\n    azimuthOB = azimuthOB + 360;\n  }\n  const angleAOB = azimuthOB - azimuthOA;\n  if (options.explementary === true) {\n    return 360 - angleAOB;\n  }\n  return angleAOB;\n}\nvar turf_angle_default = angle;\nexport { angle, turf_angle_default as default };\n", "// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++) if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n    if (coordIndex === 0 && initialValue === void 0) previousValue = currentCoord;else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n  }, excludeWrapCoord);\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0) previousValue = currentProperties;else previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0) previousValue = currentFeature;else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n          {\n            if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n            break;\n          }\n        case \"GeometryCollection\":\n          {\n            for (j = 0; j < geometry.geometries.length; j++) {\n              if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n            }\n            break;\n          }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n    if (featureIndex === 0 && initialValue === void 0) previousValue = currentGeometry;else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n  });\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(feature(geometry, properties, {\n          bbox,\n          id\n        }), featureIndex, 0) === false) return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n    if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0) previousValue = currentFeature;else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n  });\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(feature2, function (currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n      if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n        previousCoords = currentCoord;\n        previousFeatureIndex = featureIndex;\n        previousMultiIndex = multiPartIndexCoord;\n        prevGeomIndex = geometryIndex;\n        segmentIndex = 0;\n        return;\n      }\n      var currentSegment = lineString([previousCoords, currentCoord], feature2.properties);\n      if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n      segmentIndex++;\n      previousCoords = currentCoord;\n    }) === false) return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n    if (started === false && initialValue === void 0) previousValue = currentSegment;else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n    started = true;\n  });\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function (feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(lineString(coords[geometryIndex], feature2.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n    if (featureIndex === 0 && initialValue === void 0) previousValue = currentLine;else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n  });\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n", "// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(geojson, (value, geom) => {\n    return value + calculateArea(geom);\n  }, 0);\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport { area, turf_area_default as default };\n", "// index.ts\nimport { coordEach } from \"@turf/meta\";\nfunction bbox(geojson, options = {}) {\n  if (geojson.bbox != null && true !== options.recompute) {\n    return geojson.bbox;\n  }\n  const result = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, coord => {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\nvar turf_bbox_default = bbox;\nexport { bbox, turf_bbox_default as default };\n", "// index.ts\nimport { lineString, multiLineString, multiPolygon, polygon } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length,\n    codeA = bitCode(points[0], bbox),\n    part = [],\n    i,\n    codeB,\n    lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\":\n      {\n        const lines = [];\n        if (type === \"LineString\") {\n          coords = [coords];\n        }\n        coords.forEach(line => {\n          lineclip(line, bbox, lines);\n        });\n        if (lines.length === 1) {\n          return lineString(lines[0], properties);\n        }\n        return multiLineString(lines, properties);\n      }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(coords.map(poly => {\n        return clipPolygon(poly, bbox);\n      }), properties);\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport { bboxClip, turf_bbox_clip_default as default };\n", "// index.ts\nimport { polygon } from \"@turf/helpers\";\nfunction bboxPolygon(bbox, options = {}) {\n  const west = Number(bbox[0]);\n  const south = Number(bbox[1]);\n  const east = Number(bbox[2]);\n  const north = Number(bbox[3]);\n  if (bbox.length === 6) {\n    throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n  }\n  const lowLeft = [west, south];\n  const topLeft = [west, north];\n  const topRight = [east, north];\n  const lowRight = [east, south];\n  return polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, {\n    bbox,\n    id: options.id\n  });\n}\nvar turf_bbox_polygon_default = bboxPolygon;\nexport { bboxPolygon, turf_bbox_polygon_default as default };\n", "// index.ts\nimport { lineString } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/spline.ts\nvar Spline = class {\n  constructor(options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 1e4;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    for (let i = 0; i < this.length; i++) {\n      this.points[i].z = this.points[i].z || 0;\n    }\n    for (let i = 0; i < this.length - 1; i++) {\n      const p1 = this.points[i];\n      const p2 = this.points[i + 1];\n      this.centers.push({\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n        z: (p1.z + p2.z) / 2\n      });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (let i = 0; i < this.centers.length - 1; i++) {\n      const dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n      const dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n      const dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n      this.controls.push([{\n        x: (1 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n        y: (1 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n        z: (1 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)\n      }, {\n        x: (1 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n        y: (1 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n        z: (1 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)\n      }]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n  }\n  /**\n   * Caches an array of equidistant (more or less) points on the curve.\n   */\n  cacheSteps(mindist) {\n    const steps = [];\n    let laststep = this.pos(0);\n    steps.push(0);\n    for (let t = 0; t < this.duration; t += 10) {\n      const step = this.pos(t);\n      const dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n      if (dist > mindist) {\n        steps.push(t);\n        laststep = step;\n      }\n    }\n    return steps;\n  }\n  /**\n   * returns angle and speed in the given point in the curve\n   */\n  vector(t) {\n    const p1 = this.pos(t + 10);\n    const p2 = this.pos(t - 10);\n    return {\n      angle: 180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n      speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n  }\n  /**\n   * Gets the position of the point, given time.\n   *\n   * WARNING: The speed is not constant. The time it takes between control points is constant.\n   *\n   * For constant speed, use Spline.steps[i];\n   */\n  pos(time) {\n    let t = time - this.delay;\n    if (t < 0) {\n      t = 0;\n    }\n    if (t > this.duration) {\n      t = this.duration - 1;\n    }\n    const t2 = t / this.duration;\n    if (t2 >= 1) {\n      return this.points[this.length - 1];\n    }\n    const n = Math.floor((this.points.length - 1) * t2);\n    const t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n  }\n};\nfunction bezier(t, p1, c1, c2, p2) {\n  const b = B(t);\n  const pos = {\n    x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n    y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n    z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n  };\n  return pos;\n}\nfunction B(t) {\n  const t2 = t * t;\n  const t3 = t2 * t;\n  return [t3, 3 * t2 * (1 - t), 3 * t * (1 - t) * (1 - t), (1 - t) * (1 - t) * (1 - t)];\n}\n\n// index.ts\nfunction bezierSpline(line, options = {}) {\n  const resolution = options.resolution || 1e4;\n  const sharpness = options.sharpness || 0.85;\n  const coords = [];\n  const points = getGeom(line).coordinates.map(pt => {\n    return {\n      x: pt[0],\n      y: pt[1]\n    };\n  });\n  const spline = new Spline({\n    duration: resolution,\n    points,\n    sharpness\n  });\n  const pushCoord = time => {\n    var pos = spline.pos(time);\n    if (Math.floor(time / 100) % 2 === 0) {\n      coords.push([pos.x, pos.y]);\n    }\n  };\n  for (var i = 0; i < spline.duration; i += 10) {\n    pushCoord(i);\n  }\n  pushCoord(spline.duration);\n  return lineString(coords, options.properties);\n}\nvar turf_bezier_spline_default = bezierSpline;\nexport { bezierSpline, turf_bezier_spline_default as default };\n", "// index.ts\nimport { getCoords } from \"@turf/invariant\";\nfunction booleanClockwise(line) {\n  const ring = getCoords(line);\n  let sum = 0;\n  let i = 1;\n  let prev;\n  let cur;\n  while (i < ring.length) {\n    prev = cur || ring[0];\n    cur = ring[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n  return sum > 0;\n}\nvar turf_boolean_clockwise_default = booleanClockwise;\nexport { booleanClockwise, turf_boolean_clockwise_default as default };\n", "// index.ts\nimport { getGeom } from \"@turf/invariant\";\nfunction booleanConcave(polygon) {\n  const coords = getGeom(polygon).coordinates;\n  if (coords[0].length <= 4) {\n    return false;\n  }\n  let sign = false;\n  const n = coords[0].length - 1;\n  for (let i = 0; i < n; i++) {\n    const dx1 = coords[0][(i + 2) % n][0] - coords[0][(i + 1) % n][0];\n    const dy1 = coords[0][(i + 2) % n][1] - coords[0][(i + 1) % n][1];\n    const dx2 = coords[0][i][0] - coords[0][(i + 1) % n][0];\n    const dy2 = coords[0][i][1] - coords[0][(i + 1) % n][1];\n    const zcrossproduct = dx1 * dy2 - dy1 * dx2;\n    if (i === 0) {\n      sign = zcrossproduct > 0;\n    } else if (sign !== zcrossproduct > 0) {\n      return true;\n    }\n  }\n  return false;\n}\nvar turf_boolean_concave_default = booleanConcave;\nexport { booleanConcave, turf_boolean_concave_default as default };\n", "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n  let hindex = 0;\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n      Q = Qnew;\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nexport function negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n  return elen;\n}\nexport function estimate(elen, e) {\n  let Q = e[0];\n  for (let i = 1; i < elen; i++) Q += e[i];\n  return Q;\n}\nexport function vec(n) {\n  return new Float64Array(n);\n}", "import { epsilon, splitter, resulterrbound, estimate, vec, sum } from './util.js';\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  let acxtail, acytail, bcxtail, bcytail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const acx = ax - cx;\n  const bcx = bx - cx;\n  const acy = ay - cy;\n  const bcy = by - cy;\n  s1 = acx * bcy;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  B[3] = u3;\n  let det = estimate(4, B);\n  let errbound = ccwerrboundB * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n  errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C1len = sum(4, B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C2len = sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const Dlen = sum(C2len, C2, 4, u, D);\n  return D[Dlen - 1];\n}\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n  const detleft = (ay - cy) * (bx - cx);\n  const detright = (ax - cx) * (by - cy);\n  const det = detleft - detright;\n  const detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}", "import { epsilon, splitter, resulterrbound, estimate, vec, sum, scale } from './util.js';\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\nlet fin = vec(192);\nlet fin2 = vec(192);\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n  return finlen;\n}\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  let det = estimate(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n  return fin[finlen - 1];\n}\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}", "import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale } from './util.js';\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\nlet fin = vec(1152);\nlet fin2 = vec(1152);\nfunction finadd(finlen, a, alen) {\n  finlen = sum(finlen, fin, a, alen, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, bc, adx, _8), _8, adx, _16), _16, scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16, scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16, scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  let det = estimate(finlen, fin);\n  let errbound = iccerrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n  if (adxtail !== 0) {\n    axtbclen = scale(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, _16), _16, scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n  if (adytail !== 0) {\n    aytbclen = scale(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, _16), _16, scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b, scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, _16), _16, scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n  if (bdytail !== 0) {\n    bytcalen = scale(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, _16), _16, scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b, scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, _16), _16, scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n  if (cdytail !== 0) {\n    cytablen = scale(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, _16), _16, scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n    if (adxtail !== 0) {\n      const len = scale(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, _16), _16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * adx, _16), _16, scale(len2, _8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n    if (adytail !== 0) {\n      const len = scale(bctlen, bct, adytail, _16c);\n      finlen = finadd(finlen, sum(scale(aytbclen, aytbc, adytail, _16), _16, scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * ady, _16), _16, scale(len2, _8, adytail, _16b), _16b, scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n    if (bdxtail !== 0) {\n      const len = scale(catlen, cat, bdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, _16), _16, scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdx, _16), _16, scale(len2, _8, bdxtail, _16b), _16b, scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n    if (bdytail !== 0) {\n      const len = scale(catlen, cat, bdytail, _16c);\n      finlen = finadd(finlen, sum(scale(bytcalen, bytca, bdytail, _16), _16, scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdy, _16), _16, scale(len2, _8, bdytail, _16b), _16b, scale(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n    if (cdxtail !== 0) {\n      const len = scale(abtlen, abt, cdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, _16), _16, scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdx, _16), _16, scale(len2, _8, cdxtail, _16b), _16b, scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n    if (cdytail !== 0) {\n      const len = scale(abtlen, abt, cdytail, _16c);\n      finlen = finadd(finlen, sum(scale(cytablen, cytab, cdytail, _16), _16, scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdy, _16), _16, scale(len2, _8, cdytail, _16b), _16b, scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  return fin[finlen - 1];\n}\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}", "import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  const len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  const deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  let ab3, bc3, cd3, da3, ac3, bd3;\n  let aextail, bextail, cextail, dextail;\n  let aeytail, beytail, ceytail, deytail;\n  let aeztail, beztail, ceztail, deztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  const finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  let det = estimate(finlen, fin);\n  let errbound = isperrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  const aexbey = aex * bey;\n  const bexaey = bex * aey;\n  const ab = aexbey - bexaey;\n  const bexcey = bex * cey;\n  const cexbey = cex * bey;\n  const bc = bexcey - cexbey;\n  const cexdey = cex * dey;\n  const dexcey = dex * cey;\n  const cd = cexdey - dexcey;\n  const dexaey = dex * aey;\n  const aexdey = aex * dey;\n  const da = dexaey - aexdey;\n  const aexcey = aex * cey;\n  const cexaey = cex * aey;\n  const ac = aexcey - cexaey;\n  const bexdey = bex * dey;\n  const dexbey = dex * bey;\n  const bd = bexdey - dexbey;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  const det = clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab) + (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n  const aezplus = Math.abs(aez);\n  const bezplus = Math.abs(bez);\n  const cezplus = Math.abs(cez);\n  const dezplus = Math.abs(dez);\n  const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n  const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n  const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n  const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n  const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n  const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n  const permanent = (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift + (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift + (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift + (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n  const errbound = isperrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  const aex = pax - pex;\n  const bex = pbx - pex;\n  const cex = pcx - pex;\n  const dex = pdx - pex;\n  const aey = pay - pey;\n  const bey = pby - pey;\n  const cey = pcy - pey;\n  const dey = pdy - pey;\n  const aez = paz - pez;\n  const bez = pbz - pez;\n  const cez = pcz - pez;\n  const dez = pdz - pez;\n  const ab = aex * bey - bex * aey;\n  const bc = bex * cey - cex * bey;\n  const cd = cex * dey - dex * cey;\n  const da = dex * aey - aex * dey;\n  const ac = aex * cey - cex * aey;\n  const bd = bex * dey - dex * bey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}", "import { orient2d } from 'robust-predicates';\nfunction pointInPolygon(p, polygon) {\n  var i;\n  var ii;\n  var k = 0;\n  var f;\n  var u1;\n  var v1;\n  var u2;\n  var v2;\n  var currentP;\n  var nextP;\n  var x = p[0];\n  var y = p[1];\n  var numContours = polygon.length;\n  for (i = 0; i < numContours; i++) {\n    ii = 0;\n    var contour = polygon[i];\n    var contourLen = contour.length - 1;\n    currentP = contour[0];\n    if (currentP[0] !== contour[contourLen][0] && currentP[1] !== contour[contourLen][1]) {\n      throw new Error('First and last coordinates in a ring must be the same');\n    }\n    u1 = currentP[0] - x;\n    v1 = currentP[1] - y;\n    for (ii; ii < contourLen; ii++) {\n      nextP = contour[ii + 1];\n      u2 = nextP[0] - x;\n      v2 = nextP[1] - y;\n      if (v1 === 0 && v2 === 0) {\n        if (u2 <= 0 && u1 >= 0 || u1 <= 0 && u2 >= 0) {\n          return 0;\n        }\n      } else if (v2 >= 0 && v1 <= 0 || v2 <= 0 && v1 >= 0) {\n        f = orient2d(u1, u2, v1, v2, 0, 0);\n        if (f === 0) {\n          return 0;\n        }\n        if (f > 0 && v2 > 0 && v1 <= 0 || f < 0 && v2 <= 0 && v1 > 0) {\n          k++;\n        }\n      }\n      currentP = nextP;\n      v1 = v2;\n      u1 = u2;\n    }\n  }\n  if (k % 2 === 0) {\n    return false;\n  }\n  return true;\n}\nexport { pointInPolygon as default };", "// index.ts\nimport pip from \"point-in-polygon-hao\";\nimport { getCoord, getGeom } from \"@turf/invariant\";\nfunction booleanPointInPolygon(point, polygon, options = {}) {\n  if (!point) {\n    throw new Error(\"point is required\");\n  }\n  if (!polygon) {\n    throw new Error(\"polygon is required\");\n  }\n  const pt = getCoord(point);\n  const geom = getGeom(polygon);\n  const type = geom.type;\n  const bbox = polygon.bbox;\n  let polys = geom.coordinates;\n  if (bbox && inBBox(pt, bbox) === false) {\n    return false;\n  }\n  if (type === \"Polygon\") {\n    polys = [polys];\n  }\n  let result = false;\n  for (var i = 0; i < polys.length; ++i) {\n    const polyResult = pip(pt, polys[i]);\n    if (polyResult === 0) return options.ignoreBoundary ? false : true;else if (polyResult) result = true;\n  }\n  return result;\n}\nfunction inBBox(pt, bbox) {\n  return bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1];\n}\nvar turf_boolean_point_in_polygon_default = booleanPointInPolygon;\nexport { booleanPointInPolygon, turf_boolean_point_in_polygon_default as default };\n", "// index.ts\nimport { getCoord, getCoords } from \"@turf/invariant\";\nfunction booleanPointOnLine(pt, line, options = {}) {\n  const ptCoords = getCoord(pt);\n  const lineCoords = getCoords(line);\n  for (let i = 0; i < lineCoords.length - 1; i++) {\n    let ignoreBoundary = false;\n    if (options.ignoreEndVertices) {\n      if (i === 0) {\n        ignoreBoundary = \"start\";\n      }\n      if (i === lineCoords.length - 2) {\n        ignoreBoundary = \"end\";\n      }\n      if (i === 0 && i + 1 === lineCoords.length - 1) {\n        ignoreBoundary = \"both\";\n      }\n    }\n    if (isPointOnLineSegment(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary, typeof options.epsilon === \"undefined\" ? null : options.epsilon)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary, epsilon) {\n  const x = pt[0];\n  const y = pt[1];\n  const x1 = lineSegmentStart[0];\n  const y1 = lineSegmentStart[1];\n  const x2 = lineSegmentEnd[0];\n  const y2 = lineSegmentEnd[1];\n  const dxc = pt[0] - x1;\n  const dyc = pt[1] - y1;\n  const dxl = x2 - x1;\n  const dyl = y2 - y1;\n  const cross = dxc * dyl - dyc * dxl;\n  if (epsilon !== null) {\n    if (Math.abs(cross) > epsilon) {\n      return false;\n    }\n  } else if (cross !== 0) {\n    return false;\n  }\n  if (Math.abs(dxl) === Math.abs(dyl) && Math.abs(dxl) === 0) {\n    if (excludeBoundary) {\n      return false;\n    }\n    if (pt[0] === lineSegmentStart[0] && pt[1] === lineSegmentStart[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  if (!excludeBoundary) {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n    }\n    return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n  } else if (excludeBoundary === \"start\") {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n    }\n    return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n  } else if (excludeBoundary === \"end\") {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n    }\n    return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n  } else if (excludeBoundary === \"both\") {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n    }\n    return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n  }\n  return false;\n}\nvar turf_boolean_point_on_line_default = booleanPointOnLine;\nexport { booleanPointOnLine, turf_boolean_point_on_line_default as default };\n", "// index.ts\nimport { bbox as calcBbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { booleanPointOnLine as isPointOnLine } from \"@turf/boolean-point-on-line\";\nimport { getGeom } from \"@turf/invariant\";\nfunction booleanContains(feature1, feature2) {\n  const geom1 = getGeom(feature1);\n  const geom2 = getGeom(feature2);\n  const type1 = geom1.type;\n  const type2 = geom2.type;\n  const coords1 = geom1.coordinates;\n  const coords2 = geom2.coordinates;\n  switch (type1) {\n    case \"Point\":\n      switch (type2) {\n        case \"Point\":\n          return compareCoords(coords1, coords2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiPoint\":\n      switch (type2) {\n        case \"Point\":\n          return isPointInMultiPoint(geom1, geom2);\n        case \"MultiPoint\":\n          return isMultiPointInMultiPoint(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"LineString\":\n      switch (type2) {\n        case \"Point\":\n          return isPointOnLine(geom2, geom1, {\n            ignoreEndVertices: true\n          });\n        case \"LineString\":\n          return isLineOnLine(geom1, geom2);\n        case \"MultiPoint\":\n          return isMultiPointOnLine(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"Polygon\":\n      switch (type2) {\n        case \"Point\":\n          return booleanPointInPolygon(geom2, geom1, {\n            ignoreBoundary: true\n          });\n        case \"LineString\":\n          return isLineInPoly(geom1, geom2);\n        case \"Polygon\":\n          return isPolyInPoly(geom1, geom2);\n        case \"MultiPoint\":\n          return isMultiPointInPoly(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiPolygon\":\n      switch (type2) {\n        case \"Polygon\":\n          return isPolygonInMultiPolygon(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    default:\n      throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n  }\n}\nfunction isPolygonInMultiPolygon(multiPolygon, polygon) {\n  return multiPolygon.coordinates.some(coords => isPolyInPoly({\n    type: \"Polygon\",\n    coordinates: coords\n  }, polygon));\n}\nfunction isPointInMultiPoint(multiPoint, pt) {\n  let i;\n  let output = false;\n  for (i = 0; i < multiPoint.coordinates.length; i++) {\n    if (compareCoords(multiPoint.coordinates[i], pt.coordinates)) {\n      output = true;\n      break;\n    }\n  }\n  return output;\n}\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n  for (const coord2 of multiPoint2.coordinates) {\n    let matchFound = false;\n    for (const coord1 of multiPoint1.coordinates) {\n      if (compareCoords(coord2, coord1)) {\n        matchFound = true;\n        break;\n      }\n    }\n    if (!matchFound) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isMultiPointOnLine(lineString, multiPoint) {\n  let haveFoundInteriorPoint = false;\n  for (const coord of multiPoint.coordinates) {\n    if (isPointOnLine(coord, lineString, {\n      ignoreEndVertices: true\n    })) {\n      haveFoundInteriorPoint = true;\n    }\n    if (!isPointOnLine(coord, lineString)) {\n      return false;\n    }\n  }\n  if (haveFoundInteriorPoint) {\n    return true;\n  }\n  return false;\n}\nfunction isMultiPointInPoly(polygon, multiPoint) {\n  for (const coord of multiPoint.coordinates) {\n    if (!booleanPointInPolygon(coord, polygon, {\n      ignoreBoundary: true\n    })) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n  let haveFoundInteriorPoint = false;\n  for (const coords of lineString2.coordinates) {\n    if (isPointOnLine({\n      type: \"Point\",\n      coordinates: coords\n    }, lineString1, {\n      ignoreEndVertices: true\n    })) {\n      haveFoundInteriorPoint = true;\n    }\n    if (!isPointOnLine({\n      type: \"Point\",\n      coordinates: coords\n    }, lineString1, {\n      ignoreEndVertices: false\n    })) {\n      return false;\n    }\n  }\n  return haveFoundInteriorPoint;\n}\nfunction isLineInPoly(polygon, linestring) {\n  let output = false;\n  let i = 0;\n  const polyBbox = calcBbox(polygon);\n  const lineBbox = calcBbox(linestring);\n  if (!doBBoxOverlap(polyBbox, lineBbox)) {\n    return false;\n  }\n  for (i; i < linestring.coordinates.length - 1; i++) {\n    const midPoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n    if (booleanPointInPolygon({\n      type: \"Point\",\n      coordinates: midPoint\n    }, polygon, {\n      ignoreBoundary: true\n    })) {\n      output = true;\n      break;\n    }\n  }\n  return output;\n}\nfunction isPolyInPoly(feature1, feature2) {\n  if (feature1.type === \"Feature\" && feature1.geometry === null) {\n    return false;\n  }\n  if (feature2.type === \"Feature\" && feature2.geometry === null) {\n    return false;\n  }\n  const poly1Bbox = calcBbox(feature1);\n  const poly2Bbox = calcBbox(feature2);\n  if (!doBBoxOverlap(poly1Bbox, poly2Bbox)) {\n    return false;\n  }\n  const coords = getGeom(feature2).coordinates;\n  for (const ring of coords) {\n    for (const coord of ring) {\n      if (!booleanPointInPolygon(coord, feature1)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction doBBoxOverlap(bbox1, bbox2) {\n  if (bbox1[0] > bbox2[0]) {\n    return false;\n  }\n  if (bbox1[2] < bbox2[2]) {\n    return false;\n  }\n  if (bbox1[1] > bbox2[1]) {\n    return false;\n  }\n  if (bbox1[3] < bbox2[3]) {\n    return false;\n  }\n  return true;\n}\nfunction compareCoords(pair1, pair2) {\n  return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nfunction getMidpoint(pair1, pair2) {\n  return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\nvar turf_boolean_contains_default = booleanContains;\nexport { booleanContains, compareCoords, turf_boolean_contains_default as default, doBBoxOverlap, getMidpoint, isLineInPoly, isLineOnLine, isMultiPointInMultiPoint, isMultiPointInPoly, isMultiPointOnLine, isPointInMultiPoint, isPolyInPoly, isPolygonInMultiPolygon };\n", "class TinyQueue {\n  constructor(data = [], compare = defaultCompare) {\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n    if (this.length > 0) {\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n  }\n  push(item) {\n    this.data.push(item);\n    this.length++;\n    this._up(this.length - 1);\n  }\n  pop() {\n    if (this.length === 0) return undefined;\n    const top = this.data[0];\n    const bottom = this.data.pop();\n    this.length--;\n    if (this.length > 0) {\n      this.data[0] = bottom;\n      this._down(0);\n    }\n    return top;\n  }\n  peek() {\n    return this.data[0];\n  }\n  _up(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const item = data[pos];\n    while (pos > 0) {\n      const parent = pos - 1 >> 1;\n      const current = data[parent];\n      if (compare(item, current) >= 0) break;\n      data[pos] = current;\n      pos = parent;\n    }\n    data[pos] = item;\n  }\n  _down(pos) {\n    const {\n      data,\n      compare\n    } = this;\n    const halfLength = this.length >> 1;\n    const item = data[pos];\n    while (pos < halfLength) {\n      let left = (pos << 1) + 1;\n      let best = data[left];\n      const right = left + 1;\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n      if (compare(best, item) >= 0) break;\n      data[pos] = best;\n      pos = left;\n    }\n    data[pos] = item;\n  }\n}\nfunction defaultCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction checkWhichEventIsLeft(e1, e2) {\n  if (e1.p.x > e2.p.x) return 1;\n  if (e1.p.x < e2.p.x) return -1;\n  if (e1.p.y !== e2.p.y) return e1.p.y > e2.p.y ? 1 : -1;\n  return 1;\n}\nfunction checkWhichSegmentHasRightEndpointFirst(seg1, seg2) {\n  if (seg1.rightSweepEvent.p.x > seg2.rightSweepEvent.p.x) return 1;\n  if (seg1.rightSweepEvent.p.x < seg2.rightSweepEvent.p.x) return -1;\n  if (seg1.rightSweepEvent.p.y !== seg2.rightSweepEvent.p.y) return seg1.rightSweepEvent.p.y < seg2.rightSweepEvent.p.y ? 1 : -1;\n  return 1;\n}\nclass Event {\n  constructor(p, featureId, ringId, eventId) {\n    this.p = {\n      x: p[0],\n      y: p[1]\n    };\n    this.featureId = featureId;\n    this.ringId = ringId;\n    this.eventId = eventId;\n    this.otherEvent = null;\n    this.isLeftEndpoint = null;\n  }\n  isSamePoint(eventToCheck) {\n    return this.p.x === eventToCheck.p.x && this.p.y === eventToCheck.p.y;\n  }\n}\nfunction fillEventQueue(geojson, eventQueue) {\n  if (geojson.type === 'FeatureCollection') {\n    const features = geojson.features;\n    for (let i = 0; i < features.length; i++) {\n      processFeature(features[i], eventQueue);\n    }\n  } else {\n    processFeature(geojson, eventQueue);\n  }\n}\nlet featureId = 0;\nlet ringId = 0;\nlet eventId = 0;\nfunction processFeature(featureOrGeometry, eventQueue) {\n  const geom = featureOrGeometry.type === 'Feature' ? featureOrGeometry.geometry : featureOrGeometry;\n  let coords = geom.coordinates;\n  // standardise the input\n  if (geom.type === 'Polygon' || geom.type === 'MultiLineString') coords = [coords];\n  if (geom.type === 'LineString') coords = [[coords]];\n  for (let i = 0; i < coords.length; i++) {\n    for (let ii = 0; ii < coords[i].length; ii++) {\n      let currentP = coords[i][ii][0];\n      let nextP = null;\n      ringId = ringId + 1;\n      for (let iii = 0; iii < coords[i][ii].length - 1; iii++) {\n        nextP = coords[i][ii][iii + 1];\n        const e1 = new Event(currentP, featureId, ringId, eventId);\n        const e2 = new Event(nextP, featureId, ringId, eventId + 1);\n        e1.otherEvent = e2;\n        e2.otherEvent = e1;\n        if (checkWhichEventIsLeft(e1, e2) > 0) {\n          e2.isLeftEndpoint = true;\n          e1.isLeftEndpoint = false;\n        } else {\n          e1.isLeftEndpoint = true;\n          e2.isLeftEndpoint = false;\n        }\n        eventQueue.push(e1);\n        eventQueue.push(e2);\n        currentP = nextP;\n        eventId = eventId + 1;\n      }\n    }\n  }\n  featureId = featureId + 1;\n}\nclass Segment {\n  constructor(event) {\n    this.leftSweepEvent = event;\n    this.rightSweepEvent = event.otherEvent;\n  }\n}\nfunction testSegmentIntersect(seg1, seg2) {\n  if (seg1 === null || seg2 === null) return false;\n  if (seg1.leftSweepEvent.ringId === seg2.leftSweepEvent.ringId && (seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.rightSweepEvent.isSamePoint(seg2.rightSweepEvent) || seg1.leftSweepEvent.isSamePoint(seg2.leftSweepEvent) || seg1.leftSweepEvent.isSamePoint(seg2.rightSweepEvent))) return false;\n  const x1 = seg1.leftSweepEvent.p.x;\n  const y1 = seg1.leftSweepEvent.p.y;\n  const x2 = seg1.rightSweepEvent.p.x;\n  const y2 = seg1.rightSweepEvent.p.y;\n  const x3 = seg2.leftSweepEvent.p.x;\n  const y3 = seg2.leftSweepEvent.p.y;\n  const x4 = seg2.rightSweepEvent.p.x;\n  const y4 = seg2.rightSweepEvent.p.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n  if (denom === 0) {\n    if (numeA === 0 && numeB === 0) return false;\n    return false;\n  }\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    const x = x1 + uA * (x2 - x1);\n    const y = y1 + uA * (y2 - y1);\n    return [x, y];\n  }\n  return false;\n}\n\n// import {debugEventAndSegments, debugRemovingSegment} from './debug'\n\nfunction runCheck(eventQueue, ignoreSelfIntersections) {\n  ignoreSelfIntersections = ignoreSelfIntersections ? ignoreSelfIntersections : false;\n  const intersectionPoints = [];\n  const outQueue = new TinyQueue([], checkWhichSegmentHasRightEndpointFirst);\n  while (eventQueue.length) {\n    const event = eventQueue.pop();\n    if (event.isLeftEndpoint) {\n      // debugEventAndSegments(event.p, outQueue.data)\n      const segment = new Segment(event);\n      for (let i = 0; i < outQueue.data.length; i++) {\n        const otherSeg = outQueue.data[i];\n        if (ignoreSelfIntersections) {\n          if (otherSeg.leftSweepEvent.featureId === event.featureId) continue;\n        }\n        const intersection = testSegmentIntersect(segment, otherSeg);\n        if (intersection !== false) intersectionPoints.push(intersection);\n      }\n      outQueue.push(segment);\n    } else if (event.isLeftEndpoint === false) {\n      outQueue.pop();\n      // const seg = outQueue.pop()\n      // debugRemovingSegment(event.p, seg)\n    }\n  }\n  return intersectionPoints;\n}\nfunction sweeplineIntersections(geojson, ignoreSelfIntersections) {\n  const eventQueue = new TinyQueue([], checkWhichEventIsLeft);\n  fillEventQueue(geojson, eventQueue);\n  return runCheck(eventQueue, ignoreSelfIntersections);\n}\nexport default sweeplineIntersections;", "// index.ts\nimport { feature, featureCollection, point } from \"@turf/helpers\";\n\n// lib/sweepline-intersections-export.ts\nimport lib from \"sweepline-intersections\";\nvar sweeplineIntersections = lib;\n\n// index.ts\nfunction lineIntersect(line1, line2, options = {}) {\n  const {\n    removeDuplicates = true,\n    ignoreSelfIntersections = true\n  } = options;\n  let features = [];\n  if (line1.type === \"FeatureCollection\") features = features.concat(line1.features);else if (line1.type === \"Feature\") features.push(line1);else if (line1.type === \"LineString\" || line1.type === \"Polygon\" || line1.type === \"MultiLineString\" || line1.type === \"MultiPolygon\") {\n    features.push(feature(line1));\n  }\n  if (line2.type === \"FeatureCollection\") features = features.concat(line2.features);else if (line2.type === \"Feature\") features.push(line2);else if (line2.type === \"LineString\" || line2.type === \"Polygon\" || line2.type === \"MultiLineString\" || line2.type === \"MultiPolygon\") {\n    features.push(feature(line2));\n  }\n  const intersections = sweeplineIntersections(featureCollection(features), ignoreSelfIntersections);\n  let results = [];\n  if (removeDuplicates) {\n    const unique = {};\n    intersections.forEach(intersection => {\n      const key = intersection.join(\",\");\n      if (!unique[key]) {\n        unique[key] = true;\n        results.push(intersection);\n      }\n    });\n  } else {\n    results = intersections;\n  }\n  return featureCollection(results.map(r => point(r)));\n}\nvar turf_line_intersect_default = lineIntersect;\nexport { turf_line_intersect_default as default, lineIntersect };\n", "// index.ts\nimport { featureCollection, lineString, multiLineString } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\nfunction polygonToLine(poly, options = {}) {\n  const geom = getGeom(poly);\n  if (!options.properties && poly.type === \"Feature\") {\n    options.properties = poly.properties;\n  }\n  switch (geom.type) {\n    case \"Polygon\":\n      return singlePolygonToLine(geom, options);\n    case \"MultiPolygon\":\n      return multiPolygonToLine(geom, options);\n    default:\n      throw new Error(\"invalid poly\");\n  }\n}\nfunction singlePolygonToLine(poly, options = {}) {\n  const geom = getGeom(poly);\n  const coords = geom.coordinates;\n  const properties = options.properties ? options.properties : poly.type === \"Feature\" ? poly.properties : {};\n  return coordsToLine(coords, properties);\n}\nfunction multiPolygonToLine(multiPoly, options = {}) {\n  const geom = getGeom(multiPoly);\n  const coords = geom.coordinates;\n  const properties = options.properties ? options.properties : multiPoly.type === \"Feature\" ? multiPoly.properties : {};\n  const lines = [];\n  coords.forEach(coord => {\n    lines.push(coordsToLine(coord, properties));\n  });\n  return featureCollection(lines);\n}\nfunction coordsToLine(coords, properties) {\n  if (coords.length > 1) {\n    return multiLineString(coords, properties);\n  }\n  return lineString(coords[0], properties);\n}\nvar turf_polygon_to_line_default = polygonToLine;\nexport { coordsToLine, turf_polygon_to_line_default as default, multiPolygonToLine, polygonToLine, singlePolygonToLine };\n", "// index.ts\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { polygonToLine } from \"@turf/polygon-to-line\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { getGeom } from \"@turf/invariant\";\nimport { point } from \"@turf/helpers\";\nfunction booleanCrosses(feature1, feature2) {\n  var geom1 = getGeom(feature1);\n  var geom2 = getGeom(feature2);\n  var type1 = geom1.type;\n  var type2 = geom2.type;\n  switch (type1) {\n    case \"MultiPoint\":\n      switch (type2) {\n        case \"LineString\":\n          return doMultiPointAndLineStringCross(geom1, geom2);\n        case \"Polygon\":\n          return doesMultiPointCrossPoly(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"LineString\":\n      switch (type2) {\n        case \"MultiPoint\":\n          return doMultiPointAndLineStringCross(geom2, geom1);\n        case \"LineString\":\n          return doLineStringsCross(geom1, geom2);\n        case \"Polygon\":\n          return doLineStringAndPolygonCross(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"Polygon\":\n      switch (type2) {\n        case \"MultiPoint\":\n          return doesMultiPointCrossPoly(geom2, geom1);\n        case \"LineString\":\n          return doLineStringAndPolygonCross(geom2, geom1);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    default:\n      throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n  }\n}\nfunction doMultiPointAndLineStringCross(multiPoint, lineString) {\n  var foundIntPoint = false;\n  var foundExtPoint = false;\n  var pointLength = multiPoint.coordinates.length;\n  var i = 0;\n  while (i < pointLength && !foundIntPoint && !foundExtPoint) {\n    for (var i2 = 0; i2 < lineString.coordinates.length - 1; i2++) {\n      var incEndVertices = true;\n      if (i2 === 0 || i2 === lineString.coordinates.length - 2) {\n        incEndVertices = false;\n      }\n      if (isPointOnLineSegment(lineString.coordinates[i2], lineString.coordinates[i2 + 1], multiPoint.coordinates[i], incEndVertices)) {\n        foundIntPoint = true;\n      } else {\n        foundExtPoint = true;\n      }\n    }\n    i++;\n  }\n  return foundIntPoint && foundExtPoint;\n}\nfunction doLineStringsCross(lineString1, lineString2) {\n  var doLinesIntersect = lineIntersect(lineString1, lineString2);\n  if (doLinesIntersect.features.length > 0) {\n    for (var i = 0; i < lineString1.coordinates.length - 1; i++) {\n      for (var i2 = 0; i2 < lineString2.coordinates.length - 1; i2++) {\n        var incEndVertices = true;\n        if (i2 === 0 || i2 === lineString2.coordinates.length - 2) {\n          incEndVertices = false;\n        }\n        if (isPointOnLineSegment(lineString1.coordinates[i], lineString1.coordinates[i + 1], lineString2.coordinates[i2], incEndVertices)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction doLineStringAndPolygonCross(lineString, polygon) {\n  const line = polygonToLine(polygon);\n  const doLinesIntersect = lineIntersect(lineString, line);\n  if (doLinesIntersect.features.length > 0) {\n    return true;\n  }\n  return false;\n}\nfunction doesMultiPointCrossPoly(multiPoint, polygon) {\n  var foundIntPoint = false;\n  var foundExtPoint = false;\n  var pointLength = multiPoint.coordinates.length;\n  for (let i = 0; i < pointLength && (!foundIntPoint || !foundExtPoint); i++) {\n    if (booleanPointInPolygon(point(multiPoint.coordinates[i]), polygon)) {\n      foundIntPoint = true;\n    } else {\n      foundExtPoint = true;\n    }\n  }\n  return foundExtPoint && foundIntPoint;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, incEnd) {\n  var dxc = pt[0] - lineSegmentStart[0];\n  var dyc = pt[1] - lineSegmentStart[1];\n  var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n  var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n  var cross = dxc * dyl - dyc * dxl;\n  if (cross !== 0) {\n    return false;\n  }\n  if (incEnd) {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0] : lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n    }\n    return dyl > 0 ? lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1] : lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n  } else {\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ? lineSegmentStart[0] < pt[0] && pt[0] < lineSegmentEnd[0] : lineSegmentEnd[0] < pt[0] && pt[0] < lineSegmentStart[0];\n    }\n    return dyl > 0 ? lineSegmentStart[1] < pt[1] && pt[1] < lineSegmentEnd[1] : lineSegmentEnd[1] < pt[1] && pt[1] < lineSegmentStart[1];\n  }\n}\nvar turf_boolean_crosses_default = booleanCrosses;\nexport { booleanCrosses, turf_boolean_crosses_default as default };\n", "// index.ts\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport { polygonToLine } from \"@turf/polygon-to-line\";\nfunction booleanDisjoint(feature1, feature2, {\n  ignoreSelfIntersections = true\n} = {\n  ignoreSelfIntersections: true\n}) {\n  let bool = true;\n  flattenEach(feature1, flatten1 => {\n    flattenEach(feature2, flatten2 => {\n      if (bool === false) {\n        return false;\n      }\n      bool = disjoint(flatten1.geometry, flatten2.geometry, ignoreSelfIntersections);\n    });\n  });\n  return bool;\n}\nfunction disjoint(geom1, geom2, ignoreSelfIntersections) {\n  switch (geom1.type) {\n    case \"Point\":\n      switch (geom2.type) {\n        case \"Point\":\n          return !compareCoords(geom1.coordinates, geom2.coordinates);\n        case \"LineString\":\n          return !isPointOnLine(geom2, geom1);\n        case \"Polygon\":\n          return !booleanPointInPolygon(geom1, geom2);\n      }\n      break;\n    case \"LineString\":\n      switch (geom2.type) {\n        case \"Point\":\n          return !isPointOnLine(geom1, geom2);\n        case \"LineString\":\n          return !isLineOnLine(geom1, geom2, ignoreSelfIntersections);\n        case \"Polygon\":\n          return !isLineInPoly(geom2, geom1, ignoreSelfIntersections);\n      }\n      break;\n    case \"Polygon\":\n      switch (geom2.type) {\n        case \"Point\":\n          return !booleanPointInPolygon(geom2, geom1);\n        case \"LineString\":\n          return !isLineInPoly(geom1, geom2, ignoreSelfIntersections);\n        case \"Polygon\":\n          return !isPolyInPoly(geom2, geom1, ignoreSelfIntersections);\n      }\n  }\n  return false;\n}\nfunction isPointOnLine(lineString, pt) {\n  for (let i = 0; i < lineString.coordinates.length - 1; i++) {\n    if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isLineOnLine(lineString1, lineString2, ignoreSelfIntersections) {\n  const doLinesIntersect = lineIntersect(lineString1, lineString2, {\n    ignoreSelfIntersections\n  });\n  if (doLinesIntersect.features.length > 0) {\n    return true;\n  }\n  return false;\n}\nfunction isLineInPoly(polygon, lineString, ignoreSelfIntersections) {\n  for (const coord of lineString.coordinates) {\n    if (booleanPointInPolygon(coord, polygon)) {\n      return true;\n    }\n  }\n  const doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon), {\n    ignoreSelfIntersections\n  });\n  if (doLinesIntersect.features.length > 0) {\n    return true;\n  }\n  return false;\n}\nfunction isPolyInPoly(feature1, feature2, ignoreSelfIntersections) {\n  for (const coord1 of feature1.coordinates[0]) {\n    if (booleanPointInPolygon(coord1, feature2)) {\n      return true;\n    }\n  }\n  for (const coord2 of feature2.coordinates[0]) {\n    if (booleanPointInPolygon(coord2, feature1)) {\n      return true;\n    }\n  }\n  const doLinesIntersect = lineIntersect(polygonToLine(feature1), polygonToLine(feature2), {\n    ignoreSelfIntersections\n  });\n  if (doLinesIntersect.features.length > 0) {\n    return true;\n  }\n  return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n  const dxc = pt[0] - lineSegmentStart[0];\n  const dyc = pt[1] - lineSegmentStart[1];\n  const dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n  const dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n  const cross = dxc * dyl - dyc * dxl;\n  if (cross !== 0) {\n    return false;\n  }\n  if (Math.abs(dxl) >= Math.abs(dyl)) {\n    if (dxl > 0) {\n      return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n    } else {\n      return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n    }\n  } else if (dyl > 0) {\n    return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n  } else {\n    return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n  }\n}\nfunction compareCoords(pair1, pair2) {\n  return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nvar turf_boolean_disjoint_default = booleanDisjoint;\nexport { booleanDisjoint, turf_boolean_disjoint_default as default };\n", "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", {\n  value,\n  configurable: true\n});\n\n// index.ts\nvar _GeojsonEquality = class _GeojsonEquality {\n  constructor(opts) {\n    this.direction = false;\n    this.compareProperties = true;\n    var _a, _b, _c;\n    this.precision = 10 ** -((_a = opts == null ? void 0 : opts.precision) != null ? _a : 17);\n    this.direction = (_b = opts == null ? void 0 : opts.direction) != null ? _b : false;\n    this.compareProperties = (_c = opts == null ? void 0 : opts.compareProperties) != null ? _c : true;\n  }\n  compare(g1, g2) {\n    if (g1.type !== g2.type) {\n      return false;\n    }\n    if (!sameLength(g1, g2)) {\n      return false;\n    }\n    switch (g1.type) {\n      case \"Point\":\n        return this.compareCoord(g1.coordinates, g2.coordinates);\n      case \"LineString\":\n        return this.compareLine(g1.coordinates, g2.coordinates);\n      case \"Polygon\":\n        return this.comparePolygon(g1, g2);\n      case \"GeometryCollection\":\n        return this.compareGeometryCollection(g1, g2);\n      case \"Feature\":\n        return this.compareFeature(g1, g2);\n      case \"FeatureCollection\":\n        return this.compareFeatureCollection(g1, g2);\n      default:\n        if (g1.type.startsWith(\"Multi\")) {\n          const g1s = explode(g1);\n          const g2s = explode(g2);\n          return g1s.every(g1part => g2s.some(g2part => this.compare(g1part, g2part)));\n        }\n    }\n    return false;\n  }\n  compareCoord(c1, c2) {\n    return c1.length === c2.length && c1.every((c, i) => Math.abs(c - c2[i]) < this.precision);\n  }\n  compareLine(path1, path2, ind = 0, isPoly = false) {\n    if (!sameLength(path1, path2)) {\n      return false;\n    }\n    const p1 = path1;\n    let p2 = path2;\n    if (isPoly && !this.compareCoord(p1[0], p2[0])) {\n      const startIndex = this.fixStartIndex(p2, p1);\n      if (!startIndex) {\n        return false;\n      } else {\n        p2 = startIndex;\n      }\n    }\n    const sameDirection = this.compareCoord(p1[ind], p2[ind]);\n    if (this.direction || sameDirection) {\n      return this.comparePath(p1, p2);\n    } else {\n      if (this.compareCoord(p1[ind], p2[p2.length - (1 + ind)])) {\n        return this.comparePath(p1.slice().reverse(), p2);\n      }\n      return false;\n    }\n  }\n  fixStartIndex(sourcePath, targetPath) {\n    let correctPath,\n      ind = -1;\n    for (let i = 0; i < sourcePath.length; i++) {\n      if (this.compareCoord(sourcePath[i], targetPath[0])) {\n        ind = i;\n        break;\n      }\n    }\n    if (ind >= 0) {\n      correctPath = [].concat(sourcePath.slice(ind, sourcePath.length), sourcePath.slice(1, ind + 1));\n    }\n    return correctPath;\n  }\n  comparePath(p1, p2) {\n    return p1.every((c, i) => this.compareCoord(c, p2[i]));\n  }\n  comparePolygon(g1, g2) {\n    if (this.compareLine(g1.coordinates[0], g2.coordinates[0], 1, true)) {\n      const holes1 = g1.coordinates.slice(1, g1.coordinates.length);\n      const holes2 = g2.coordinates.slice(1, g2.coordinates.length);\n      return holes1.every(h1 => holes2.some(h2 => this.compareLine(h1, h2, 1, true)));\n    }\n    return false;\n  }\n  compareGeometryCollection(g1, g2) {\n    return sameLength(g1.geometries, g2.geometries) && this.compareBBox(g1, g2) && g1.geometries.every((g, i) => this.compare(g, g2.geometries[i]));\n  }\n  compareFeature(g1, g2) {\n    return g1.id === g2.id && (this.compareProperties ? equal(g1.properties, g2.properties) : true) && this.compareBBox(g1, g2) && this.compare(g1.geometry, g2.geometry);\n  }\n  compareFeatureCollection(g1, g2) {\n    return sameLength(g1.features, g2.features) && this.compareBBox(g1, g2) && g1.features.every((f, i) => this.compare(f, g2.features[i]));\n  }\n  compareBBox(g1, g2) {\n    return Boolean(!g1.bbox && !g2.bbox) || (g1.bbox && g2.bbox ? this.compareCoord(g1.bbox, g2.bbox) : false);\n  }\n};\n__name(_GeojsonEquality, \"GeojsonEquality\");\nvar GeojsonEquality = _GeojsonEquality;\nfunction sameLength(g1, g2) {\n  return g1.coordinates ? g1.coordinates.length === g2.coordinates.length : g1.length === g2.length;\n}\n__name(sameLength, \"sameLength\");\nfunction explode(g) {\n  return g.coordinates.map(part => ({\n    type: g.type.replace(\"Multi\", \"\"),\n    coordinates: part\n  }));\n}\n__name(explode, \"explode\");\nfunction geojsonEquality(g1, g2, opts) {\n  const eq = new GeojsonEquality(opts);\n  return eq.compare(g1, g2);\n}\n__name(geojsonEquality, \"geojsonEquality\");\nfunction equal(object1, object2) {\n  if (object1 === null && object2 === null) {\n    return true;\n  }\n  if (object1 === null || object2 === null) {\n    return false;\n  }\n  const objKeys1 = Object.keys(object1);\n  const objKeys2 = Object.keys(object2);\n  if (objKeys1.length !== objKeys2.length) return false;\n  for (var key of objKeys1) {\n    const value1 = object1[key];\n    const value2 = object2[key];\n    const isObjects = isObject(value1) && isObject(value2);\n    if (isObjects && !equal(value1, value2) || !isObjects && value1 !== value2) {\n      return false;\n    }\n  }\n  return true;\n}\n__name(equal, \"equal\");\nvar isObject = /* @__PURE__ */__name(object => {\n  return object != null && typeof object === \"object\";\n}, \"isObject\");\nvar geojson_equality_ts_default = GeojsonEquality;\nexport { GeojsonEquality, geojson_equality_ts_default as default, geojsonEquality };\n", "// index.ts\nimport { feature } from \"@turf/helpers\";\nimport { getCoords, getType } from \"@turf/invariant\";\nfunction cleanCoords(geojson, options = {}) {\n  var mutate = typeof options === \"object\" ? options.mutate : options;\n  if (!geojson) throw new Error(\"geojson is required\");\n  var type = getType(geojson);\n  var newCoords = [];\n  switch (type) {\n    case \"LineString\":\n      newCoords = cleanLine(geojson, type);\n      break;\n    case \"MultiLineString\":\n    case \"Polygon\":\n      getCoords(geojson).forEach(function (line) {\n        newCoords.push(cleanLine(line, type));\n      });\n      break;\n    case \"MultiPolygon\":\n      getCoords(geojson).forEach(function (polygons) {\n        var polyPoints = [];\n        polygons.forEach(function (ring) {\n          polyPoints.push(cleanLine(ring, type));\n        });\n        newCoords.push(polyPoints);\n      });\n      break;\n    case \"Point\":\n      return geojson;\n    case \"MultiPoint\":\n      var existing = {};\n      getCoords(geojson).forEach(function (coord) {\n        var key = coord.join(\"-\");\n        if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n          newCoords.push(coord);\n          existing[key] = true;\n        }\n      });\n      break;\n    default:\n      throw new Error(type + \" geometry not supported\");\n  }\n  if (geojson.coordinates) {\n    if (mutate === true) {\n      geojson.coordinates = newCoords;\n      return geojson;\n    }\n    return {\n      type,\n      coordinates: newCoords\n    };\n  } else {\n    if (mutate === true) {\n      geojson.geometry.coordinates = newCoords;\n      return geojson;\n    }\n    return feature({\n      type,\n      coordinates: newCoords\n    }, geojson.properties, {\n      bbox: geojson.bbox,\n      id: geojson.id\n    });\n  }\n}\nfunction cleanLine(line, type) {\n  var points = getCoords(line);\n  if (points.length === 2 && !equals(points[0], points[1])) return points;\n  var newPoints = [];\n  var secondToLast = points.length - 1;\n  var newPointsLength = newPoints.length;\n  newPoints.push(points[0]);\n  for (var i = 1; i < secondToLast; i++) {\n    var prevAddedPoint = newPoints[newPoints.length - 1];\n    if (points[i][0] === prevAddedPoint[0] && points[i][1] === prevAddedPoint[1]) continue;else {\n      newPoints.push(points[i]);\n      newPointsLength = newPoints.length;\n      if (newPointsLength > 2) {\n        if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2])) newPoints.splice(newPoints.length - 2, 1);\n      }\n    }\n  }\n  newPoints.push(points[points.length - 1]);\n  newPointsLength = newPoints.length;\n  if ((type === \"Polygon\" || type === \"MultiPolygon\") && equals(points[0], points[points.length - 1]) && newPointsLength < 4) {\n    throw new Error(\"invalid polygon\");\n  }\n  if (type === \"LineString\" && newPointsLength < 3) {\n    return newPoints;\n  }\n  if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2])) newPoints.splice(newPoints.length - 2, 1);\n  return newPoints;\n}\nfunction equals(pt1, pt2) {\n  return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\nfunction isPointOnLineSegment(start, end, point) {\n  var x = point[0],\n    y = point[1];\n  var startX = start[0],\n    startY = start[1];\n  var endX = end[0],\n    endY = end[1];\n  var dxc = x - startX;\n  var dyc = y - startY;\n  var dxl = endX - startX;\n  var dyl = endY - startY;\n  var cross = dxc * dyl - dyc * dxl;\n  if (cross !== 0) return false;else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\nvar turf_clean_coords_default = cleanCoords;\nexport { cleanCoords, turf_clean_coords_default as default };\n", "// index.ts\nimport { geojsonEquality } from \"geojson-equality-ts\";\nimport { cleanCoords } from \"@turf/clean-coords\";\nimport { getGeom } from \"@turf/invariant\";\nfunction booleanEqual(feature1, feature2, options = {}) {\n  let precision = options.precision;\n  precision = precision === void 0 || precision === null || isNaN(precision) ? 6 : precision;\n  if (typeof precision !== \"number\" || !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const type1 = getGeom(feature1).type;\n  const type2 = getGeom(feature2).type;\n  if (type1 !== type2) return false;\n  return geojsonEquality(cleanCoords(feature1), cleanCoords(feature2), {\n    precision\n  });\n}\nvar turf_boolean_equal_default = booleanEqual;\nexport { booleanEqual, turf_boolean_equal_default as default };\n", "// index.ts\nimport { booleanDisjoint } from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\nfunction booleanIntersects(feature1, feature2, {\n  ignoreSelfIntersections = true\n} = {}) {\n  let bool = false;\n  flattenEach(feature1, flatten1 => {\n    flattenEach(feature2, flatten2 => {\n      if (bool === true) {\n        return true;\n      }\n      bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry, {\n        ignoreSelfIntersections\n      });\n    });\n  });\n  return bool;\n}\nvar turf_boolean_intersects_default = booleanIntersects;\nexport { booleanIntersects, turf_boolean_intersects_default as default };\n", "// index.js\nimport rbush from \"rbush\";\nimport { featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nimport { bbox as turfBBox } from \"@turf/bbox\";\nfunction geojsonRbush(maxEntries) {\n  var tree = new rbush(maxEntries);\n  tree.insert = function (feature) {\n    if (feature.type !== \"Feature\") throw new Error(\"invalid feature\");\n    feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n    return rbush.prototype.insert.call(this, feature);\n  };\n  tree.load = function (features) {\n    var load = [];\n    if (Array.isArray(features)) {\n      features.forEach(function (feature) {\n        if (feature.type !== \"Feature\") throw new Error(\"invalid features\");\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        load.push(feature);\n      });\n    } else {\n      featureEach(features, function (feature) {\n        if (feature.type !== \"Feature\") throw new Error(\"invalid features\");\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        load.push(feature);\n      });\n    }\n    return rbush.prototype.load.call(this, load);\n  };\n  tree.remove = function (feature, equals) {\n    if (feature.type !== \"Feature\") throw new Error(\"invalid feature\");\n    feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n    return rbush.prototype.remove.call(this, feature, equals);\n  };\n  tree.clear = function () {\n    return rbush.prototype.clear.call(this);\n  };\n  tree.search = function (geojson) {\n    var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n    return featureCollection(features);\n  };\n  tree.collides = function (geojson) {\n    return rbush.prototype.collides.call(this, this.toBBox(geojson));\n  };\n  tree.all = function () {\n    var features = rbush.prototype.all.call(this);\n    return featureCollection(features);\n  };\n  tree.toJSON = function () {\n    return rbush.prototype.toJSON.call(this);\n  };\n  tree.fromJSON = function (json) {\n    return rbush.prototype.fromJSON.call(this, json);\n  };\n  tree.toBBox = function (geojson) {\n    var bbox;\n    if (geojson.bbox) bbox = geojson.bbox;else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];else if (geojson.type === \"Feature\") bbox = turfBBox(geojson);else if (geojson.type === \"FeatureCollection\") bbox = turfBBox(geojson);else throw new Error(\"invalid geojson\");\n    return {\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3]\n    };\n  };\n  return tree;\n}\nvar turf_geojson_rbush_default = geojsonRbush;\nexport { turf_geojson_rbush_default as default, geojsonRbush };\n", "// index.ts\nimport { featureCollection, lineString } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nfunction lineSegment(geojson) {\n  if (!geojson) {\n    throw new Error(\"geojson is required\");\n  }\n  const results = [];\n  flattenEach(geojson, feature => {\n    lineSegmentFeature(feature, results);\n  });\n  return featureCollection(results);\n}\nfunction lineSegmentFeature(geojson, results) {\n  let coords = [];\n  const geometry = geojson.geometry;\n  if (geometry !== null) {\n    switch (geometry.type) {\n      case \"Polygon\":\n        coords = getCoords(geometry);\n        break;\n      case \"LineString\":\n        coords = [getCoords(geometry)];\n    }\n    coords.forEach(coord => {\n      const segments = createSegments(coord, geojson.properties);\n      segments.forEach(segment => {\n        segment.id = results.length;\n        results.push(segment);\n      });\n    });\n  }\n}\nfunction createSegments(coords, properties) {\n  const segments = [];\n  coords.reduce((previousCoords, currentCoords) => {\n    const segment = lineString([previousCoords, currentCoords], properties);\n    segment.bbox = bbox(previousCoords, currentCoords);\n    segments.push(segment);\n    return currentCoords;\n  });\n  return segments;\n}\nfunction bbox(coords1, coords2) {\n  const x1 = coords1[0];\n  const y1 = coords1[1];\n  const x2 = coords2[0];\n  const y2 = coords2[1];\n  const west = x1 < x2 ? x1 : x2;\n  const south = y1 < y2 ? y1 : y2;\n  const east = x1 > x2 ? x1 : x2;\n  const north = y1 > y2 ? y1 : y2;\n  return [west, south, east, north];\n}\nvar turf_line_segment_default = lineSegment;\nexport { turf_line_segment_default as default, lineSegment };\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// index.ts\nimport { distance } from \"@turf/distance\";\nimport { flattenEach } from \"@turf/meta\";\nimport { point, degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord, getCoords } from \"@turf/invariant\";\nfunction nearestPointOnLine(lines, pt, options = {}) {\n  if (!lines || !pt) {\n    throw new Error(\"lines and pt are required arguments\");\n  }\n  const ptPos = getCoord(pt);\n  let closestPt = point([Infinity, Infinity], {\n    dist: Infinity,\n    index: -1,\n    multiFeatureIndex: -1,\n    location: -1\n  });\n  let length = 0;\n  flattenEach(lines, function (line, _featureIndex, multiFeatureIndex) {\n    const coords = getCoords(line);\n    for (let i = 0; i < coords.length - 1; i++) {\n      const start = point(coords[i]);\n      start.properties.dist = distance(pt, start, options);\n      const startPos = getCoord(start);\n      const stop = point(coords[i + 1]);\n      stop.properties.dist = distance(pt, stop, options);\n      const stopPos = getCoord(stop);\n      const sectionLength = distance(start, stop, options);\n      let intersectPos;\n      let wasEnd;\n      if (startPos[0] === ptPos[0] && startPos[1] === ptPos[1]) {\n        [intersectPos,, wasEnd] = [startPos, void 0, false];\n      } else if (stopPos[0] === ptPos[0] && stopPos[1] === ptPos[1]) {\n        [intersectPos,, wasEnd] = [stopPos, void 0, true];\n      } else {\n        [intersectPos,, wasEnd] = nearestPointOnSegment(start.geometry.coordinates, stop.geometry.coordinates, getCoord(pt));\n      }\n      let intersectPt;\n      if (intersectPos) {\n        intersectPt = point(intersectPos, {\n          dist: distance(pt, intersectPos, options),\n          multiFeatureIndex,\n          location: length + distance(start, intersectPos, options)\n        });\n      }\n      if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n        closestPt = __spreadProps(__spreadValues({}, intersectPt), {\n          properties: __spreadProps(__spreadValues({}, intersectPt.properties), {\n            // Legacy behaviour where index progresses to next segment # if we\n            // went with the end point this iteration.\n            index: wasEnd ? i + 1 : i\n          })\n        });\n      }\n      length += sectionLength;\n    }\n  });\n  return closestPt;\n}\nfunction dot(v1, v2) {\n  const [v1x, v1y, v1z] = v1;\n  const [v2x, v2y, v2z] = v2;\n  return v1x * v2x + v1y * v2y + v1z * v2z;\n}\nfunction cross(v1, v2) {\n  const [v1x, v1y, v1z] = v1;\n  const [v2x, v2y, v2z] = v2;\n  return [v1y * v2z - v1z * v2y, v1z * v2x - v1x * v2z, v1x * v2y - v1y * v2x];\n}\nfunction magnitude(v) {\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2) + Math.pow(v[2], 2));\n}\nfunction angle(v1, v2) {\n  const theta = dot(v1, v2) / (magnitude(v1) * magnitude(v2));\n  return Math.acos(Math.min(Math.max(theta, -1), 1));\n}\nfunction lngLatToVector(a) {\n  const lat = degreesToRadians(a[1]);\n  const lng = degreesToRadians(a[0]);\n  return [Math.cos(lat) * Math.cos(lng), Math.cos(lat) * Math.sin(lng), Math.sin(lat)];\n}\nfunction vectorToLngLat(v) {\n  const [x, y, z] = v;\n  const lat = radiansToDegrees(Math.asin(z));\n  const lng = radiansToDegrees(Math.atan2(y, x));\n  return [lng, lat];\n}\nfunction nearestPointOnSegment(posA, posB, posC) {\n  const A = lngLatToVector(posA);\n  const B = lngLatToVector(posB);\n  const C = lngLatToVector(posC);\n  const [Cx, Cy, Cz] = C;\n  const [D, E, F] = cross(A, B);\n  const a = E * Cz - F * Cy;\n  const b = F * Cx - D * Cz;\n  const c = D * Cy - E * Cx;\n  const f = c * E - b * F;\n  const g = a * F - c * D;\n  const h = b * D - a * E;\n  const t = 1 / Math.sqrt(Math.pow(f, 2) + Math.pow(g, 2) + Math.pow(h, 2));\n  const I1 = [f * t, g * t, h * t];\n  const I2 = [-1 * f * t, -1 * g * t, -1 * h * t];\n  const angleAB = angle(A, B);\n  const angleAI1 = angle(A, I1);\n  const angleBI1 = angle(B, I1);\n  const angleAI2 = angle(A, I2);\n  const angleBI2 = angle(B, I2);\n  let I;\n  if (angleAI1 < angleAI2 && angleAI1 < angleBI2 || angleBI1 < angleAI2 && angleBI1 < angleBI2) {\n    I = I1;\n  } else {\n    I = I2;\n  }\n  if (angle(A, I) > angleAB || angle(B, I) > angleAB) {\n    if (distance(vectorToLngLat(I), vectorToLngLat(A)) <= distance(vectorToLngLat(I), vectorToLngLat(B))) {\n      return [vectorToLngLat(A), true, false];\n    } else {\n      return [vectorToLngLat(B), false, true];\n    }\n  }\n  return [vectorToLngLat(I), false, false];\n}\nvar turf_nearest_point_on_line_default = nearestPointOnLine;\nexport { turf_nearest_point_on_line_default as default, nearestPointOnLine };\n", "// index.ts\nimport { geojsonRbush as rbush } from \"@turf/geojson-rbush\";\nimport { lineSegment } from \"@turf/line-segment\";\nimport { nearestPointOnLine } from \"@turf/nearest-point-on-line\";\nimport { booleanPointOnLine } from \"@turf/boolean-point-on-line\";\nimport { getCoords } from \"@turf/invariant\";\nimport { featureEach, segmentEach } from \"@turf/meta\";\nimport { featureCollection, isObject } from \"@turf/helpers\";\nimport equal from \"fast-deep-equal\";\nfunction lineOverlap(line1, line2, options = {}) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var tolerance = options.tolerance || 0;\n  var features = [];\n  var tree = rbush();\n  const line = lineSegment(line1);\n  tree.load(line);\n  var overlapSegment;\n  let additionalSegments = [];\n  segmentEach(line2, function (segment) {\n    var doesOverlaps = false;\n    if (!segment) {\n      return;\n    }\n    featureEach(tree.search(segment), function (match) {\n      if (doesOverlaps === false) {\n        var coordsSegment = getCoords(segment).sort();\n        var coordsMatch = getCoords(match).sort();\n        if (equal(coordsSegment, coordsMatch)) {\n          doesOverlaps = true;\n          if (overlapSegment) {\n            overlapSegment = concatSegment(overlapSegment, segment) || overlapSegment;\n          } else overlapSegment = segment;\n        } else if (tolerance === 0 ? booleanPointOnLine(coordsSegment[0], match) && booleanPointOnLine(coordsSegment[1], match) : nearestPointOnLine(match, coordsSegment[0]).properties.dist <= tolerance && nearestPointOnLine(match, coordsSegment[1]).properties.dist <= tolerance) {\n          doesOverlaps = true;\n          if (overlapSegment) {\n            overlapSegment = concatSegment(overlapSegment, segment) || overlapSegment;\n          } else overlapSegment = segment;\n        } else if (tolerance === 0 ? booleanPointOnLine(coordsMatch[0], segment) && booleanPointOnLine(coordsMatch[1], segment) : nearestPointOnLine(segment, coordsMatch[0]).properties.dist <= tolerance && nearestPointOnLine(segment, coordsMatch[1]).properties.dist <= tolerance) {\n          if (overlapSegment) {\n            const combinedSegment = concatSegment(overlapSegment, match);\n            if (combinedSegment) {\n              overlapSegment = combinedSegment;\n            } else {\n              additionalSegments.push(match);\n            }\n          } else overlapSegment = match;\n        }\n      }\n    });\n    if (doesOverlaps === false && overlapSegment) {\n      features.push(overlapSegment);\n      if (additionalSegments.length) {\n        features = features.concat(additionalSegments);\n        additionalSegments = [];\n      }\n      overlapSegment = void 0;\n    }\n  });\n  if (overlapSegment) features.push(overlapSegment);\n  return featureCollection(features);\n}\nfunction concatSegment(line, segment) {\n  var coords = getCoords(segment);\n  var lineCoords = getCoords(line);\n  var start = lineCoords[0];\n  var end = lineCoords[lineCoords.length - 1];\n  var geom = line.geometry.coordinates;\n  if (equal(coords[0], start)) geom.unshift(coords[1]);else if (equal(coords[0], end)) geom.push(coords[1]);else if (equal(coords[1], start)) geom.unshift(coords[0]);else if (equal(coords[1], end)) geom.push(coords[0]);else return;\n  return line;\n}\nvar turf_line_overlap_default = lineOverlap;\nexport { turf_line_overlap_default as default, lineOverlap };\n", "// index.ts\nimport { segmentEach } from \"@turf/meta\";\nimport { getGeom } from \"@turf/invariant\";\nimport { lineOverlap } from \"@turf/line-overlap\";\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { geojsonEquality } from \"geojson-equality-ts\";\nfunction booleanOverlap(feature1, feature2) {\n  const geom1 = getGeom(feature1);\n  const geom2 = getGeom(feature2);\n  const type1 = geom1.type;\n  const type2 = geom2.type;\n  if (type1 === \"MultiPoint\" && type2 !== \"MultiPoint\" || (type1 === \"LineString\" || type1 === \"MultiLineString\") && type2 !== \"LineString\" && type2 !== \"MultiLineString\" || (type1 === \"Polygon\" || type1 === \"MultiPolygon\") && type2 !== \"Polygon\" && type2 !== \"MultiPolygon\") {\n    throw new Error(\"features must be of the same type\");\n  }\n  if (type1 === \"Point\") throw new Error(\"Point geometry not supported\");\n  if (geojsonEquality(feature1, feature2, {\n    precision: 6\n  })) return false;\n  let overlap = 0;\n  switch (type1) {\n    case \"MultiPoint\":\n      for (var i = 0; i < geom1.coordinates.length; i++) {\n        for (var j = 0; j < geom2.coordinates.length; j++) {\n          var coord1 = geom1.coordinates[i];\n          var coord2 = geom2.coordinates[j];\n          if (coord1[0] === coord2[0] && coord1[1] === coord2[1]) {\n            return true;\n          }\n        }\n      }\n      return false;\n    case \"LineString\":\n    case \"MultiLineString\":\n      segmentEach(feature1, segment1 => {\n        segmentEach(feature2, segment2 => {\n          if (lineOverlap(segment1, segment2).features.length) overlap++;\n        });\n      });\n      break;\n    case \"Polygon\":\n    case \"MultiPolygon\":\n      segmentEach(feature1, segment1 => {\n        segmentEach(feature2, segment2 => {\n          if (lineIntersect(segment1, segment2).features.length) overlap++;\n        });\n      });\n      break;\n  }\n  return overlap > 0;\n}\nvar turf_boolean_overlap_default = booleanOverlap;\nexport { booleanOverlap, turf_boolean_overlap_default as default };\n", "// index.ts\nimport { cleanCoords } from \"@turf/clean-coords\";\nimport { lineSegment } from \"@turf/line-segment\";\nimport { rhumbBearing } from \"@turf/rhumb-bearing\";\nimport { bearingToAzimuth } from \"@turf/helpers\";\nfunction booleanParallel(line1, line2) {\n  if (!line1) throw new Error(\"line1 is required\");\n  if (!line2) throw new Error(\"line2 is required\");\n  var type1 = getType(line1, \"line1\");\n  if (type1 !== \"LineString\") throw new Error(\"line1 must be a LineString\");\n  var type2 = getType(line2, \"line2\");\n  if (type2 !== \"LineString\") throw new Error(\"line2 must be a LineString\");\n  var segments1 = lineSegment(cleanCoords(line1)).features;\n  var segments2 = lineSegment(cleanCoords(line2)).features;\n  for (var i = 0; i < segments1.length; i++) {\n    var segment1 = segments1[i].geometry.coordinates;\n    if (!segments2[i]) break;\n    var segment2 = segments2[i].geometry.coordinates;\n    if (!isParallel(segment1, segment2)) return false;\n  }\n  return true;\n}\nfunction isParallel(segment1, segment2) {\n  var slope1 = bearingToAzimuth(rhumbBearing(segment1[0], segment1[1]));\n  var slope2 = bearingToAzimuth(rhumbBearing(segment2[0], segment2[1]));\n  return slope1 === slope2 || (slope2 - slope1) % 180 === 0;\n}\nfunction getType(geojson, name) {\n  if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n  if (geojson.type) return geojson.type;\n  throw new Error(\"Invalid GeoJSON object for \" + name);\n}\nvar turf_boolean_parallel_default = booleanParallel;\nexport { booleanParallel, turf_boolean_parallel_default as default };\n", "// index.ts\nimport { booleanPointOnLine } from \"@turf/boolean-point-on-line\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { getGeom } from \"@turf/invariant\";\nfunction booleanTouches(feature1, feature2) {\n  var geom1 = getGeom(feature1);\n  var geom2 = getGeom(feature2);\n  var type1 = geom1.type;\n  var type2 = geom2.type;\n  switch (type1) {\n    case \"Point\":\n      switch (type2) {\n        case \"LineString\":\n          return isPointOnLineEnd(geom1, geom2);\n        case \"MultiLineString\":\n          var foundTouchingPoint = false;\n          for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n            if (isPointOnLineEnd(geom1, {\n              type: \"LineString\",\n              coordinates: geom2.coordinates[ii]\n            })) foundTouchingPoint = true;\n          }\n          return foundTouchingPoint;\n        case \"Polygon\":\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            if (booleanPointOnLine(geom1, {\n              type: \"LineString\",\n              coordinates: geom2.coordinates[i]\n            })) return true;\n          }\n          return false;\n        case \"MultiPolygon\":\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates[i].length; ii++) {\n              if (booleanPointOnLine(geom1, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[i][ii]\n              })) return true;\n            }\n          }\n          return false;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiPoint\":\n      switch (type2) {\n        case \"LineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (isPointOnLineEnd({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i]\n              }, geom2)) foundTouchingPoint = true;\n            }\n            if (booleanPointOnLine({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i]\n            }, geom2, {\n              ignoreEndVertices: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"MultiLineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (isPointOnLineEnd({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[i]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[ii]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                ignoreEndVertices: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"Polygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[0]\n              })) foundTouchingPoint = true;\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i]\n            }, geom2, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"MultiPolygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[i]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[ii][0]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i]\n              }, {\n                type: \"Polygon\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"LineString\":\n      switch (type2) {\n        case \"Point\":\n          return isPointOnLineEnd(geom2, geom1);\n        case \"MultiPoint\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (isPointOnLineEnd({\n                type: \"Point\",\n                coordinates: geom2.coordinates[i]\n              }, geom1)) foundTouchingPoint = true;\n            }\n            if (booleanPointOnLine({\n              type: \"Point\",\n              coordinates: geom2.coordinates[i]\n            }, geom1, {\n              ignoreEndVertices: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"LineString\":\n          var endMatch = false;\n          if (isPointOnLineEnd({\n            type: \"Point\",\n            coordinates: geom1.coordinates[0]\n          }, geom2)) endMatch = true;\n          if (isPointOnLineEnd({\n            type: \"Point\",\n            coordinates: geom1.coordinates[geom1.coordinates.length - 1]\n          }, geom2)) endMatch = true;\n          if (endMatch === false) return false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (booleanPointOnLine({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i]\n            }, geom2, {\n              ignoreEndVertices: true\n            })) return false;\n          }\n          return endMatch;\n        case \"MultiLineString\":\n          var endMatch = false;\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            if (isPointOnLineEnd({\n              type: \"Point\",\n              coordinates: geom1.coordinates[0]\n            }, {\n              type: \"LineString\",\n              coordinates: geom2.coordinates[i]\n            })) endMatch = true;\n            if (isPointOnLineEnd({\n              type: \"Point\",\n              coordinates: geom1.coordinates[geom1.coordinates.length - 1]\n            }, {\n              type: \"LineString\",\n              coordinates: geom2.coordinates[i]\n            })) endMatch = true;\n            for (var ii = 0; ii < geom1.coordinates[i].length; ii++) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom1.coordinates[ii]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[i]\n              }, {\n                ignoreEndVertices: true\n              })) return false;\n            }\n          }\n          return endMatch;\n        case \"Polygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[0]\n              })) foundTouchingPoint = true;\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i]\n            }, geom2, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"MultiPolygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[i]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[ii][0]\n                })) foundTouchingPoint = true;\n              }\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i]\n            }, geom2, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiLineString\":\n      switch (type2) {\n        case \"Point\":\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (isPointOnLineEnd(geom2, {\n              type: \"LineString\",\n              coordinates: geom1.coordinates[i]\n            })) return true;\n          }\n          return false;\n        case \"MultiPoint\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (isPointOnLineEnd({\n                  type: \"Point\",\n                  coordinates: geom2.coordinates[ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom1.coordinates[ii]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                type: \"LineString\",\n                coordinates: geom1.coordinates[ii]\n              }, {\n                ignoreEndVertices: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"LineString\":\n          var endMatch = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (isPointOnLineEnd({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i][0]\n            }, geom2)) endMatch = true;\n            if (isPointOnLineEnd({\n              type: \"Point\",\n              coordinates: geom1.coordinates[i][geom1.coordinates[i].length - 1]\n            }, geom2)) endMatch = true;\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                type: \"LineString\",\n                coordinates: geom1.coordinates[i]\n              }, {\n                ignoreEndVertices: true\n              })) return false;\n            }\n          }\n          return endMatch;\n        case \"MultiLineString\":\n          var endMatch = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (isPointOnLineEnd({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i][0]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[ii]\n              })) endMatch = true;\n              if (isPointOnLineEnd({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i][geom1.coordinates[i].length - 1]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[ii]\n              })) endMatch = true;\n              for (var iii = 0; iii < geom1.coordinates[i].length; iii++) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[i][iii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[ii]\n                }, {\n                  ignoreEndVertices: true\n                })) return false;\n              }\n            }\n          }\n          return endMatch;\n        case \"Polygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom1.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[i][ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[0]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom1.coordinates[i][ii]\n              }, geom2, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"MultiPolygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom1.coordinates.length; ii++) {\n              for (var iii = 0; iii < geom1.coordinates[ii].length; iii++) {\n                if (!foundTouchingPoint) {\n                  if (booleanPointOnLine({\n                    type: \"Point\",\n                    coordinates: geom1.coordinates[ii][iii]\n                  }, {\n                    type: \"LineString\",\n                    coordinates: geom2.coordinates[0][i]\n                  })) foundTouchingPoint = true;\n                }\n                if (booleanPointInPolygon({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[ii][iii]\n                }, {\n                  type: \"Polygon\",\n                  coordinates: [geom2.coordinates[0][i]]\n                }, {\n                  ignoreBoundary: true\n                })) return false;\n              }\n            }\n          }\n          return foundTouchingPoint;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"Polygon\":\n      switch (type2) {\n        case \"Point\":\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            if (booleanPointOnLine(geom2, {\n              type: \"LineString\",\n              coordinates: geom1.coordinates[i]\n            })) return true;\n          }\n          return false;\n        case \"MultiPoint\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom2.coordinates[i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom1.coordinates[0]\n              })) foundTouchingPoint = true;\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom2.coordinates[i]\n            }, geom1, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"LineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            if (!foundTouchingPoint) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom2.coordinates[i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom1.coordinates[0]\n              })) foundTouchingPoint = true;\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom2.coordinates[i]\n            }, geom1, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"MultiLineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates[i].length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom2.coordinates[i][ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom1.coordinates[0]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom2.coordinates[i][ii]\n              }, geom1, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"Polygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            if (!foundTouchingPoint) {\n              if (booleanPointOnLine({\n                type: \"Point\",\n                coordinates: geom1.coordinates[0][i]\n              }, {\n                type: \"LineString\",\n                coordinates: geom2.coordinates[0]\n              })) foundTouchingPoint = true;\n            }\n            if (booleanPointInPolygon({\n              type: \"Point\",\n              coordinates: geom1.coordinates[0][i]\n            }, geom2, {\n              ignoreBoundary: true\n            })) return false;\n          }\n          return foundTouchingPoint;\n        case \"MultiPolygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom2.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom1.coordinates[0].length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[0][ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[0][i]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom1.coordinates[0][ii]\n              }, {\n                type: \"Polygon\",\n                coordinates: geom2.coordinates[0][i]\n              }, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiPolygon\":\n      switch (type2) {\n        case \"Point\":\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            if (booleanPointOnLine(geom2, {\n              type: \"LineString\",\n              coordinates: geom1.coordinates[0][i]\n            })) return true;\n          }\n          return false;\n        case \"MultiPoint\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom2.coordinates[ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom1.coordinates[0][i]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                type: \"Polygon\",\n                coordinates: geom1.coordinates[0][i]\n              }, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"LineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom2.coordinates[ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom1.coordinates[0][i]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom2.coordinates[ii]\n              }, {\n                type: \"Polygon\",\n                coordinates: geom1.coordinates[0][i]\n              }, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"MultiLineString\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates.length; i++) {\n            for (var ii = 0; ii < geom2.coordinates.length; ii++) {\n              for (var iii = 0; iii < geom2.coordinates[ii].length; iii++) {\n                if (!foundTouchingPoint) {\n                  if (booleanPointOnLine({\n                    type: \"Point\",\n                    coordinates: geom2.coordinates[ii][iii]\n                  }, {\n                    type: \"LineString\",\n                    coordinates: geom1.coordinates[i][0]\n                  })) foundTouchingPoint = true;\n                }\n                if (booleanPointInPolygon({\n                  type: \"Point\",\n                  coordinates: geom2.coordinates[ii][iii]\n                }, {\n                  type: \"Polygon\",\n                  coordinates: [geom1.coordinates[i][0]]\n                }, {\n                  ignoreBoundary: true\n                })) return false;\n              }\n            }\n          }\n          return foundTouchingPoint;\n        case \"Polygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom1.coordinates[0][i].length; ii++) {\n              if (!foundTouchingPoint) {\n                if (booleanPointOnLine({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[0][i][ii]\n                }, {\n                  type: \"LineString\",\n                  coordinates: geom2.coordinates[0]\n                })) foundTouchingPoint = true;\n              }\n              if (booleanPointInPolygon({\n                type: \"Point\",\n                coordinates: geom1.coordinates[0][i][ii]\n              }, geom2, {\n                ignoreBoundary: true\n              })) return false;\n            }\n          }\n          return foundTouchingPoint;\n        case \"MultiPolygon\":\n          var foundTouchingPoint = false;\n          for (var i = 0; i < geom1.coordinates[0].length; i++) {\n            for (var ii = 0; ii < geom2.coordinates[0].length; ii++) {\n              for (var iii = 0; iii < geom1.coordinates[0].length; iii++) {\n                if (!foundTouchingPoint) {\n                  if (booleanPointOnLine({\n                    type: \"Point\",\n                    coordinates: geom1.coordinates[0][i][iii]\n                  }, {\n                    type: \"LineString\",\n                    coordinates: geom2.coordinates[0][ii]\n                  })) foundTouchingPoint = true;\n                }\n                if (booleanPointInPolygon({\n                  type: \"Point\",\n                  coordinates: geom1.coordinates[0][i][iii]\n                }, {\n                  type: \"Polygon\",\n                  coordinates: geom2.coordinates[0][ii]\n                }, {\n                  ignoreBoundary: true\n                })) return false;\n              }\n            }\n          }\n          return foundTouchingPoint;\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    default:\n      throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n  }\n}\nfunction isPointOnLineEnd(point, line) {\n  if (compareCoords(line.coordinates[0], point.coordinates)) return true;\n  if (compareCoords(line.coordinates[line.coordinates.length - 1], point.coordinates)) return true;\n  return false;\n}\nfunction compareCoords(pair1, pair2) {\n  return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nvar turf_boolean_touches_default = booleanTouches;\nexport { booleanTouches, turf_boolean_touches_default as default };\n", "// index.ts\nimport { getGeom } from \"@turf/invariant\";\nimport { polygon, lineString } from \"@turf/helpers\";\nimport { booleanDisjoint } from \"@turf/boolean-disjoint\";\nimport { booleanCrosses } from \"@turf/boolean-crosses\";\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { booleanPointOnLine as isPointOnLine } from \"@turf/boolean-point-on-line\";\nfunction booleanValid(feature) {\n  if (!feature.type) return false;\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const coords = geom.coordinates;\n  switch (type) {\n    case \"Point\":\n      return coords.length > 1;\n    case \"MultiPoint\":\n      for (var i = 0; i < coords.length; i++) {\n        if (coords[i].length < 2) return false;\n      }\n      return true;\n    case \"LineString\":\n      if (coords.length < 2) return false;\n      for (var i = 0; i < coords.length; i++) {\n        if (coords[i].length < 2) return false;\n      }\n      return true;\n    case \"MultiLineString\":\n      if (coords.length < 2) return false;\n      for (var i = 0; i < coords.length; i++) {\n        if (coords[i].length < 2) return false;\n      }\n      return true;\n    case \"Polygon\":\n      for (var i = 0; i < geom.coordinates.length; i++) {\n        if (coords[i].length < 4) return false;\n        if (!checkRingsClose(coords[i])) return false;\n        if (checkRingsForSpikesPunctures(coords[i])) return false;\n        if (i > 0) {\n          if (lineIntersect(polygon([coords[0]]), polygon([coords[i]])).features.length > 1) return false;\n        }\n      }\n      return true;\n    case \"MultiPolygon\":\n      for (var i = 0; i < geom.coordinates.length; i++) {\n        var poly = geom.coordinates[i];\n        for (var ii = 0; ii < poly.length; ii++) {\n          if (poly[ii].length < 4) return false;\n          if (!checkRingsClose(poly[ii])) return false;\n          if (checkRingsForSpikesPunctures(poly[ii])) return false;\n          if (ii === 0) {\n            if (!checkPolygonAgainstOthers(poly, geom.coordinates, i)) return false;\n          }\n          if (ii > 0) {\n            if (lineIntersect(polygon([poly[0]]), polygon([poly[ii]])).features.length > 1) return false;\n          }\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\nfunction checkRingsClose(geom) {\n  return geom[0][0] === geom[geom.length - 1][0] && geom[0][1] === geom[geom.length - 1][1];\n}\nfunction checkRingsForSpikesPunctures(geom) {\n  for (var i = 0; i < geom.length - 1; i++) {\n    var point = geom[i];\n    for (var ii = i + 1; ii < geom.length - 2; ii++) {\n      var seg = [geom[ii], geom[ii + 1]];\n      if (isPointOnLine(point, lineString(seg))) return true;\n    }\n  }\n  return false;\n}\nfunction checkPolygonAgainstOthers(poly, geom, index) {\n  var polyToCheck = polygon(poly);\n  for (var i = index + 1; i < geom.length; i++) {\n    if (!booleanDisjoint(polyToCheck, polygon(geom[i]))) {\n      if (booleanCrosses(polyToCheck, lineString(geom[i][0]))) return false;\n    }\n  }\n  return true;\n}\nvar turf_boolean_valid_default = booleanValid;\nexport { booleanValid, turf_boolean_valid_default as default };\n", "// index.ts\nimport { bbox as calcBbox } from \"@turf/bbox\";\nimport { booleanPointOnLine } from \"@turf/boolean-point-on-line\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { getGeom } from \"@turf/invariant\";\nfunction booleanWithin(feature1, feature2) {\n  var geom1 = getGeom(feature1);\n  var geom2 = getGeom(feature2);\n  var type1 = geom1.type;\n  var type2 = geom2.type;\n  switch (type1) {\n    case \"Point\":\n      switch (type2) {\n        case \"MultiPoint\":\n          return isPointInMultiPoint(geom1, geom2);\n        case \"LineString\":\n          return booleanPointOnLine(geom1, geom2, {\n            ignoreEndVertices: true\n          });\n        case \"Polygon\":\n        case \"MultiPolygon\":\n          return booleanPointInPolygon(geom1, geom2, {\n            ignoreBoundary: true\n          });\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"MultiPoint\":\n      switch (type2) {\n        case \"MultiPoint\":\n          return isMultiPointInMultiPoint(geom1, geom2);\n        case \"LineString\":\n          return isMultiPointOnLine(geom1, geom2);\n        case \"Polygon\":\n        case \"MultiPolygon\":\n          return isMultiPointInPoly(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"LineString\":\n      switch (type2) {\n        case \"LineString\":\n          return isLineOnLine(geom1, geom2);\n        case \"Polygon\":\n        case \"MultiPolygon\":\n          return isLineInPoly(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    case \"Polygon\":\n      switch (type2) {\n        case \"Polygon\":\n        case \"MultiPolygon\":\n          return isPolyInPoly(geom1, geom2);\n        default:\n          throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n      }\n    default:\n      throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n  }\n}\nfunction isPointInMultiPoint(point, multiPoint) {\n  var i;\n  var output = false;\n  for (i = 0; i < multiPoint.coordinates.length; i++) {\n    if (compareCoords(multiPoint.coordinates[i], point.coordinates)) {\n      output = true;\n      break;\n    }\n  }\n  return output;\n}\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n  for (var i = 0; i < multiPoint1.coordinates.length; i++) {\n    var anyMatch = false;\n    for (var i2 = 0; i2 < multiPoint2.coordinates.length; i2++) {\n      if (compareCoords(multiPoint1.coordinates[i], multiPoint2.coordinates[i2])) {\n        anyMatch = true;\n      }\n    }\n    if (!anyMatch) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isMultiPointOnLine(multiPoint, lineString) {\n  var foundInsidePoint = false;\n  for (var i = 0; i < multiPoint.coordinates.length; i++) {\n    if (!booleanPointOnLine(multiPoint.coordinates[i], lineString)) {\n      return false;\n    }\n    if (!foundInsidePoint) {\n      foundInsidePoint = booleanPointOnLine(multiPoint.coordinates[i], lineString, {\n        ignoreEndVertices: true\n      });\n    }\n  }\n  return foundInsidePoint;\n}\nfunction isMultiPointInPoly(multiPoint, polygon) {\n  var output = true;\n  var oneInside = false;\n  var isInside = false;\n  for (var i = 0; i < multiPoint.coordinates.length; i++) {\n    isInside = booleanPointInPolygon(multiPoint.coordinates[i], polygon);\n    if (!isInside) {\n      output = false;\n      break;\n    }\n    if (!oneInside) {\n      isInside = booleanPointInPolygon(multiPoint.coordinates[i], polygon, {\n        ignoreBoundary: true\n      });\n    }\n  }\n  return output && isInside;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n  for (var i = 0; i < lineString1.coordinates.length; i++) {\n    if (!booleanPointOnLine(lineString1.coordinates[i], lineString2)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isLineInPoly(linestring, polygon) {\n  var polyBbox = calcBbox(polygon);\n  var lineBbox = calcBbox(linestring);\n  if (!doBBoxOverlap(polyBbox, lineBbox)) {\n    return false;\n  }\n  var foundInsidePoint = false;\n  for (var i = 0; i < linestring.coordinates.length; i++) {\n    if (!booleanPointInPolygon(linestring.coordinates[i], polygon)) {\n      return false;\n    }\n    if (!foundInsidePoint) {\n      foundInsidePoint = booleanPointInPolygon(linestring.coordinates[i], polygon, {\n        ignoreBoundary: true\n      });\n    }\n    if (!foundInsidePoint && i < linestring.coordinates.length - 1) {\n      var midpoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n      foundInsidePoint = booleanPointInPolygon(midpoint, polygon, {\n        ignoreBoundary: true\n      });\n    }\n  }\n  return foundInsidePoint;\n}\nfunction isPolyInPoly(geometry1, geometry2) {\n  var poly1Bbox = calcBbox(geometry1);\n  var poly2Bbox = calcBbox(geometry2);\n  if (!doBBoxOverlap(poly2Bbox, poly1Bbox)) {\n    return false;\n  }\n  for (var i = 0; i < geometry1.coordinates[0].length; i++) {\n    if (!booleanPointInPolygon(geometry1.coordinates[0][i], geometry2)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction doBBoxOverlap(bbox1, bbox2) {\n  if (bbox1[0] > bbox2[0]) return false;\n  if (bbox1[2] < bbox2[2]) return false;\n  if (bbox1[1] > bbox2[1]) return false;\n  if (bbox1[3] < bbox2[3]) return false;\n  return true;\n}\nfunction compareCoords(pair1, pair2) {\n  return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nfunction getMidpoint(pair1, pair2) {\n  return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\nvar turf_boolean_within_default = booleanWithin;\nexport { booleanWithin, turf_boolean_within_default as default };\n", "// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { point } from \"@turf/helpers\";\nfunction center(geojson, options = {}) {\n  const ext = bbox(geojson);\n  const x = (ext[0] + ext[2]) / 2;\n  const y = (ext[1] + ext[3]) / 2;\n  return point([x, y], options.properties, options);\n}\nvar turf_center_default = center;\nexport { center, turf_center_default as default };\n", "// index.js\nimport { center } from \"@turf/center\";\nimport jsts from \"@turf/jsts\";\nimport { geomEach, featureEach } from \"@turf/meta\";\nimport { geoAzimuthalEquidistant } from \"d3-geo\";\nimport { feature, featureCollection, radiansToLength, lengthToRadians, earthRadius } from \"@turf/helpers\";\nvar {\n  BufferOp,\n  GeoJSONReader,\n  GeoJSONWriter\n} = jsts;\nfunction buffer(geojson, radius, options) {\n  options = options || {};\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n  if (radius === void 0) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return featureCollection(results);\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature2) {\n        var multiBuffered = bufferFeature(feature2, radius, units, steps);\n        if (multiBuffered) {\n          featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    geomEach(geojson, function (geometry2) {\n      var buffered2 = bufferFeature(geometry2, radius, units, steps);\n      if (buffered2) results.push(buffered2);\n    });\n    return featureCollection(results);\n  }\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection)\n  };\n  var reader = new GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = radiansToLength(lengthToRadians(radius, units), \"meters\");\n  var buffered = BufferOp.bufferOp(geom, distance, steps);\n  var writer = new GeoJSONWriter();\n  buffered = writer.write(buffered);\n  if (coordsIsNaN(buffered.coordinates)) return void 0;\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection)\n  };\n  return feature(result, properties);\n}\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\nfunction defineProjection(geojson) {\n  var coords = center(geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return geoAzimuthalEquidistant().rotate(rotation).scale(earthRadius);\n}\nvar turf_buffer_default = buffer;\nexport { buffer, turf_buffer_default as default };\n", "// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function () {\n  return new Adder();\n}\nfunction Adder() {\n  this.reset();\n}\nAdder.prototype = {\n  constructor: Adder,\n  reset: function () {\n    this.s =\n    // rounded value\n    this.t = 0; // exact error\n  },\n  add: function (y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function () {\n    return this.s;\n  }\n};\nvar temp = new Adder();\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n    bv = x - a,\n    av = x - bv;\n  adder.t = a - av + (b - bv);\n}", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}", "export default function noop() {}", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\nvar streamObjectType = {\n  Feature: function (object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function (object, stream) {\n    var features = object.features,\n      i = -1,\n      n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\nvar streamGeometryType = {\n  Sphere: function (object, stream) {\n    stream.sphere();\n  },\n  Point: function (object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function (object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function (object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function (object, stream) {\n    var geometries = object.geometries,\n      i = -1,\n      n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n    n = coordinates.length - closed,\n    coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n    n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}", "import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n  lambda00,\n  phi00,\n  lambda0,\n  cosPhi0,\n  sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function () {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function () {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function () {\n    areaSum.add(tau);\n  }\n};\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n    sdLambda = dLambda >= 0 ? 1 : -1,\n    adLambda = sdLambda * dLambda,\n    cosPhi = cos(phi),\n    sinPhi = sin(phi),\n    k = sinPhi0 * sinPhi,\n    u = cosPhi0 * cosPhi + k * cos(adLambda),\n    v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}", "import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n    phi = spherical[1],\n    cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}", "import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n  phi0,\n  lambda1,\n  phi1,\n  // bounds\n  lambda2,\n  // previous lambda-coordinate\n  lambda00,\n  phi00,\n  // first point\n  p0,\n  // previous 3D point\n  deltaSum = adder(),\n  ranges,\n  range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function () {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function () {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n      equatorial = [normal[1], -normal[0], 0],\n      inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n      sign = delta > 0 ? 1 : -1,\n      lambdai = inflection[0] * degrees * sign,\n      phii,\n      antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}", "export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}", "import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n    sinDeltaPhi = sin(deltaPhi),\n    cosDeltaGamma = cos(deltaGamma),\n    sinDeltaGamma = sin(deltaGamma);\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(phi),\n      k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(phi),\n      k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n  return rotation;\n}\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n  return forward;\n}", "import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n    sinRadius = sin(radius),\n    step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\nexport default function () {\n  var center = constant([0, 0]),\n    radius = constant(90),\n    precision = constant(6),\n    ring,\n    rotate,\n    stream = {\n      point: point\n    };\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n  function circle() {\n    var c = center.apply(this, arguments),\n      r = radius.apply(this, arguments) * radians,\n      p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n  return circle;\n}", "import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n    line;\n  return {\n    point: function (x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function () {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function () {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function () {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}", "export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1],\n    t0 = 0,\n    t1 = 1,\n    dx = bx - ax,\n    dy = by - ay,\n    r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}", "import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}", "import pointEqual from \"../pointEqual\";\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n    clip = [],\n    i,\n    n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n      p0 = segment[0],\n      p1 = segment[n],\n      x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n  var start = subject[0],\n    points,\n    point;\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n      isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n    i = 0,\n    a = array[0],\n    b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}", "export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}", "import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function (a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n      return lo;\n    },\n    right: function (a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}", "import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;", "var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;", "var e10 = Math.sqrt(50),\n  e5 = Math.sqrt(10),\n  e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n    i = -1,\n    n,\n    ticks,\n    step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n    power = Math.floor(Math.log(step) / Math.LN10),\n    error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n    step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n    error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}", "export default function (arrays) {\n  var n = arrays.length,\n    m,\n    i = -1,\n    j = 0,\n    merged,\n    array;\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n  return merged;\n}", "import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n  clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n      a1 = 0;\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n      cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n  return function (stream) {\n    var activeStream = stream,\n      bufferStream = clipBuffer(),\n      segments,\n      polygon,\n      ring,\n      x__,\n      y__,\n      v__,\n      // first point\n      x_,\n      y_,\n      v_,\n      // previous point\n      first,\n      clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n    function polygonInside() {\n      var winding = 0;\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n    function polygonEnd() {\n      var startInside = polygonInside(),\n        cleanInside = clean && startInside,\n        visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n            b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n    return clipStream;\n  };\n}\nexport default function () {\n  var x0 = 0,\n    y0 = 0,\n    x1 = 960,\n    y1 = 500,\n    cache,\n    cacheStream,\n    clip;\n  return clip = {\n    stream: function (stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function (_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}", "import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n    phi = point[1],\n    normal = [sin(lambda), -cos(lambda), 0],\n    angle = 0,\n    winding = 0;\n  sum.reset();\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n      m,\n      point0 = ring[m - 1],\n      lambda0 = point0[0],\n      phi0 = point0[1] / 2 + quarterPi,\n      sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n        lambda1 = point1[0],\n        phi1 = point1[1] / 2 + quarterPi,\n        sinPhi1 = sin(phi1),\n        cosPhi1 = cos(phi1),\n        delta = lambda1 - lambda0,\n        sign = delta >= 0 ? 1 : -1,\n        absDelta = sign * delta,\n        antimeridian = absDelta > pi,\n        k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}", "import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n  lambda0,\n  sinPhi0,\n  cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n    cosPhi = cos(phi),\n    delta = abs(lambda - lambda0),\n    cosDelta = cos(delta),\n    sinDelta = sin(delta),\n    x = cosPhi * sinDelta,\n    y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n    z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}", "export default function (x) {\n  return x;\n}", "import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n  areaRingSum = adder(),\n  x00,\n  y00,\n  x0,\n  y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function () {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function () {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function () {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\nexport default areaStream;", "import noop from \"../noop\";\nvar x0 = Infinity,\n  y0 = x0,\n  x1 = -x0,\n  y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function () {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\nexport default boundsStream;", "import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function (_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function () {\n    this._line = 0;\n  },\n  polygonEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function (x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n          this._point = 1;\n          break;\n        }\n      case 1:\n        {\n          this._context.lineTo(x, y);\n          break;\n        }\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n          this._context.arc(x, y, this._radius, 0, tau);\n          break;\n        }\n    }\n  },\n  result: noop\n};", "import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n  lengthRing,\n  x00,\n  y00,\n  x0,\n  y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function () {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function () {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function () {\n    lengthRing = true;\n  },\n  polygonEnd: function () {\n    lengthRing = null;\n  },\n  result: function () {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\nexport default lengthStream;", "export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function (_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function () {\n    this._line = 0;\n  },\n  polygonEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function (x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n          this._point = 1;\n          break;\n        }\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n          break;\n        }\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n          this._string.push(\"M\", x, \",\", y, this._circle);\n          break;\n        }\n    }\n  },\n  result: function () {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}", "import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n      rotatedStart = rotate.invert(start[0], start[1]),\n      ringBuffer = clipBuffer(),\n      ringSink = clipLine(ringBuffer),\n      polygonStarted = false,\n      polygon,\n      segments,\n      ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function () {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function () {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function () {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n        ringSegments = ringBuffer.result(),\n        i,\n        n = ringSegments.length,\n        m,\n        segment,\n        point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n    return clip;\n  };\n}\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}", "import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n    phi0 = NaN,\n    sign0 = NaN,\n    clean; // no intersections\n\n  return {\n    lineStart: function () {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function (lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n        delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function () {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function () {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n    cosPhi1,\n    sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}", "import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius, delta) {\n  var cr = cos(radius),\n    smallRadius = cr > 0,\n    notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0,\n      // previous point\n      c0,\n      // code for previous point\n      v0,\n      // visibility of previous point\n      v00,\n      // visibility of first point\n      clean; // no intersections\n    return {\n      lineStart: function () {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function (lambda, phi) {\n        var point1 = [lambda, phi],\n          point2,\n          v = visible(lambda, phi),\n          c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function () {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function () {\n        return clean | (v00 && v0) << 1;\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n      pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0],\n      // normal\n      n2 = cartesianCross(pa, pb),\n      n2n2 = cartesianDot(n2, n2),\n      n1n2 = n2[0],\n      // cartesianDot(n1, n2),\n      determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n      c2 = -cr * n1n2 / determinant,\n      n1xn2 = cartesianCross(n1, n2),\n      A = cartesianScale(n1, c1),\n      B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n      w = cartesianDot(A, u),\n      uu = cartesianDot(u, u),\n      t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n      q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n      lambda1 = b[0],\n      phi0 = a[1],\n      phi1 = b[1],\n      z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n      polar = abs(delta - pi) < epsilon,\n      meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n      code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}", "export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\nfunction TransformStream() {}\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function (x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function () {\n    this.stream.sphere();\n  },\n  lineStart: function () {\n    this.stream.lineStart();\n  },\n  lineEnd: function () {\n    this.stream.lineEnd();\n  },\n  polygonStart: function () {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function () {\n    this.stream.polygonEnd();\n  }\n};", "import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n    h = extent[1][1] - extent[0][1],\n    clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n    k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n    x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n    y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}", "import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n  // maximum depth of subdivision\n  cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\nfunction resampleNone(project) {\n  return transformer({\n    point: function (x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n      dy = y1 - y0,\n      d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n        b = b0 + b1,\n        c = c0 + c1,\n        m = sqrt(a * a + b * b + c * c),\n        phi2 = asin(c /= m),\n        lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n        p = project(lambda2, phi2),\n        x2 = p[0],\n        y2 = p[1],\n        dx2 = x2 - x0,\n        dy2 = y2 - y0,\n        dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00,\n      // first point\n      lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function () {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function () {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n        p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n    return resampleStream;\n  };\n}", "import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport { clipExtent } from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { degrees, radians, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function (x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n    k = 150,\n    // scale\n    x = 480,\n    y = 250,\n    // translate\n    dx,\n    dy,\n    lambda = 0,\n    phi = 0,\n    // center\n    deltaLambda = 0,\n    deltaPhi = 0,\n    deltaGamma = 0,\n    rotate,\n    projectRotate,\n    // rotate\n    theta = null,\n    preclip = clipAntimeridian,\n    // clip angle\n    x0 = null,\n    y0,\n    x1,\n    y1,\n    postclip = identity,\n    // clip extent\n    delta2 = 0.5,\n    projectResample = resample(projectTransform, delta2),\n    // precision\n    cache,\n    cacheStream;\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}", "import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n      cy = cos(y),\n      k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n      c = angle(z),\n      sc = sin(c),\n      cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}", "import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}", "import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}", "import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n    center = m.center,\n    scale = m.scale,\n    translate = m.translate,\n    clipExtent = m.clipExtent,\n    x0 = null,\n    y0,\n    x1,\n    y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  function reclip() {\n    var k = pi * scale(),\n      t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n  return reclip();\n}", "import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}", "import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n    k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}", "import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n    phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n    i = 25,\n    delta;\n  do {\n    var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}", "import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}", "import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n    k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}", "import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n    center = m.center,\n    rotate = m.rotate;\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n  return rotate([0, 0, 90]).scale(159.155);\n}", "// index.ts\nimport { geomEach, coordEach } from \"@turf/meta\";\nimport { isNumber, point } from \"@turf/helpers\";\nfunction centerMean(geojson, options = {}) {\n  let sumXs = 0;\n  let sumYs = 0;\n  let sumNs = 0;\n  geomEach(geojson, function (geom, featureIndex, properties) {\n    let weight = options.weight ? properties == null ? void 0 : properties[options.weight] : void 0;\n    weight = weight === void 0 || weight === null ? 1 : weight;\n    if (!isNumber(weight)) throw new Error(\"weight value must be a number for feature index \" + featureIndex);\n    weight = Number(weight);\n    if (weight > 0) {\n      coordEach(geom, function (coord) {\n        sumXs += coord[0] * weight;\n        sumYs += coord[1] * weight;\n        sumNs += weight;\n      });\n    }\n  });\n  return point([sumXs / sumNs, sumYs / sumNs], options.properties, options);\n}\nvar turf_center_mean_default = centerMean;\nexport { centerMean, turf_center_mean_default as default };\n", "// index.ts\nimport { point } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nfunction centroid(geojson, options = {}) {\n  let xSum = 0;\n  let ySum = 0;\n  let len = 0;\n  coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return point([xSum / len, ySum / len], options.properties);\n}\nvar turf_centroid_default = centroid;\nexport { centroid, turf_centroid_default as default };\n", "// index.ts\nimport { centerMean } from \"@turf/center-mean\";\nimport { distance } from \"@turf/distance\";\nimport { centroid } from \"@turf/centroid\";\nimport { isNumber, point, isObject, featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nfunction centerMedian(features, options = {}) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var counter = options.counter || 10;\n  if (!isNumber(counter)) throw new Error(\"counter must be a number\");\n  var weightTerm = options.weight;\n  var meanCenter = centerMean(features, {\n    weight: options.weight\n  });\n  var centroids = featureCollection([]);\n  featureEach(features, function (feature) {\n    var _a;\n    centroids.features.push(centroid(feature, {\n      properties: {\n        weight: (_a = feature.properties) == null ? void 0 : _a[weightTerm]\n      }\n    }));\n  });\n  const properties = {\n    tolerance: options.tolerance,\n    medianCandidates: []\n  };\n  return findMedian(meanCenter.geometry.coordinates, [0, 0], centroids, properties, counter);\n}\nfunction findMedian(candidateMedian, previousCandidate, centroids, properties, counter) {\n  var tolerance = properties.tolerance || 1e-3;\n  var candidateXsum = 0;\n  var candidateYsum = 0;\n  var kSum = 0;\n  var centroidCount = 0;\n  featureEach(centroids, function (theCentroid) {\n    var _a;\n    var weightValue = (_a = theCentroid.properties) == null ? void 0 : _a.weight;\n    var weight = weightValue === void 0 || weightValue === null ? 1 : weightValue;\n    weight = Number(weight);\n    if (!isNumber(weight)) throw new Error(\"weight value must be a number\");\n    if (weight > 0) {\n      centroidCount += 1;\n      var distanceFromCandidate = weight * distance(theCentroid, candidateMedian);\n      if (distanceFromCandidate === 0) distanceFromCandidate = 1;\n      var k = weight / distanceFromCandidate;\n      candidateXsum += theCentroid.geometry.coordinates[0] * k;\n      candidateYsum += theCentroid.geometry.coordinates[1] * k;\n      kSum += k;\n    }\n  });\n  if (centroidCount < 1) throw new Error(\"no features to measure\");\n  var candidateX = candidateXsum / kSum;\n  var candidateY = candidateYsum / kSum;\n  if (centroidCount === 1 || counter === 0 || Math.abs(candidateX - previousCandidate[0]) < tolerance && Math.abs(candidateY - previousCandidate[1]) < tolerance) {\n    return point([candidateX, candidateY], {\n      medianCandidates: properties.medianCandidates\n    });\n  } else {\n    properties.medianCandidates.push([candidateX, candidateY]);\n    return findMedian([candidateX, candidateY], candidateMedian, centroids, properties, counter - 1);\n  }\n}\nvar turf_center_median_default = centerMedian;\nexport { centerMedian, turf_center_median_default as default };\n", "// index.ts\nimport { polygon } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nimport concaveman from \"concaveman\";\nfunction convex(geojson, options = {}) {\n  options.concavity = options.concavity || Infinity;\n  const points = [];\n  coordEach(geojson, coord => {\n    points.push([coord[0], coord[1]]);\n  });\n  if (!points.length) {\n    return null;\n  }\n  const convexHull = concaveman(points, options.concavity);\n  if (convexHull.length > 3) {\n    return polygon([convexHull]);\n  }\n  return null;\n}\nvar turf_convex_default = convex;\nexport { convex, turf_convex_default as default };\n", "// index.ts\nimport { convex } from \"@turf/convex\";\nimport { centroid } from \"@turf/centroid\";\nimport { point } from \"@turf/helpers\";\nimport { getType, getCoord } from \"@turf/invariant\";\nimport { coordEach } from \"@turf/meta\";\nfunction centerOfMass(geojson, options = {}) {\n  switch (getType(geojson)) {\n    case \"Point\":\n      return point(getCoord(geojson), options.properties);\n    case \"Polygon\":\n      var coords = [];\n      coordEach(geojson, function (coord) {\n        coords.push(coord);\n      });\n      var centre = centroid(geojson, {\n        properties: options.properties\n      });\n      var translation = centre.geometry.coordinates;\n      var sx = 0;\n      var sy = 0;\n      var sArea = 0;\n      var i, pi, pj, xi, xj, yi, yj, a;\n      var neutralizedPoints = coords.map(function (point2) {\n        return [point2[0] - translation[0], point2[1] - translation[1]];\n      });\n      for (i = 0; i < coords.length - 1; i++) {\n        pi = neutralizedPoints[i];\n        xi = pi[0];\n        yi = pi[1];\n        pj = neutralizedPoints[i + 1];\n        xj = pj[0];\n        yj = pj[1];\n        a = xi * yj - xj * yi;\n        sArea += a;\n        sx += (xi + xj) * a;\n        sy += (yi + yj) * a;\n      }\n      if (sArea === 0) {\n        return centre;\n      } else {\n        var area = sArea * 0.5;\n        var areaFactor = 1 / (6 * area);\n        return point([translation[0] + areaFactor * sx, translation[1] + areaFactor * sy], options.properties);\n      }\n    default:\n      var hull = convex(geojson);\n      if (hull) return centerOfMass(hull, {\n        properties: options.properties\n      });else return centroid(geojson, {\n        properties: options.properties\n      });\n  }\n}\nvar turf_center_of_mass_default = centerOfMass;\nexport { centerOfMass, turf_center_of_mass_default as default };\n", "// index.ts\nimport { destination } from \"@turf/destination\";\nimport { polygon } from \"@turf/helpers\";\nfunction circle(center, radius, options = {}) {\n  const steps = options.steps || 64;\n  const properties = options.properties ? options.properties : !Array.isArray(center) && center.type === \"Feature\" && center.properties ? center.properties : {};\n  const coordinates = [];\n  for (let i = 0; i < steps; i++) {\n    coordinates.push(destination(center, radius, i * -360 / steps, options).geometry.coordinates);\n  }\n  coordinates.push(coordinates[0]);\n  return polygon([coordinates], properties);\n}\nvar turf_circle_default = circle;\nexport { circle, turf_circle_default as default };\n", "// index.ts\nfunction clone(geojson) {\n  if (!geojson) {\n    throw new Error(\"geojson is required\");\n  }\n  switch (geojson.type) {\n    case \"Feature\":\n      return cloneFeature(geojson);\n    case \"FeatureCollection\":\n      return cloneFeatureCollection(geojson);\n    case \"Point\":\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiPoint\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n    case \"GeometryCollection\":\n      return cloneGeometry(geojson);\n    default:\n      throw new Error(\"unknown GeoJSON type\");\n  }\n}\nfunction cloneFeature(geojson) {\n  const cloned = {\n    type: \"Feature\"\n  };\n  Object.keys(geojson).forEach(key => {\n    switch (key) {\n      case \"type\":\n      case \"properties\":\n      case \"geometry\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  cloned.properties = cloneProperties(geojson.properties);\n  if (geojson.geometry == null) {\n    cloned.geometry = null;\n  } else {\n    cloned.geometry = cloneGeometry(geojson.geometry);\n  }\n  return cloned;\n}\nfunction cloneProperties(properties) {\n  const cloned = {};\n  if (!properties) {\n    return cloned;\n  }\n  Object.keys(properties).forEach(key => {\n    const value = properties[key];\n    if (typeof value === \"object\") {\n      if (value === null) {\n        cloned[key] = null;\n      } else if (Array.isArray(value)) {\n        cloned[key] = value.map(item => {\n          return item;\n        });\n      } else {\n        cloned[key] = cloneProperties(value);\n      }\n    } else {\n      cloned[key] = value;\n    }\n  });\n  return cloned;\n}\nfunction cloneFeatureCollection(geojson) {\n  const cloned = {\n    type: \"FeatureCollection\"\n  };\n  Object.keys(geojson).forEach(key => {\n    switch (key) {\n      case \"type\":\n      case \"features\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  cloned.features = geojson.features.map(feature => {\n    return cloneFeature(feature);\n  });\n  return cloned;\n}\nfunction cloneGeometry(geometry) {\n  const geom = {\n    type: geometry.type\n  };\n  if (geometry.bbox) {\n    geom.bbox = geometry.bbox;\n  }\n  if (geometry.type === \"GeometryCollection\") {\n    geom.geometries = geometry.geometries.map(g => {\n      return cloneGeometry(g);\n    });\n    return geom;\n  }\n  geom.coordinates = deepSlice(geometry.coordinates);\n  return geom;\n}\nfunction deepSlice(coords) {\n  const cloned = coords;\n  if (typeof cloned[0] !== \"object\") {\n    return cloned.slice();\n  }\n  return cloned.map(coord => {\n    return deepSlice(coord);\n  });\n}\nvar turf_clone_default = clone;\nexport { clone, cloneProperties, turf_clone_default as default };\n", "// index.ts\nimport { featureEach } from \"@turf/meta\";\nimport { featureCollection } from \"@turf/helpers\";\nfunction getCluster(geojson, filter) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (geojson.type !== \"FeatureCollection\") throw new Error(\"geojson must be a FeatureCollection\");\n  if (filter === void 0 || filter === null) throw new Error(\"filter is required\");\n  var features = [];\n  featureEach(geojson, function (feature) {\n    if (applyFilter(feature.properties, filter)) features.push(feature);\n  });\n  return featureCollection(features);\n}\nfunction clusterEach(geojson, property, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (geojson.type !== \"FeatureCollection\") throw new Error(\"geojson must be a FeatureCollection\");\n  if (property === void 0 || property === null) throw new Error(\"property is required\");\n  var bins = createBins(geojson, property);\n  var values = Object.keys(bins);\n  for (var index = 0; index < values.length; index++) {\n    var value = values[index];\n    var bin = bins[value];\n    var features = [];\n    for (var i = 0; i < bin.length; i++) {\n      features.push(geojson.features[bin[i]]);\n    }\n    callback(featureCollection(features), value, index);\n  }\n}\nfunction clusterReduce(geojson, property, callback, initialValue) {\n  var previousValue = initialValue;\n  clusterEach(geojson, property, function (cluster, clusterValue, currentIndex) {\n    if (currentIndex === 0 && initialValue === void 0) previousValue = cluster;else previousValue = callback(previousValue, cluster, clusterValue, currentIndex);\n  });\n  return previousValue;\n}\nfunction createBins(geojson, property) {\n  var bins = {};\n  featureEach(geojson, function (feature, i) {\n    var properties = feature.properties || {};\n    if (Object.prototype.hasOwnProperty.call(properties, String(property))) {\n      var value = properties[property];\n      if (Object.prototype.hasOwnProperty.call(bins, value)) bins[value].push(i);else bins[value] = [i];\n    }\n  });\n  return bins;\n}\nfunction applyFilter(properties, filter) {\n  if (properties === void 0) return false;\n  var filterType = typeof filter;\n  if (filterType === \"number\" || filterType === \"string\") return Object.prototype.hasOwnProperty.call(properties, filter);else if (Array.isArray(filter)) {\n    for (var i = 0; i < filter.length; i++) {\n      if (!applyFilter(properties, filter[i])) return false;\n    }\n    return true;\n  } else {\n    return propertiesContainsFilter(properties, filter);\n  }\n}\nfunction propertiesContainsFilter(properties, filter) {\n  var keys = Object.keys(filter);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (properties[key] !== filter[key]) return false;\n  }\n  return true;\n}\nfunction filterProperties(properties, keys) {\n  if (!keys) return {};\n  if (!keys.length) return {};\n  var newProperties = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (Object.prototype.hasOwnProperty.call(properties, key)) newProperties[key] = properties[key];\n  }\n  return newProperties;\n}\nexport { applyFilter, clusterEach, clusterReduce, createBins, filterProperties, getCluster, propertiesContainsFilter };\n", "// index.ts\nimport { clone } from \"@turf/clone\";\nimport { distance } from \"@turf/distance\";\nimport { degreesToRadians, lengthToDegrees } from \"@turf/helpers\";\n\n// lib/rbush-export.ts\nimport lib from \"rbush\";\nvar rbush = lib;\n\n// index.ts\nfunction clustersDbscan(points, maxDistance, options = {}) {\n  if (options.mutate !== true) points = clone(points);\n  const minPoints = options.minPoints || 3;\n  const latDistanceInDegrees = lengthToDegrees(maxDistance, options.units);\n  var tree = new rbush(points.features.length);\n  var visited = points.features.map(_ => false);\n  var assigned = points.features.map(_ => false);\n  var isnoise = points.features.map(_ => false);\n  var clusterIds = points.features.map(_ => -1);\n  tree.load(points.features.map((point, index) => {\n    var [x, y] = point.geometry.coordinates;\n    return {\n      minX: x,\n      minY: y,\n      maxX: x,\n      maxY: y,\n      index\n    };\n  }));\n  const regionQuery = index => {\n    const point = points.features[index];\n    const [x, y] = point.geometry.coordinates;\n    const minY = Math.max(y - latDistanceInDegrees, -90);\n    const maxY = Math.min(y + latDistanceInDegrees, 90);\n    const lonDistanceInDegrees = function () {\n      if (minY < 0 && maxY > 0) {\n        return latDistanceInDegrees;\n      }\n      if (Math.abs(minY) < Math.abs(maxY)) {\n        return latDistanceInDegrees / Math.cos(degreesToRadians(maxY));\n      } else {\n        return latDistanceInDegrees / Math.cos(degreesToRadians(minY));\n      }\n    }();\n    const minX = Math.max(x - lonDistanceInDegrees, -360);\n    const maxX = Math.min(x + lonDistanceInDegrees, 360);\n    const bbox = {\n      minX,\n      minY,\n      maxX,\n      maxY\n    };\n    return tree.search(bbox).filter(neighbor => {\n      const neighborIndex = neighbor.index;\n      const neighborPoint = points.features[neighborIndex];\n      const distanceInKm = distance(point, neighborPoint, {\n        units: \"kilometers\"\n      });\n      return distanceInKm <= maxDistance;\n    });\n  };\n  const expandCluster = (clusteredId, neighbors) => {\n    for (var i = 0; i < neighbors.length; i++) {\n      var neighbor = neighbors[i];\n      const neighborIndex = neighbor.index;\n      if (!visited[neighborIndex]) {\n        visited[neighborIndex] = true;\n        const nextNeighbors = regionQuery(neighborIndex);\n        if (nextNeighbors.length >= minPoints) {\n          neighbors.push(...nextNeighbors);\n        }\n      }\n      if (!assigned[neighborIndex]) {\n        assigned[neighborIndex] = true;\n        clusterIds[neighborIndex] = clusteredId;\n      }\n    }\n  };\n  var nextClusteredId = 0;\n  points.features.forEach((_, index) => {\n    if (visited[index]) return;\n    const neighbors = regionQuery(index);\n    if (neighbors.length >= minPoints) {\n      const clusteredId = nextClusteredId;\n      nextClusteredId++;\n      visited[index] = true;\n      expandCluster(clusteredId, neighbors);\n    } else {\n      isnoise[index] = true;\n    }\n  });\n  points.features.forEach((_, index) => {\n    var clusterPoint = points.features[index];\n    if (!clusterPoint.properties) {\n      clusterPoint.properties = {};\n    }\n    if (clusterIds[index] >= 0) {\n      clusterPoint.properties.dbscan = isnoise[index] ? \"edge\" : \"core\";\n      clusterPoint.properties.cluster = clusterIds[index];\n    } else {\n      clusterPoint.properties.dbscan = \"noise\";\n    }\n  });\n  return points;\n}\nvar turf_clusters_dbscan_default = clustersDbscan;\nexport { clustersDbscan, turf_clusters_dbscan_default as default };\n", "// index.ts\nimport { clone } from \"@turf/clone\";\nimport { coordAll, featureEach } from \"@turf/meta\";\nimport skmeans from \"skmeans\";\nfunction clustersKmeans(points, options = {}) {\n  var count = points.features.length;\n  options.numberOfClusters = options.numberOfClusters || Math.round(Math.sqrt(count / 2));\n  if (options.numberOfClusters > count) options.numberOfClusters = count;\n  if (options.mutate !== true) points = clone(points);\n  var data = coordAll(points);\n  var initialCentroids = data.slice(0, options.numberOfClusters);\n  var skmeansResult = skmeans(data, options.numberOfClusters, initialCentroids);\n  var centroids = {};\n  skmeansResult.centroids.forEach(function (coord, idx) {\n    centroids[idx] = coord;\n  });\n  featureEach(points, function (point, index) {\n    var clusterId = skmeansResult.idxs[index];\n    point.properties.cluster = clusterId;\n    point.properties.centroid = centroids[clusterId];\n  });\n  return points;\n}\nvar turf_clusters_kmeans_default = clustersKmeans;\nexport { clustersKmeans, turf_clusters_kmeans_default as default };\n", "// index.ts\nimport { bbox as turfbbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\n\n// lib/rbush-export.ts\nimport lib from \"rbush\";\nvar rbush = lib;\n\n// index.ts\nfunction collect(polygons, points, inProperty, outProperty) {\n  var rtree = new rbush(6);\n  var treeItems = points.features.map(function (item) {\n    var _a;\n    return {\n      minX: item.geometry.coordinates[0],\n      minY: item.geometry.coordinates[1],\n      maxX: item.geometry.coordinates[0],\n      maxY: item.geometry.coordinates[1],\n      property: (_a = item.properties) == null ? void 0 : _a[inProperty]\n    };\n  });\n  rtree.load(treeItems);\n  polygons.features.forEach(function (poly) {\n    if (!poly.properties) {\n      poly.properties = {};\n    }\n    var bbox = turfbbox(poly);\n    var potentialPoints = rtree.search({\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3]\n    });\n    var values = [];\n    potentialPoints.forEach(function (pt) {\n      if (booleanPointInPolygon([pt.minX, pt.minY], poly)) {\n        values.push(pt.property);\n      }\n    });\n    poly.properties[outProperty] = values;\n  });\n  return polygons;\n}\nvar turf_collect_default = collect;\nexport { collect, turf_collect_default as default };\n", "// index.ts\nimport { feature, featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nfunction combine(fc) {\n  var groups = {\n    MultiPoint: {\n      coordinates: [],\n      properties: []\n    },\n    MultiLineString: {\n      coordinates: [],\n      properties: []\n    },\n    MultiPolygon: {\n      coordinates: [],\n      properties: []\n    }\n  };\n  featureEach(fc, feature2 => {\n    var _a;\n    switch ((_a = feature2.geometry) == null ? void 0 : _a.type) {\n      case \"Point\":\n        groups.MultiPoint.coordinates.push(feature2.geometry.coordinates);\n        groups.MultiPoint.properties.push(feature2.properties);\n        break;\n      case \"MultiPoint\":\n        groups.MultiPoint.coordinates.push(...feature2.geometry.coordinates);\n        groups.MultiPoint.properties.push(feature2.properties);\n        break;\n      case \"LineString\":\n        groups.MultiLineString.coordinates.push(feature2.geometry.coordinates);\n        groups.MultiLineString.properties.push(feature2.properties);\n        break;\n      case \"MultiLineString\":\n        groups.MultiLineString.coordinates.push(...feature2.geometry.coordinates);\n        groups.MultiLineString.properties.push(feature2.properties);\n        break;\n      case \"Polygon\":\n        groups.MultiPolygon.coordinates.push(feature2.geometry.coordinates);\n        groups.MultiPolygon.properties.push(feature2.properties);\n        break;\n      case \"MultiPolygon\":\n        groups.MultiPolygon.coordinates.push(...feature2.geometry.coordinates);\n        groups.MultiPolygon.properties.push(feature2.properties);\n        break;\n      default:\n        break;\n    }\n  });\n  return featureCollection(Object.keys(groups).filter(function (key) {\n    return groups[key].coordinates.length;\n  }).sort().map(function (key) {\n    var geometry = {\n      type: key,\n      coordinates: groups[key].coordinates\n    };\n    var properties = {\n      collectedProperties: groups[key].properties\n    };\n    return feature(geometry, properties);\n  }));\n}\nvar turf_combine_default = combine;\nexport { combine, turf_combine_default as default };\n", "// index.ts\nimport { featureCollection, polygon } from \"@turf/helpers\";\nfunction tin(points, z) {\n  let isPointZ = false;\n  return featureCollection(triangulate(points.features.map(p => {\n    const point = {\n      x: p.geometry.coordinates[0],\n      y: p.geometry.coordinates[1]\n    };\n    if (z) {\n      point.z = p.properties[z];\n    } else if (p.geometry.coordinates.length === 3) {\n      isPointZ = true;\n      point.z = p.geometry.coordinates[2];\n    }\n    return point;\n  })).map(triangle => {\n    const a = [triangle.a.x, triangle.a.y];\n    const b = [triangle.b.x, triangle.b.y];\n    const c = [triangle.c.x, triangle.c.y];\n    let properties = {};\n    if (isPointZ) {\n      a.push(triangle.a.z);\n      b.push(triangle.b.z);\n      c.push(triangle.c.z);\n    } else {\n      properties = {\n        a: triangle.a.z,\n        b: triangle.b.z,\n        c: triangle.c.z\n      };\n    }\n    return polygon([[a, b, c, a]], properties);\n  }));\n}\nvar Triangle = class {\n  constructor(a, b, c) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    const A = b.x - a.x;\n    const B = b.y - a.y;\n    const C = c.x - a.x;\n    const D = c.y - a.y;\n    const E = A * (a.x + b.x) + B * (a.y + b.y);\n    const F = C * (a.x + c.x) + D * (a.y + c.y);\n    const G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n    let dx;\n    let dy;\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n  }\n};\nfunction byX(a, b) {\n  return b.x - a.x;\n}\nfunction dedup(edges) {\n  let j = edges.length;\n  let a;\n  let b;\n  let i;\n  let m;\n  let n;\n  outer: while (j) {\n    b = edges[--j];\n    a = edges[--j];\n    i = j;\n    while (i) {\n      n = edges[--i];\n      m = edges[--i];\n      if (a === m && b === n || a === n && b === m) {\n        edges.splice(j, 2);\n        edges.splice(i, 2);\n        j -= 2;\n        continue outer;\n      }\n    }\n  }\n}\nfunction triangulate(vertices) {\n  if (vertices.length < 3) {\n    return [];\n  }\n  vertices.sort(byX);\n  let i = vertices.length - 1;\n  const xmin = vertices[i].x;\n  const xmax = vertices[0].x;\n  let ymin = vertices[i].y;\n  let ymax = ymin;\n  const epsilon = 1e-12;\n  let a;\n  let b;\n  let c;\n  let A;\n  let B;\n  let G;\n  while (i--) {\n    if (vertices[i].y < ymin) {\n      ymin = vertices[i].y;\n    }\n    if (vertices[i].y > ymax) {\n      ymax = vertices[i].y;\n    }\n  }\n  let dx = xmax - xmin;\n  let dy = ymax - ymin;\n  const dmax = dx > dy ? dx : dy;\n  const xmid = (xmax + xmin) * 0.5;\n  const ymid = (ymax + ymin) * 0.5;\n  const open = [new Triangle({\n    __sentinel: true,\n    x: xmid - 20 * dmax,\n    y: ymid - dmax\n  }, {\n    __sentinel: true,\n    x: xmid,\n    y: ymid + 20 * dmax\n  }, {\n    __sentinel: true,\n    x: xmid + 20 * dmax,\n    y: ymid - dmax\n  })];\n  const closed = [];\n  const edges = [];\n  let j;\n  i = vertices.length;\n  while (i--) {\n    edges.length = 0;\n    j = open.length;\n    while (j--) {\n      dx = vertices[i].x - open[j].x;\n      if (dx > 0 && dx * dx > open[j].r) {\n        closed.push(open[j]);\n        open.splice(j, 1);\n        continue;\n      }\n      dy = vertices[i].y - open[j].y;\n      if (dx * dx + dy * dy > open[j].r) {\n        continue;\n      }\n      edges.push(open[j].a, open[j].b, open[j].b, open[j].c, open[j].c, open[j].a);\n      open.splice(j, 1);\n    }\n    dedup(edges);\n    j = edges.length;\n    while (j) {\n      b = edges[--j];\n      a = edges[--j];\n      c = vertices[i];\n      A = b.x - a.x;\n      B = b.y - a.y;\n      G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n      if (Math.abs(G) > epsilon) {\n        open.push(new Triangle(a, b, c));\n      }\n    }\n  }\n  Array.prototype.push.apply(closed, open);\n  i = closed.length;\n  while (i--) {\n    if (closed[i].a.__sentinel || closed[i].b.__sentinel || closed[i].c.__sentinel) {\n      closed.splice(i, 1);\n    }\n  }\n  return closed;\n}\nvar turf_tin_default = tin;\nexport { turf_tin_default as default, tin };\n", "export default function (x) {\n  return x;\n}", "import identity from \"./identity.js\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n    y0,\n    kx = transform.scale[0],\n    ky = transform.scale[1],\n    dx = transform.translate[0],\n    dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n      n = input.length,\n      output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}", "export default function (array, n) {\n  var t,\n    j = array.length,\n    i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}", "import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\nexport default function (topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nfunction feature(topology, o) {\n  var id = o.id,\n    bbox = o.bbox,\n    properties = o.properties == null ? {} : o.properties,\n    geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n    arcs = topology.arcs;\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n  function point(p) {\n    return transformPoint(p);\n  }\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n  function geometry(o) {\n    var type = o.type,\n      coordinates;\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n      default:\n        return null;\n    }\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n  return geometry(o);\n}", "export default function (topology, arcs) {\n  var stitchedArcs = {},\n    fragmentByStart = {},\n    fragmentByEnd = {},\n    fragments = [],\n    emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n      t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n      start = e[0],\n      end = e[1],\n      f,\n      g;\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n      p0 = arc[0],\n      p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}", "import { object } from \"./feature.js\";\nimport stitch from \"./stitch.js\";\nfunction planarRingArea(ring) {\n  var i = -1,\n    n = ring.length,\n    a,\n    b = ring[n - 1],\n    area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\nexport default function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n    polygons = [],\n    groups = [];\n  objects.forEach(geometry);\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n      case \"Polygon\":\n        extract(o.arcs);\n        break;\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);\n        break;\n    }\n  }\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n  function area(ring) {\n    return planarRingArea(object(topology, {\n      type: \"Polygon\",\n      arcs: [ring]\n    }).coordinates[0]);\n  }\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n        neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n        n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n      return arcs;\n    }).filter(function (arcs) {\n      return arcs.length > 0;\n    })\n  };\n}", "export var hasOwnProperty = Object.prototype.hasOwnProperty;", "import { hasOwnProperty } from \"./object.js\";\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nexport default function (objects) {\n  var x0 = Infinity,\n    y0 = Infinity,\n    x1 = -Infinity,\n    y1 = -Infinity;\n  function boundGeometry(geometry) {\n    if (geometry != null && hasOwnProperty.call(boundGeometryType, geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n  var boundGeometryType = {\n    GeometryCollection: function (o) {\n      o.geometries.forEach(boundGeometry);\n    },\n    Point: function (o) {\n      boundPoint(o.coordinates);\n    },\n    MultiPoint: function (o) {\n      o.coordinates.forEach(boundPoint);\n    },\n    LineString: function (o) {\n      boundLine(o.arcs);\n    },\n    MultiLineString: function (o) {\n      o.arcs.forEach(boundLine);\n    },\n    Polygon: function (o) {\n      o.arcs.forEach(boundLine);\n    },\n    MultiPolygon: function (o) {\n      o.arcs.forEach(boundMultiLine);\n    }\n  };\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n      y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n}", "export default function (size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n    mask = size - 1;\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n  function add(value) {\n    var index = hash(value) & mask,\n      match = store[index],\n      collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = index + 1 & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n  function has(value) {\n    var index = hash(value) & mask,\n      match = store[index],\n      collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = index + 1 & mask];\n    }\n    return false;\n  }\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n}", "export default function (size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n    valstore = new valueType(size),\n    mask = size - 1;\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n  function set(key, value) {\n    var index = hash(key) & mask,\n      matchKey = keystore[index],\n      collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n      matchKey = keystore[index],\n      collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n      matchKey = keystore[index],\n      collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    return missingValue;\n  }\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n  return {\n    set: set,\n    maybeSet: maybeSet,\n    // set if unset\n    get: get,\n    keys: keys\n  };\n}", "export default function (pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n}", "// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n  floats = new Float64Array(buffer),\n  uints = new Uint32Array(buffer);\nexport default function (point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}", "import hashset from \"./hash/hashset.js\";\nimport hashmap from \"./hash/hashmap.js\";\nimport equalPoint from \"./hash/point-equal.js\";\nimport hashPoint from \"./hash/point-hash.js\";\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nexport default function (topology) {\n  var coordinates = topology.coordinates,\n    lines = topology.lines,\n    rings = topology.rings,\n    indexes = index(),\n    visitedByIndex = new Int32Array(coordinates.length),\n    leftByIndex = new Int32Array(coordinates.length),\n    rightByIndex = new Int32Array(coordinates.length),\n    junctionByIndex = new Int8Array(coordinates.length),\n    junctionCount = 0,\n    // upper bound on number of junctions\n    i,\n    n,\n    previousIndex,\n    currentIndex,\n    nextIndex;\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n      lineStart = line[0],\n      lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n      ringStart = ring[0] + 1,\n      ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex) && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n      indexes = new Int32Array(coordinates.length);\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n    return indexes;\n  }\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n  visitedByIndex = leftByIndex = rightByIndex = null;\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint),\n    j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n  return junctionByPoint;\n}", "import join from \"./join.js\";\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nexport default function (topology) {\n  var junctions = join(topology),\n    coordinates = topology.coordinates,\n    lines = topology.lines,\n    rings = topology.rings,\n    next,\n    i,\n    n;\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n      lineMid = line[0],\n      lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {\n          0: lineMid,\n          1: line[1]\n        };\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n      ringStart = ring[0],\n      ringMid = ringStart,\n      ringEnd = ring[1],\n      ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {\n            0: ringMid,\n            1: ring[1]\n          };\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else {\n          // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n  return topology;\n}\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\nfunction reverse(array, start, end) {\n  for (var mid = start + (end-- - start >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}", "import hashmap from \"./hash/hashmap.js\";\nimport equalPoint from \"./hash/point-equal.js\";\nimport hashPoint from \"./hash/point-hash.js\";\n\n// Given a cut topology, combines duplicate arcs.\nexport default function (topology) {\n  var coordinates = topology.coordinates,\n    lines = topology.lines,\n    line,\n    rings = topology.rings,\n    ring,\n    arcCount = lines.length + rings.length,\n    i,\n    n;\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    while (ring = ring.next) ++arcCount;\n  }\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n    arcs = topology.arcs = [];\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) {\n      // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n  function dedupLine(arc) {\n    var startPoint, endPoint, startArcs, startArc, endArcs, endArc, i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n    if (startArcs) startArcs.push(arc);else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc);else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n  function dedupRing(arc) {\n    var endPoint, endArcs, endArc, i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n    if (endArcs) endArcs.push(arc);else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0],\n      ib = arcB[0],\n      ja = arcA[1],\n      jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0],\n      ib = arcB[0],\n      ja = arcA[1],\n      jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0],\n      ib = arcB[0],\n      ja = arcA[1],\n      jb = arcB[1],\n      n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n      kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0],\n      ib = arcB[0],\n      ja = arcA[1],\n      jb = arcB[1],\n      n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n      kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n      end = arc[1],\n      mid = start,\n      minimum = mid,\n      minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n  return topology;\n}", "// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nexport default function (arcs) {\n  var i = -1,\n    n = arcs.length;\n  while (++i < n) {\n    var arc = arcs[i],\n      j = 0,\n      k = 1,\n      m = arc.length,\n      point = arc[0],\n      x0 = point[0],\n      y0 = point[1],\n      x1,\n      y1;\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n  return arcs;\n}", "import { hasOwnProperty } from \"./object.js\";\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nexport default function (objects) {\n  var index = -1,\n    lines = [],\n    rings = [],\n    coordinates = [];\n  function extractGeometry(geometry) {\n    if (geometry && hasOwnProperty.call(extractGeometryType, geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n  var extractGeometryType = {\n    GeometryCollection: function (o) {\n      o.geometries.forEach(extractGeometry);\n    },\n    LineString: function (o) {\n      o.arcs = extractLine(o.arcs);\n    },\n    MultiLineString: function (o) {\n      o.arcs = o.arcs.map(extractLine);\n    },\n    Polygon: function (o) {\n      o.arcs = o.arcs.map(extractRing);\n    },\n    MultiPolygon: function (o) {\n      o.arcs = o.arcs.map(extractMultiRing);\n    }\n  };\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {\n      0: index - n + 1,\n      1: index\n    };\n    lines.push(arc);\n    return arc;\n  }\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {\n      0: index - n + 1,\n      1: index\n    };\n    rings.push(arc);\n    return arc;\n  }\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n}", "// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function (inputs) {\n  var outputs = {},\n    key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\nfunction geomifyObject(input) {\n  return input == null ? {\n    type: null\n  } : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection : input.type === \"Feature\" ? geomifyFeature : geomifyGeometry)(input);\n}\nfunction geomifyFeatureCollection(input) {\n  var output = {\n    type: \"GeometryCollection\",\n    geometries: input.features.map(geomifyFeature)\n  };\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry),\n    key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) {\n    output.properties = input.properties;\n    break;\n  }\n  return output;\n}\nfunction geomifyGeometry(input) {\n  if (input == null) return {\n    type: null\n  };\n  var output = input.type === \"GeometryCollection\" ? {\n    type: \"GeometryCollection\",\n    geometries: input.geometries.map(geomifyGeometry)\n  } : input.type === \"Point\" || input.type === \"MultiPoint\" ? {\n    type: input.type,\n    coordinates: input.coordinates\n  } : {\n    type: input.type,\n    arcs: input.coordinates\n  }; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}", "import { hasOwnProperty } from \"./object.js\";\nexport default function (objects, bbox, n) {\n  var x0 = bbox[0],\n    y0 = bbox[1],\n    x1 = bbox[2],\n    y1 = bbox[3],\n    kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n    ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n  function quantizePoints(input, m) {\n    var i = -1,\n      j = 0,\n      n = input.length,\n      output = new Array(n),\n      // pessimistic\n      pi,\n      px,\n      py,\n      x,\n      y;\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n  function quantizeGeometry(o) {\n    if (o != null && hasOwnProperty.call(quantizeGeometryType, o.type)) quantizeGeometryType[o.type](o);\n  }\n  var quantizeGeometryType = {\n    GeometryCollection: function (o) {\n      o.geometries.forEach(quantizeGeometry);\n    },\n    Point: function (o) {\n      o.coordinates = quantizePoint(o.coordinates);\n    },\n    MultiPoint: function (o) {\n      o.coordinates = o.coordinates.map(quantizePoint);\n    },\n    LineString: function (o) {\n      o.arcs = quantizeLine(o.arcs);\n    },\n    MultiLineString: function (o) {\n      o.arcs = o.arcs.map(quantizeLine);\n    },\n    Polygon: function (o) {\n      o.arcs = quantizePolygon(o.arcs);\n    },\n    MultiPolygon: function (o) {\n      o.arcs = o.arcs.map(quantizePolygon);\n    }\n  };\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n}", "import bounds from \"./bounds.js\";\nimport cut from \"./cut.js\";\nimport dedup from \"./dedup.js\";\nimport delta from \"./delta.js\";\nimport extract from \"./extract.js\";\nimport geometry from \"./geometry.js\";\nimport hashmap from \"./hash/hashmap.js\";\nimport { hasOwnProperty } from \"./object.js\";\nimport prequantize from \"./prequantize.js\";\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nexport default function (objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n    transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n    topology = dedup(cut(extract(objects))),\n    coordinates = topology.coordinates,\n    indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function (arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n  delete topology.coordinates;\n  coordinates = null;\n  function indexGeometry(geometry) {\n    if (geometry && hasOwnProperty.call(indexGeometryType, geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n  var indexGeometryType = {\n    GeometryCollection: function (o) {\n      o.geometries.forEach(indexGeometry);\n    },\n    LineString: function (o) {\n      o.arcs = indexArcs(o.arcs);\n    },\n    MultiLineString: function (o) {\n      o.arcs = o.arcs.map(indexArcs);\n    },\n    Polygon: function (o) {\n      o.arcs = o.arcs.map(indexArcs);\n    },\n    MultiPolygon: function (o) {\n      o.arcs = o.arcs.map(indexMultiArcs);\n    }\n  };\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n  return topology;\n}\nfunction hashArc(arc) {\n  var i = arc[0],\n    j = arc[1],\n    t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0],\n    ja = arcA[1],\n    ib = arcB[0],\n    jb = arcB[1],\n    t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}", "// index.ts\nimport { distance } from \"@turf/distance\";\nimport { feature, featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nimport { tin } from \"@turf/tin\";\n\n// lib/turf-dissolve.ts\nimport { clone as clone3 } from \"@turf/clone\";\nimport { isObject as isObject2 } from \"@turf/helpers\";\nimport { getType as getType3 } from \"@turf/invariant\";\nimport { flattenEach as flattenEach2 } from \"@turf/meta\";\n\n// lib/turf-line-dissolve.ts\nimport { clone } from \"@turf/clone\";\nimport { isObject, lineString, multiLineString } from \"@turf/helpers\";\nimport { getType } from \"@turf/invariant\";\nimport { lineReduce } from \"@turf/meta\";\nfunction lineDissolve(geojson, options = {}) {\n  options = options || {};\n  if (!isObject(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  const mutate = options.mutate;\n  if (getType(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n  if (mutate === false || mutate === void 0) {\n    geojson = clone(geojson);\n  }\n  const result = [];\n  const lastLine = lineReduce(geojson, (previousLine, currentLine) => {\n    const merged = mergeLineStrings(previousLine, currentLine);\n    if (merged) {\n      return merged;\n    } else {\n      result.push(previousLine);\n      return currentLine;\n    }\n  });\n  if (lastLine) {\n    result.push(lastLine);\n  }\n  if (!result.length) {\n    return null;\n  } else if (result.length === 1) {\n    return result[0];\n  } else {\n    return multiLineString(result.map(line => {\n      return line.coordinates;\n    }));\n  }\n}\nfunction coordId(coord) {\n  return coord[0].toString() + \",\" + coord[1].toString();\n}\nfunction mergeLineStrings(a, b) {\n  const coords1 = a.geometry.coordinates;\n  const coords2 = b.geometry.coordinates;\n  const s1 = coordId(coords1[0]);\n  const e1 = coordId(coords1[coords1.length - 1]);\n  const s2 = coordId(coords2[0]);\n  const e2 = coordId(coords2[coords2.length - 1]);\n  let coords;\n  if (s1 === e2) {\n    coords = coords2.concat(coords1.slice(1));\n  } else if (s2 === e1) {\n    coords = coords1.concat(coords2.slice(1));\n  } else if (s1 === s2) {\n    coords = coords1.slice(1).reverse().concat(coords2);\n  } else if (e1 === e2) {\n    coords = coords1.concat(coords2.reverse().slice(1));\n  } else {\n    return null;\n  }\n  return lineString(coords);\n}\n\n// lib/turf-polygon-dissolve.ts\nimport { clone as clone2 } from \"@turf/clone\";\nimport { geometryCollection } from \"@turf/helpers\";\nimport { getType as getType2 } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { merge } from \"topojson-client\";\nimport { topology } from \"topojson-server\";\nfunction polygonDissolve(geojson, options = {}) {\n  if (getType2(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n  if (options.mutate === false || options.mutate === void 0) {\n    geojson = clone2(geojson);\n  }\n  const geoms = [];\n  flattenEach(geojson, feature2 => {\n    geoms.push(feature2.geometry);\n  });\n  const topo = topology({\n    geoms: geometryCollection(geoms).geometry\n  });\n  const merged = merge(topo, topo.objects.geoms.geometries);\n  return merged;\n}\n\n// lib/turf-dissolve.ts\nfunction dissolve(geojson, options = {}) {\n  options = options || {};\n  if (!isObject2(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  const mutate = options.mutate;\n  if (getType3(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n  if (mutate === false || mutate === void 0) {\n    geojson = clone3(geojson);\n  }\n  const type = getHomogenousType(geojson);\n  if (!type) {\n    throw new Error(\"geojson must be homogenous\");\n  }\n  const data = geojson;\n  switch (type) {\n    case \"LineString\":\n      return lineDissolve(data, options);\n    case \"Polygon\":\n      return polygonDissolve(data, options);\n    default:\n      throw new Error(type + \" is not supported\");\n  }\n}\nfunction getHomogenousType(geojson) {\n  const types = {};\n  flattenEach2(geojson, feature2 => {\n    types[feature2.geometry.type] = true;\n  });\n  const keys = Object.keys(types);\n  if (keys.length === 1) {\n    return keys[0];\n  }\n  return null;\n}\n\n// index.ts\nfunction concave(points, options = {}) {\n  const maxEdge = options.maxEdge || Infinity;\n  const cleaned = removeDuplicates(points);\n  const tinPolys = tin(cleaned);\n  tinPolys.features = tinPolys.features.filter(triangle => {\n    const pt1 = triangle.geometry.coordinates[0][0];\n    const pt2 = triangle.geometry.coordinates[0][1];\n    const pt3 = triangle.geometry.coordinates[0][2];\n    const dist1 = distance(pt1, pt2, options);\n    const dist2 = distance(pt2, pt3, options);\n    const dist3 = distance(pt1, pt3, options);\n    return dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge;\n  });\n  if (tinPolys.features.length < 1) {\n    return null;\n  }\n  const dissolved = dissolve(tinPolys);\n  if (dissolved.coordinates.length === 1) {\n    dissolved.coordinates = dissolved.coordinates[0];\n    dissolved.type = \"Polygon\";\n  }\n  return feature(dissolved);\n}\nfunction removeDuplicates(points) {\n  const cleaned = [];\n  const existing = {};\n  featureEach(points, pt => {\n    if (!pt.geometry) {\n      return;\n    }\n    const key = pt.geometry.coordinates.join(\"-\");\n    if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n      cleaned.push(pt);\n      existing[key] = true;\n    }\n  });\n  return featureCollection(cleaned);\n}\nvar turf_concave_default = concave;\nexport { concave, turf_concave_default as default };\n", "// src/geom-in.ts\nimport BigNumber2 from \"bignumber.js\";\n\n// src/constant.ts\nvar constant_default = x => {\n  return () => {\n    return x;\n  };\n};\n\n// src/compare.ts\nvar compare_default = eps => {\n  const almostEqual = eps ? (a, b) => b.minus(a).abs().isLessThanOrEqualTo(eps) : constant_default(false);\n  return (a, b) => {\n    if (almostEqual(a, b)) return 0;\n    return a.comparedTo(b);\n  };\n};\n\n// src/orient.ts\nfunction orient_default(eps) {\n  const almostCollinear = eps ? (area2, ax, ay, cx, cy) => area2.exponentiatedBy(2).isLessThanOrEqualTo(cx.minus(ax).exponentiatedBy(2).plus(cy.minus(ay).exponentiatedBy(2)).times(eps)) : constant_default(false);\n  return (a, b, c) => {\n    const ax = a.x,\n      ay = a.y,\n      cx = c.x,\n      cy = c.y;\n    const area2 = ay.minus(cy).times(b.x.minus(cx)).minus(ax.minus(cx).times(b.y.minus(cy)));\n    if (almostCollinear(area2, ax, ay, cx, cy)) return 0;\n    return area2.comparedTo(0);\n  };\n}\n\n// src/snap.ts\nimport BigNumber from \"bignumber.js\";\nimport { SplayTreeSet } from \"splaytree-ts\";\n\n// src/identity.ts\nvar identity_default = x => {\n  return x;\n};\n\n// src/snap.ts\nvar snap_default = eps => {\n  if (eps) {\n    const xTree = new SplayTreeSet(compare_default(eps));\n    const yTree = new SplayTreeSet(compare_default(eps));\n    const snapCoord = (coord, tree) => {\n      return tree.addAndReturn(coord);\n    };\n    const snap = v => {\n      return {\n        x: snapCoord(v.x, xTree),\n        y: snapCoord(v.y, yTree)\n      };\n    };\n    snap({\n      x: new BigNumber(0),\n      y: new BigNumber(0)\n    });\n    return snap;\n  }\n  return identity_default;\n};\n\n// src/precision.ts\nvar set = eps => {\n  return {\n    set: eps2 => {\n      precision = set(eps2);\n    },\n    reset: () => set(eps),\n    compare: compare_default(eps),\n    snap: snap_default(eps),\n    orient: orient_default(eps)\n  };\n};\nvar precision = set();\n\n// src/bbox.ts\nvar isInBbox = (bbox, point) => {\n  return bbox.ll.x.isLessThanOrEqualTo(point.x) && point.x.isLessThanOrEqualTo(bbox.ur.x) && bbox.ll.y.isLessThanOrEqualTo(point.y) && point.y.isLessThanOrEqualTo(bbox.ur.y);\n};\nvar getBboxOverlap = (b1, b2) => {\n  if (b2.ur.x.isLessThan(b1.ll.x) || b1.ur.x.isLessThan(b2.ll.x) || b2.ur.y.isLessThan(b1.ll.y) || b1.ur.y.isLessThan(b2.ll.y)) return null;\n  const lowerX = b1.ll.x.isLessThan(b2.ll.x) ? b2.ll.x : b1.ll.x;\n  const upperX = b1.ur.x.isLessThan(b2.ur.x) ? b1.ur.x : b2.ur.x;\n  const lowerY = b1.ll.y.isLessThan(b2.ll.y) ? b2.ll.y : b1.ll.y;\n  const upperY = b1.ur.y.isLessThan(b2.ur.y) ? b1.ur.y : b2.ur.y;\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n// src/operation.ts\nimport { SplayTreeSet as SplayTreeSet3 } from \"splaytree-ts\";\n\n// src/vector.ts\nvar crossProduct = (a, b) => a.x.times(b.y).minus(a.y.times(b.x));\nvar dotProduct = (a, b) => a.x.times(b.x).plus(a.y.times(b.y));\nvar length = v => dotProduct(v, v).sqrt();\nvar sineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = {\n    x: pBase.x.minus(pShared.x),\n    y: pBase.y.minus(pShared.y)\n  };\n  const vAngle = {\n    x: pAngle.x.minus(pShared.x),\n    y: pAngle.y.minus(pShared.y)\n  };\n  return crossProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar cosineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = {\n    x: pBase.x.minus(pShared.x),\n    y: pBase.y.minus(pShared.y)\n  };\n  const vAngle = {\n    x: pAngle.x.minus(pShared.x),\n    y: pAngle.y.minus(pShared.y)\n  };\n  return dotProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar horizontalIntersection = (pt, v, y) => {\n  if (v.y.isZero()) return null;\n  return {\n    x: pt.x.plus(v.x.div(v.y).times(y.minus(pt.y))),\n    y\n  };\n};\nvar verticalIntersection = (pt, v, x) => {\n  if (v.x.isZero()) return null;\n  return {\n    x,\n    y: pt.y.plus(v.y.div(v.x).times(x.minus(pt.x)))\n  };\n};\nvar intersection = (pt1, v1, pt2, v2) => {\n  if (v1.x.isZero()) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x.isZero()) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y.isZero()) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y.isZero()) return horizontalIntersection(pt1, v1, pt2.y);\n  const kross = crossProduct(v1, v2);\n  if (kross.isZero()) return null;\n  const ve = {\n    x: pt2.x.minus(pt1.x),\n    y: pt2.y.minus(pt1.y)\n  };\n  const d1 = crossProduct(ve, v1).div(kross);\n  const d2 = crossProduct(ve, v2).div(kross);\n  const x1 = pt1.x.plus(d2.times(v1.x)),\n    x2 = pt2.x.plus(d1.times(v2.x));\n  const y1 = pt1.y.plus(d2.times(v1.y)),\n    y2 = pt2.y.plus(d1.times(v2.y));\n  const x = x1.plus(x2).div(2);\n  const y = y1.plus(y2).div(2);\n  return {\n    x,\n    y\n  };\n};\n\n// src/sweep-event.ts\nvar SweepEvent = class _SweepEvent {\n  point;\n  isLeft;\n  segment;\n  otherSE;\n  consumedBy;\n  // for ordering sweep events in the sweep event queue\n  static compare(a, b) {\n    const ptCmp = _SweepEvent.comparePoints(a.point, b.point);\n    if (ptCmp !== 0) return ptCmp;\n    if (a.point !== b.point) a.link(b);\n    if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n    return Segment.compare(a.segment, b.segment);\n  }\n  // for ordering points in sweep line order\n  static comparePoints(aPt, bPt) {\n    if (aPt.x.isLessThan(bPt.x)) return -1;\n    if (aPt.x.isGreaterThan(bPt.x)) return 1;\n    if (aPt.y.isLessThan(bPt.y)) return -1;\n    if (aPt.y.isGreaterThan(bPt.y)) return 1;\n    return 0;\n  }\n  // Warning: 'point' input will be modified and re-used (for performance)\n  constructor(point, isLeft) {\n    if (point.events === void 0) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n  }\n  link(other) {\n    if (other.point === this.point) {\n      throw new Error(\"Tried to link already linked events\");\n    }\n    const otherEvents = other.point.events;\n    for (let i = 0, iMax = otherEvents.length; i < iMax; i++) {\n      const evt = otherEvents[i];\n      this.point.events.push(evt);\n      evt.point = this.point;\n    }\n    this.checkForConsuming();\n  }\n  /* Do a pass over our linked events and check to see if any pair\n   * of segments match, and should be consumed. */\n  checkForConsuming() {\n    const numEvents = this.point.events.length;\n    for (let i = 0; i < numEvents; i++) {\n      const evt1 = this.point.events[i];\n      if (evt1.segment.consumedBy !== void 0) continue;\n      for (let j = i + 1; j < numEvents; j++) {\n        const evt2 = this.point.events[j];\n        if (evt2.consumedBy !== void 0) continue;\n        if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n        evt1.segment.consume(evt2.segment);\n      }\n    }\n  }\n  getAvailableLinkedEvents() {\n    const events = [];\n    for (let i = 0, iMax = this.point.events.length; i < iMax; i++) {\n      const evt = this.point.events[i];\n      if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n        events.push(evt);\n      }\n    }\n    return events;\n  }\n  /**\n   * Returns a comparator function for sorting linked events that will\n   * favor the event that will give us the smallest left-side angle.\n   * All ring construction starts as low as possible heading to the right,\n   * so by always turning left as sharp as possible we'll get polygons\n   * without uncessary loops & holes.\n   *\n   * The comparator function has a compute cache such that it avoids\n   * re-computing already-computed values.\n   */\n  getLeftmostComparator(baseEvent) {\n    const cache = /* @__PURE__ */new Map();\n    const fillCache = linkedEvent => {\n      const nextEvent = linkedEvent.otherSE;\n      cache.set(linkedEvent, {\n        sine: sineOfAngle(this.point, baseEvent.point, nextEvent.point),\n        cosine: cosineOfAngle(this.point, baseEvent.point, nextEvent.point)\n      });\n    };\n    return (a, b) => {\n      if (!cache.has(a)) fillCache(a);\n      if (!cache.has(b)) fillCache(b);\n      const {\n        sine: asine,\n        cosine: acosine\n      } = cache.get(a);\n      const {\n        sine: bsine,\n        cosine: bcosine\n      } = cache.get(b);\n      if (asine.isGreaterThanOrEqualTo(0) && bsine.isGreaterThanOrEqualTo(0)) {\n        if (acosine.isLessThan(bcosine)) return 1;\n        if (acosine.isGreaterThan(bcosine)) return -1;\n        return 0;\n      }\n      if (asine.isLessThan(0) && bsine.isLessThan(0)) {\n        if (acosine.isLessThan(bcosine)) return -1;\n        if (acosine.isGreaterThan(bcosine)) return 1;\n        return 0;\n      }\n      if (bsine.isLessThan(asine)) return -1;\n      if (bsine.isGreaterThan(asine)) return 1;\n      return 0;\n    };\n  }\n};\n\n// src/geom-out.ts\nvar RingOut = class _RingOut {\n  events;\n  poly;\n  _isExteriorRing;\n  _enclosingRing;\n  /* Given the segments from the sweep line pass, compute & return a series\n   * of closed rings from all the segments marked to be part of the result */\n  static factory(allSegments) {\n    const ringsOut = [];\n    for (let i = 0, iMax = allSegments.length; i < iMax; i++) {\n      const segment = allSegments[i];\n      if (!segment.isInResult() || segment.ringOut) continue;\n      let prevEvent = null;\n      let event = segment.leftSE;\n      let nextEvent = segment.rightSE;\n      const events = [event];\n      const startingPoint = event.point;\n      const intersectionLEs = [];\n      while (true) {\n        prevEvent = event;\n        event = nextEvent;\n        events.push(event);\n        if (event.point === startingPoint) break;\n        while (true) {\n          const availableLEs = event.getAvailableLinkedEvents();\n          if (availableLEs.length === 0) {\n            const firstPt = events[0].point;\n            const lastPt = events[events.length - 1].point;\n            throw new Error(`Unable to complete output ring starting at [${firstPt.x}, ${firstPt.y}]. Last matching segment found ends at [${lastPt.x}, ${lastPt.y}].`);\n          }\n          if (availableLEs.length === 1) {\n            nextEvent = availableLEs[0].otherSE;\n            break;\n          }\n          let indexLE = null;\n          for (let j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n            if (intersectionLEs[j].point === event.point) {\n              indexLE = j;\n              break;\n            }\n          }\n          if (indexLE !== null) {\n            const intersectionLE = intersectionLEs.splice(indexLE)[0];\n            const ringEvents = events.splice(intersectionLE.index);\n            ringEvents.unshift(ringEvents[0].otherSE);\n            ringsOut.push(new _RingOut(ringEvents.reverse()));\n            continue;\n          }\n          intersectionLEs.push({\n            index: events.length,\n            point: event.point\n          });\n          const comparator = event.getLeftmostComparator(prevEvent);\n          nextEvent = availableLEs.sort(comparator)[0].otherSE;\n          break;\n        }\n      }\n      ringsOut.push(new _RingOut(events));\n    }\n    return ringsOut;\n  }\n  constructor(events) {\n    this.events = events;\n    for (let i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n    this.poly = null;\n  }\n  getGeom() {\n    let prevPt = this.events[0].point;\n    const points = [prevPt];\n    for (let i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n      const pt2 = this.events[i].point;\n      const nextPt2 = this.events[i + 1].point;\n      if (precision.orient(pt2, prevPt, nextPt2) === 0) continue;\n      points.push(pt2);\n      prevPt = pt2;\n    }\n    if (points.length === 1) return null;\n    const pt = points[0];\n    const nextPt = points[1];\n    if (precision.orient(pt, prevPt, nextPt) === 0) points.shift();\n    points.push(points[0]);\n    const step = this.isExteriorRing() ? 1 : -1;\n    const iStart = this.isExteriorRing() ? 0 : points.length - 1;\n    const iEnd = this.isExteriorRing() ? points.length : -1;\n    const orderedPoints = [];\n    for (let i = iStart; i != iEnd; i += step) orderedPoints.push([points[i].x.toNumber(), points[i].y.toNumber()]);\n    return orderedPoints;\n  }\n  isExteriorRing() {\n    if (this._isExteriorRing === void 0) {\n      const enclosing = this.enclosingRing();\n      this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n    }\n    return this._isExteriorRing;\n  }\n  enclosingRing() {\n    if (this._enclosingRing === void 0) {\n      this._enclosingRing = this._calcEnclosingRing();\n    }\n    return this._enclosingRing;\n  }\n  /* Returns the ring that encloses this one, if any */\n  _calcEnclosingRing() {\n    let leftMostEvt = this.events[0];\n    for (let i = 1, iMax = this.events.length; i < iMax; i++) {\n      const evt = this.events[i];\n      if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n    }\n    let prevSeg = leftMostEvt.segment.prevInResult();\n    let prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    while (true) {\n      if (!prevSeg) return null;\n      if (!prevPrevSeg) return prevSeg.ringOut;\n      if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n        if (prevPrevSeg.ringOut?.enclosingRing() !== prevSeg.ringOut) {\n          return prevSeg.ringOut;\n        } else return prevSeg.ringOut?.enclosingRing();\n      }\n      prevSeg = prevPrevSeg.prevInResult();\n      prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    }\n  }\n};\nvar PolyOut = class {\n  exteriorRing;\n  interiorRings;\n  constructor(exteriorRing) {\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n  addInterior(ring) {\n    this.interiorRings.push(ring);\n    ring.poly = this;\n  }\n  getGeom() {\n    const geom0 = this.exteriorRing.getGeom();\n    if (geom0 === null) return null;\n    const geom = [geom0];\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringGeom = this.interiorRings[i].getGeom();\n      if (ringGeom === null) continue;\n      geom.push(ringGeom);\n    }\n    return geom;\n  }\n};\nvar MultiPolyOut = class {\n  rings;\n  polys;\n  constructor(rings) {\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n  getGeom() {\n    const geom = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polyGeom = this.polys[i].getGeom();\n      if (polyGeom === null) continue;\n      geom.push(polyGeom);\n    }\n    return geom;\n  }\n  _composePolys(rings) {\n    const polys = [];\n    for (let i = 0, iMax = rings.length; i < iMax; i++) {\n      const ring = rings[i];\n      if (ring.poly) continue;\n      if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n        const enclosingRing = ring.enclosingRing();\n        if (!enclosingRing?.poly) polys.push(new PolyOut(enclosingRing));\n        enclosingRing?.poly?.addInterior(ring);\n      }\n    }\n    return polys;\n  }\n};\n\n// src/sweep-line.ts\nimport { SplayTreeSet as SplayTreeSet2 } from \"splaytree-ts\";\nvar SweepLine = class {\n  queue;\n  tree;\n  segments;\n  constructor(queue, comparator = Segment.compare) {\n    this.queue = queue;\n    this.tree = new SplayTreeSet2(comparator);\n    this.segments = [];\n  }\n  process(event) {\n    const segment = event.segment;\n    const newEvents = [];\n    if (event.consumedBy) {\n      if (event.isLeft) this.queue.delete(event.otherSE);else this.tree.delete(segment);\n      return newEvents;\n    }\n    if (event.isLeft) this.tree.add(segment);\n    let prevSeg = segment;\n    let nextSeg = segment;\n    do {\n      prevSeg = this.tree.lastBefore(prevSeg);\n    } while (prevSeg != null && prevSeg.consumedBy != void 0);\n    do {\n      nextSeg = this.tree.firstAfter(nextSeg);\n    } while (nextSeg != null && nextSeg.consumedBy != void 0);\n    if (event.isLeft) {\n      let prevMySplitter = null;\n      if (prevSeg) {\n        const prevInter = prevSeg.getIntersection(segment);\n        if (prevInter !== null) {\n          if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n          if (!prevSeg.isAnEndpoint(prevInter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      let nextMySplitter = null;\n      if (nextSeg) {\n        const nextInter = nextSeg.getIntersection(segment);\n        if (nextInter !== null) {\n          if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n          if (!nextSeg.isAnEndpoint(nextInter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      if (prevMySplitter !== null || nextMySplitter !== null) {\n        let mySplitter = null;\n        if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n          const cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n          mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n        }\n        this.queue.delete(segment.rightSE);\n        newEvents.push(segment.rightSE);\n        const newEventsFromSplit = segment.split(mySplitter);\n        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n          newEvents.push(newEventsFromSplit[i]);\n        }\n      }\n      if (newEvents.length > 0) {\n        this.tree.delete(segment);\n        newEvents.push(event);\n      } else {\n        this.segments.push(segment);\n        segment.prev = prevSeg;\n      }\n    } else {\n      if (prevSeg && nextSeg) {\n        const inter = prevSeg.getIntersection(nextSeg);\n        if (inter !== null) {\n          if (!prevSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n          if (!nextSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      this.tree.delete(segment);\n    }\n    return newEvents;\n  }\n  /* Safely split a segment that is currently in the datastructures\n   * IE - a segment other than the one that is currently being processed. */\n  _splitSafely(seg, pt) {\n    this.tree.delete(seg);\n    const rightSE = seg.rightSE;\n    this.queue.delete(rightSE);\n    const newEvents = seg.split(pt);\n    newEvents.push(rightSE);\n    if (seg.consumedBy === void 0) this.tree.add(seg);\n    return newEvents;\n  }\n};\n\n// src/operation.ts\nvar Operation = class {\n  type;\n  numMultiPolys;\n  run(type, geom, moreGeoms) {\n    operation.type = type;\n    const multipolys = [new MultiPolyIn(geom, true)];\n    for (let i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n      multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n    }\n    operation.numMultiPolys = multipolys.length;\n    if (operation.type === \"difference\") {\n      const subject = multipolys[0];\n      let i = 1;\n      while (i < multipolys.length) {\n        if (getBboxOverlap(multipolys[i].bbox, subject.bbox) !== null) i++;else multipolys.splice(i, 1);\n      }\n    }\n    if (operation.type === \"intersection\") {\n      for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n        const mpA = multipolys[i];\n        for (let j = i + 1, jMax = multipolys.length; j < jMax; j++) {\n          if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n        }\n      }\n    }\n    const queue = new SplayTreeSet3(SweepEvent.compare);\n    for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n      const sweepEvents = multipolys[i].getSweepEvents();\n      for (let j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n        queue.add(sweepEvents[j]);\n      }\n    }\n    const sweepLine = new SweepLine(queue);\n    let evt = null;\n    if (queue.size != 0) {\n      evt = queue.first();\n      queue.delete(evt);\n    }\n    while (evt) {\n      const newEvents = sweepLine.process(evt);\n      for (let i = 0, iMax = newEvents.length; i < iMax; i++) {\n        const evt2 = newEvents[i];\n        if (evt2.consumedBy === void 0) queue.add(evt2);\n      }\n      if (queue.size != 0) {\n        evt = queue.first();\n        queue.delete(evt);\n      } else {\n        evt = null;\n      }\n    }\n    precision.reset();\n    const ringsOut = RingOut.factory(sweepLine.segments);\n    const result = new MultiPolyOut(ringsOut);\n    return result.getGeom();\n  }\n};\nvar operation = new Operation();\nvar operation_default = operation;\n\n// src/segment.ts\nvar segmentId = 0;\nvar Segment = class _Segment {\n  id;\n  leftSE;\n  rightSE;\n  rings;\n  windings;\n  ringOut;\n  consumedBy;\n  prev;\n  _prevInResult;\n  _beforeState;\n  _afterState;\n  _isInResult;\n  /* This compare() function is for ordering segments in the sweep\n   * line tree, and does so according to the following criteria:\n   *\n   * Consider the vertical line that lies an infinestimal step to the\n   * right of the right-more of the two left endpoints of the input\n   * segments. Imagine slowly moving a point up from negative infinity\n   * in the increasing y direction. Which of the two segments will that\n   * point intersect first? That segment comes 'before' the other one.\n   *\n   * If neither segment would be intersected by such a line, (if one\n   * or more of the segments are vertical) then the line to be considered\n   * is directly on the right-more of the two left inputs.\n   */\n  static compare(a, b) {\n    const alx = a.leftSE.point.x;\n    const blx = b.leftSE.point.x;\n    const arx = a.rightSE.point.x;\n    const brx = b.rightSE.point.x;\n    if (brx.isLessThan(alx)) return 1;\n    if (arx.isLessThan(blx)) return -1;\n    const aly = a.leftSE.point.y;\n    const bly = b.leftSE.point.y;\n    const ary = a.rightSE.point.y;\n    const bry = b.rightSE.point.y;\n    if (alx.isLessThan(blx)) {\n      if (bly.isLessThan(aly) && bly.isLessThan(ary)) return 1;\n      if (bly.isGreaterThan(aly) && bly.isGreaterThan(ary)) return -1;\n      const aCmpBLeft = a.comparePoint(b.leftSE.point);\n      if (aCmpBLeft < 0) return 1;\n      if (aCmpBLeft > 0) return -1;\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n      return -1;\n    }\n    if (alx.isGreaterThan(blx)) {\n      if (aly.isLessThan(bly) && aly.isLessThan(bry)) return -1;\n      if (aly.isGreaterThan(bly) && aly.isGreaterThan(bry)) return 1;\n      const bCmpALeft = b.comparePoint(a.leftSE.point);\n      if (bCmpALeft !== 0) return bCmpALeft;\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n      return 1;\n    }\n    if (aly.isLessThan(bly)) return -1;\n    if (aly.isGreaterThan(bly)) return 1;\n    if (arx.isLessThan(brx)) {\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n    }\n    if (arx.isGreaterThan(brx)) {\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n    }\n    if (!arx.eq(brx)) {\n      const ay = ary.minus(aly);\n      const ax = arx.minus(alx);\n      const by = bry.minus(bly);\n      const bx = brx.minus(blx);\n      if (ay.isGreaterThan(ax) && by.isLessThan(bx)) return 1;\n      if (ay.isLessThan(ax) && by.isGreaterThan(bx)) return -1;\n    }\n    if (arx.isGreaterThan(brx)) return 1;\n    if (arx.isLessThan(brx)) return -1;\n    if (ary.isLessThan(bry)) return -1;\n    if (ary.isGreaterThan(bry)) return 1;\n    if (a.id < b.id) return -1;\n    if (a.id > b.id) return 1;\n    return 0;\n  }\n  /* Warning: a reference to ringWindings input will be stored,\n   *  and possibly will be later modified */\n  constructor(leftSE, rightSE, rings, windings) {\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings;\n  }\n  static fromRing(pt1, pt2, ring) {\n    let leftPt, rightPt, winding;\n    const cmpPts = SweepEvent.comparePoints(pt1, pt2);\n    if (cmpPts < 0) {\n      leftPt = pt1;\n      rightPt = pt2;\n      winding = 1;\n    } else if (cmpPts > 0) {\n      leftPt = pt2;\n      rightPt = pt1;\n      winding = -1;\n    } else throw new Error(`Tried to create degenerate segment at [${pt1.x}, ${pt1.y}]`);\n    const leftSE = new SweepEvent(leftPt, true);\n    const rightSE = new SweepEvent(rightPt, false);\n    return new _Segment(leftSE, rightSE, [ring], [winding]);\n  }\n  /* When a segment is split, the rightSE is replaced with a new sweep event */\n  replaceRightSE(newRightSE) {\n    this.rightSE = newRightSE;\n    this.rightSE.segment = this;\n    this.rightSE.otherSE = this.leftSE;\n    this.leftSE.otherSE = this.rightSE;\n  }\n  bbox() {\n    const y1 = this.leftSE.point.y;\n    const y2 = this.rightSE.point.y;\n    return {\n      ll: {\n        x: this.leftSE.point.x,\n        y: y1.isLessThan(y2) ? y1 : y2\n      },\n      ur: {\n        x: this.rightSE.point.x,\n        y: y1.isGreaterThan(y2) ? y1 : y2\n      }\n    };\n  }\n  /* A vector from the left point to the right */\n  vector() {\n    return {\n      x: this.rightSE.point.x.minus(this.leftSE.point.x),\n      y: this.rightSE.point.y.minus(this.leftSE.point.y)\n    };\n  }\n  isAnEndpoint(pt) {\n    return pt.x.eq(this.leftSE.point.x) && pt.y.eq(this.leftSE.point.y) || pt.x.eq(this.rightSE.point.x) && pt.y.eq(this.rightSE.point.y);\n  }\n  /* Compare this segment with a point.\n   *\n   * A point P is considered to be colinear to a segment if there\n   * exists a distance D such that if we travel along the segment\n   * from one * endpoint towards the other a distance D, we find\n   * ourselves at point P.\n   *\n   * Return value indicates:\n   *\n   *   1: point lies above the segment (to the left of vertical)\n   *   0: point is colinear to segment\n   *  -1: point lies below the segment (to the right of vertical)\n   */\n  comparePoint(point) {\n    return precision.orient(this.leftSE.point, point, this.rightSE.point);\n  }\n  /**\n   * Given another segment, returns the first non-trivial intersection\n   * between the two segments (in terms of sweep line ordering), if it exists.\n   *\n   * A 'non-trivial' intersection is one that will cause one or both of the\n   * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n   *\n   *   * endpoint of segA with endpoint of segB --> trivial\n   *   * endpoint of segA with point along segB --> non-trivial\n   *   * endpoint of segB with point along segA --> non-trivial\n   *   * point along segA with point along segB --> non-trivial\n   *\n   * If no non-trivial intersection exists, return null\n   * Else, return null.\n   */\n  getIntersection(other) {\n    const tBbox = this.bbox();\n    const oBbox = other.bbox();\n    const bboxOverlap = getBboxOverlap(tBbox, oBbox);\n    if (bboxOverlap === null) return null;\n    const tlp = this.leftSE.point;\n    const trp = this.rightSE.point;\n    const olp = other.leftSE.point;\n    const orp = other.rightSE.point;\n    const touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n    const touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n    const touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n    const touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n    if (touchesThisLSE && touchesOtherLSE) {\n      if (touchesThisRSE && !touchesOtherRSE) return trp;\n      if (!touchesThisRSE && touchesOtherRSE) return orp;\n      return null;\n    }\n    if (touchesThisLSE) {\n      if (touchesOtherRSE) {\n        if (tlp.x.eq(orp.x) && tlp.y.eq(orp.y)) return null;\n      }\n      return tlp;\n    }\n    if (touchesOtherLSE) {\n      if (touchesThisRSE) {\n        if (trp.x.eq(olp.x) && trp.y.eq(olp.y)) return null;\n      }\n      return olp;\n    }\n    if (touchesThisRSE && touchesOtherRSE) return null;\n    if (touchesThisRSE) return trp;\n    if (touchesOtherRSE) return orp;\n    const pt = intersection(tlp, this.vector(), olp, other.vector());\n    if (pt === null) return null;\n    if (!isInBbox(bboxOverlap, pt)) return null;\n    return precision.snap(pt);\n  }\n  /**\n   * Split the given segment into multiple segments on the given points.\n   *  * Each existing segment will retain its leftSE and a new rightSE will be\n   *    generated for it.\n   *  * A new segment will be generated which will adopt the original segment's\n   *    rightSE, and a new leftSE will be generated for it.\n   *  * If there are more than two points given to split on, new segments\n   *    in the middle will be generated with new leftSE and rightSE's.\n   *  * An array of the newly generated SweepEvents will be returned.\n   *\n   * Warning: input array of points is modified\n   */\n  split(point) {\n    const newEvents = [];\n    const alreadyLinked = point.events !== void 0;\n    const newLeftSE = new SweepEvent(point, true);\n    const newRightSE = new SweepEvent(point, false);\n    const oldRightSE = this.rightSE;\n    this.replaceRightSE(newRightSE);\n    newEvents.push(newRightSE);\n    newEvents.push(newLeftSE);\n    const newSeg = new _Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice());\n    if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n      newSeg.swapEvents();\n    }\n    if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n      this.swapEvents();\n    }\n    if (alreadyLinked) {\n      newLeftSE.checkForConsuming();\n      newRightSE.checkForConsuming();\n    }\n    return newEvents;\n  }\n  /* Swap which event is left and right */\n  swapEvents() {\n    const tmpEvt = this.rightSE;\n    this.rightSE = this.leftSE;\n    this.leftSE = tmpEvt;\n    this.leftSE.isLeft = true;\n    this.rightSE.isLeft = false;\n    for (let i = 0, iMax = this.windings.length; i < iMax; i++) {\n      this.windings[i] *= -1;\n    }\n  }\n  /* Consume another segment. We take their rings under our wing\n   * and mark them as consumed. Use for perfectly overlapping segments */\n  consume(other) {\n    let consumer = this;\n    let consumee = other;\n    while (consumer.consumedBy) consumer = consumer.consumedBy;\n    while (consumee.consumedBy) consumee = consumee.consumedBy;\n    const cmp = _Segment.compare(consumer, consumee);\n    if (cmp === 0) return;\n    if (cmp > 0) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    if (consumer.prev === consumee) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    for (let i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n      const ring = consumee.rings[i];\n      const winding = consumee.windings[i];\n      const index = consumer.rings.indexOf(ring);\n      if (index === -1) {\n        consumer.rings.push(ring);\n        consumer.windings.push(winding);\n      } else consumer.windings[index] += winding;\n    }\n    consumee.rings = null;\n    consumee.windings = null;\n    consumee.consumedBy = consumer;\n    consumee.leftSE.consumedBy = consumer.leftSE;\n    consumee.rightSE.consumedBy = consumer.rightSE;\n  }\n  /* The first segment previous segment chain that is in the result */\n  prevInResult() {\n    if (this._prevInResult !== void 0) return this._prevInResult;\n    if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n    return this._prevInResult;\n  }\n  beforeState() {\n    if (this._beforeState !== void 0) return this._beforeState;\n    if (!this.prev) this._beforeState = {\n      rings: [],\n      windings: [],\n      multiPolys: []\n    };else {\n      const seg = this.prev.consumedBy || this.prev;\n      this._beforeState = seg.afterState();\n    }\n    return this._beforeState;\n  }\n  afterState() {\n    if (this._afterState !== void 0) return this._afterState;\n    const beforeState = this.beforeState();\n    this._afterState = {\n      rings: beforeState.rings.slice(0),\n      windings: beforeState.windings.slice(0),\n      multiPolys: []\n    };\n    const ringsAfter = this._afterState.rings;\n    const windingsAfter = this._afterState.windings;\n    const mpsAfter = this._afterState.multiPolys;\n    for (let i = 0, iMax = this.rings.length; i < iMax; i++) {\n      const ring = this.rings[i];\n      const winding = this.windings[i];\n      const index = ringsAfter.indexOf(ring);\n      if (index === -1) {\n        ringsAfter.push(ring);\n        windingsAfter.push(winding);\n      } else windingsAfter[index] += winding;\n    }\n    const polysAfter = [];\n    const polysExclude = [];\n    for (let i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n      if (windingsAfter[i] === 0) continue;\n      const ring = ringsAfter[i];\n      const poly = ring.poly;\n      if (polysExclude.indexOf(poly) !== -1) continue;\n      if (ring.isExterior) polysAfter.push(poly);else {\n        if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n        const index = polysAfter.indexOf(ring.poly);\n        if (index !== -1) polysAfter.splice(index, 1);\n      }\n    }\n    for (let i = 0, iMax = polysAfter.length; i < iMax; i++) {\n      const mp = polysAfter[i].multiPoly;\n      if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n    }\n    return this._afterState;\n  }\n  /* Is this segment part of the final result? */\n  isInResult() {\n    if (this.consumedBy) return false;\n    if (this._isInResult !== void 0) return this._isInResult;\n    const mpsBefore = this.beforeState().multiPolys;\n    const mpsAfter = this.afterState().multiPolys;\n    switch (operation_default.type) {\n      case \"union\":\n        {\n          const noBefores = mpsBefore.length === 0;\n          const noAfters = mpsAfter.length === 0;\n          this._isInResult = noBefores !== noAfters;\n          break;\n        }\n      case \"intersection\":\n        {\n          let least;\n          let most;\n          if (mpsBefore.length < mpsAfter.length) {\n            least = mpsBefore.length;\n            most = mpsAfter.length;\n          } else {\n            least = mpsAfter.length;\n            most = mpsBefore.length;\n          }\n          this._isInResult = most === operation_default.numMultiPolys && least < most;\n          break;\n        }\n      case \"xor\":\n        {\n          const diff = Math.abs(mpsBefore.length - mpsAfter.length);\n          this._isInResult = diff % 2 === 1;\n          break;\n        }\n      case \"difference\":\n        {\n          const isJustSubject = mps => mps.length === 1 && mps[0].isSubject;\n          this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          break;\n        }\n    }\n    return this._isInResult;\n  }\n};\n\n// src/geom-in.ts\nvar RingIn = class {\n  poly;\n  isExterior;\n  segments;\n  bbox;\n  constructor(geomRing, poly, isExterior) {\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    if (typeof geomRing[0][0] !== \"number\" || typeof geomRing[0][1] !== \"number\") {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    const firstPoint = precision.snap({\n      x: new BigNumber2(geomRing[0][0]),\n      y: new BigNumber2(geomRing[0][1])\n    });\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    let prevPoint = firstPoint;\n    for (let i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== \"number\" || typeof geomRing[i][1] !== \"number\") {\n        throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n      }\n      const point = precision.snap({\n        x: new BigNumber2(geomRing[i][0]),\n        y: new BigNumber2(geomRing[i][1])\n      });\n      if (point.x.eq(prevPoint.x) && point.y.eq(prevPoint.y)) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = point.x;\n      if (point.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = point.y;\n      if (point.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = point.x;\n      if (point.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n    if (!firstPoint.x.eq(prevPoint.x) || !firstPoint.y.eq(prevPoint.y)) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.segments.length; i < iMax; i++) {\n      const segment = this.segments[i];\n      sweepEvents.push(segment.leftSE);\n      sweepEvents.push(segment.rightSE);\n    }\n    return sweepEvents;\n  }\n};\nvar PolyIn = class {\n  multiPoly;\n  exteriorRing;\n  interiorRings;\n  bbox;\n  constructor(geomPoly, multiPoly) {\n    if (!Array.isArray(geomPoly)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n    for (let i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      const ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n    this.multiPoly = multiPoly;\n  }\n  getSweepEvents() {\n    const sweepEvents = this.exteriorRing.getSweepEvents();\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringSweepEvents = this.interiorRings[i].getSweepEvents();\n      for (let j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(ringSweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\nvar MultiPolyIn = class {\n  isSubject;\n  polys;\n  bbox;\n  constructor(geom, isSubject) {\n    if (!Array.isArray(geom)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    try {\n      if (typeof geom[0][0][0] === \"number\") geom = [geom];\n    } catch (ex) {}\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: new BigNumber2(Number.POSITIVE_INFINITY),\n        y: new BigNumber2(Number.POSITIVE_INFINITY)\n      },\n      ur: {\n        x: new BigNumber2(Number.NEGATIVE_INFINITY),\n        y: new BigNumber2(Number.NEGATIVE_INFINITY)\n      }\n    };\n    for (let i = 0, iMax = geom.length; i < iMax; i++) {\n      const poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n    this.isSubject = isSubject;\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polySweepEvents = this.polys[i].getSweepEvents();\n      for (let j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(polySweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\n\n// src/index.ts\nvar union = (geom, ...moreGeoms) => operation_default.run(\"union\", geom, moreGeoms);\nvar intersection2 = (geom, ...moreGeoms) => operation_default.run(\"intersection\", geom, moreGeoms);\nvar xor = (geom, ...moreGeoms) => operation_default.run(\"xor\", geom, moreGeoms);\nvar difference = (geom, ...moreGeoms) => operation_default.run(\"difference\", geom, moreGeoms);\nvar setPrecision = precision.set;\nexport { difference, intersection2 as intersection, setPrecision, union, xor };\n", "/*\r\n *      bignumber.js v9.3.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\n\nvar isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\n  mathceil = Math.ceil,\n  mathfloor = Math.floor,\n  bignumberError = '[BigNumber Error] ',\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\n  BASE = 1e14,\n  LOG_BASE = 14,\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,\n  // 2^53 - 1\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\n  SQRT_BASE = 1e7,\n  // EDITABLE\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\n  MAX = 1E9; // 0 to MAX_INT32\n\n/*\r\n * Create and return a BigNumber constructor.\r\n */\nfunction clone(configObject) {\n  var div,\n    convertBase,\n    parseNumeric,\n    P = BigNumber.prototype = {\n      constructor: BigNumber,\n      toString: null,\n      valueOf: null\n    },\n    ONE = new BigNumber(1),\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\n\n    // The default values below must be integers within the inclusive ranges stated.\n    // The values can also be changed at run-time using BigNumber.set.\n\n    // The maximum number of decimal places for operations involving division.\n    DECIMAL_PLACES = 20,\n    // 0 to MAX\n\n    // The rounding mode used when rounding to the above decimal places, and when using\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\n    // UP         0 Away from zero.\n    // DOWN       1 Towards zero.\n    // CEIL       2 Towards +Infinity.\n    // FLOOR      3 Towards -Infinity.\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n    ROUNDING_MODE = 4,\n    // 0 to 8\n\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\n\n    // The exponent value at and beneath which toString returns exponential notation.\n    // Number type: -7\n    TO_EXP_NEG = -7,\n    // 0 to -MAX\n\n    // The exponent value at and above which toString returns exponential notation.\n    // Number type: 21\n    TO_EXP_POS = 21,\n    // 0 to MAX\n\n    // RANGE : [MIN_EXP, MAX_EXP]\n\n    // The minimum exponent value, beneath which underflow to zero occurs.\n    // Number type: -324  (5e-324)\n    MIN_EXP = -1e7,\n    // -1 to -MAX\n\n    // The maximum exponent value, above which overflow to Infinity occurs.\n    // Number type:  308  (1.7976931348623157e+308)\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\n    MAX_EXP = 1e7,\n    // 1 to MAX\n\n    // Whether to use cryptographically-secure random number generation, if available.\n    CRYPTO = false,\n    // true or false\n\n    // The modulo mode used when calculating the modulus: a mod n.\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n    // The remainder (r) is calculated as: r = a - n * q.\n    //\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\n    // DOWN      1 The remainder has the same sign as the dividend.\n    //             This modulo mode is commonly known as 'truncated division' and is\n    //             equivalent to (a % n) in JavaScript.\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\n    //             The remainder is always positive.\n    //\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\n    // modes are commonly used for the modulus operation.\n    // Although the other rounding modes can also be used, they may not give useful results.\n    MODULO_MODE = 1,\n    // 0 to 9\n\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\n    POW_PRECISION = 0,\n    // 0 to MAX\n\n    // The format specification used by the BigNumber.prototype.toFormat method.\n    FORMAT = {\n      prefix: '',\n      groupSize: 3,\n      secondaryGroupSize: 0,\n      groupSeparator: ',',\n      decimalSeparator: '.',\n      fractionGroupSize: 0,\n      fractionGroupSeparator: '\\xA0',\n      // non-breaking space\n      suffix: ''\n    },\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\n    // '-', '.', whitespace, or repeated character.\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\n    alphabetHasNormalDecimalDigits = true;\n\n  //------------------------------------------------------------------------------------------\n\n  // CONSTRUCTOR\n\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\n  function BigNumber(v, b) {\n    var alphabet,\n      c,\n      caseChanged,\n      e,\n      i,\n      isNum,\n      len,\n      str,\n      x = this;\n\n    // Enable constructor call without `new`.\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\n    if (b == null) {\n      if (v && v._isBigNumber === true) {\n        x.s = v.s;\n        if (!v.c || v.e > MAX_EXP) {\n          x.c = x.e = null;\n        } else if (v.e < MIN_EXP) {\n          x.c = [x.e = 0];\n        } else {\n          x.e = v.e;\n          x.c = v.c.slice();\n        }\n        return;\n      }\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\n        // Use `1 / n` to handle minus zero also.\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\n\n        // Fast path for integers, where n < 2147483648 (2**31).\n        if (v === ~~v) {\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\n          if (e > MAX_EXP) {\n            x.c = x.e = null;\n          } else {\n            x.e = e;\n            x.c = [v];\n          }\n          return;\n        }\n        str = String(v);\n      } else {\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\n      }\n\n      // Decimal point?\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\n\n      // Exponential form?\n      if ((i = str.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0) e = i;\n        e += +str.slice(i + 1);\n        str = str.substring(0, i);\n      } else if (e < 0) {\n        // Integer.\n        e = str.length;\n      }\n    } else {\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\n      intCheck(b, 2, ALPHABET.length, 'Base');\n\n      // Allow exponential notation to be used with base 10 argument, while\n      // also rounding to DECIMAL_PLACES as with other bases.\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\n        x = new BigNumber(v);\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\n      }\n      str = String(v);\n      if (isNum = typeof v == 'number') {\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\n\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\n          throw Error(tooManyDigits + v);\n        }\n      } else {\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\n      }\n      alphabet = ALPHABET.slice(0, b);\n      e = i = 0;\n\n      // Check that str is a valid base b number.\n      // Don't use RegExp, so alphabet can contain special characters.\n      for (len = str.length; i < len; i++) {\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\n          if (c == '.') {\n            // If '.' is not the first character and it has not be found before.\n            if (i > e) {\n              e = len;\n              continue;\n            }\n          } else if (!caseChanged) {\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {\n              caseChanged = true;\n              i = -1;\n              e = 0;\n              continue;\n            }\n          }\n          return parseNumeric(x, String(v), isNum, b);\n        }\n      }\n\n      // Prevent later check for length on converted number.\n      isNum = false;\n      str = convertBase(str, b, 10, x.s);\n\n      // Decimal point?\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;\n    }\n\n    // Determine leading zeros.\n    for (i = 0; str.charCodeAt(i) === 48; i++);\n\n    // Determine trailing zeros.\n    for (len = str.length; str.charCodeAt(--len) === 48;);\n    if (str = str.slice(i, ++len)) {\n      len -= i;\n\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n      if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\n        throw Error(tooManyDigits + x.s * v);\n      }\n\n      // Overflow?\n      if ((e = e - i - 1) > MAX_EXP) {\n        // Infinity.\n        x.c = x.e = null;\n\n        // Underflow?\n      } else if (e < MIN_EXP) {\n        // Zero.\n        x.c = [x.e = 0];\n      } else {\n        x.e = e;\n        x.c = [];\n\n        // Transform base\n\n        // e is the base 10 exponent.\n        // i is where to slice str to get the first element of the coefficient array.\n        i = (e + 1) % LOG_BASE;\n        if (e < 0) i += LOG_BASE; // i < 1\n\n        if (i < len) {\n          if (i) x.c.push(+str.slice(0, i));\n          for (len -= LOG_BASE; i < len;) {\n            x.c.push(+str.slice(i, i += LOG_BASE));\n          }\n          i = LOG_BASE - (str = str.slice(i)).length;\n        } else {\n          i -= len;\n        }\n        for (; i--; str += '0');\n        x.c.push(+str);\n      }\n    } else {\n      // Zero.\n      x.c = [x.e = 0];\n    }\n  }\n\n  // CONSTRUCTOR PROPERTIES\n\n  BigNumber.clone = clone;\n  BigNumber.ROUND_UP = 0;\n  BigNumber.ROUND_DOWN = 1;\n  BigNumber.ROUND_CEIL = 2;\n  BigNumber.ROUND_FLOOR = 3;\n  BigNumber.ROUND_HALF_UP = 4;\n  BigNumber.ROUND_HALF_DOWN = 5;\n  BigNumber.ROUND_HALF_EVEN = 6;\n  BigNumber.ROUND_HALF_CEIL = 7;\n  BigNumber.ROUND_HALF_FLOOR = 8;\n  BigNumber.EUCLID = 9;\n\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\n  BigNumber.config = BigNumber.set = function (obj) {\n    var p, v;\n    if (obj != null) {\n      if (typeof obj == 'object') {\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\n          v = obj[p];\n          intCheck(v, 0, MAX, p);\n          DECIMAL_PLACES = v;\n        }\n\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\n          v = obj[p];\n          intCheck(v, 0, 8, p);\n          ROUNDING_MODE = v;\n        }\n\n        // EXPONENTIAL_AT {number|number[]}\n        // Integer, -MAX to MAX inclusive or\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\n          v = obj[p];\n          if (v && v.pop) {\n            intCheck(v[0], -MAX, 0, p);\n            intCheck(v[1], 0, MAX, p);\n            TO_EXP_NEG = v[0];\n            TO_EXP_POS = v[1];\n          } else {\n            intCheck(v, -MAX, MAX, p);\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\n          }\n        }\n\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\n        if (obj.hasOwnProperty(p = 'RANGE')) {\n          v = obj[p];\n          if (v && v.pop) {\n            intCheck(v[0], -MAX, -1, p);\n            intCheck(v[1], 1, MAX, p);\n            MIN_EXP = v[0];\n            MAX_EXP = v[1];\n          } else {\n            intCheck(v, -MAX, MAX, p);\n            if (v) {\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\n            } else {\n              throw Error(bignumberError + p + ' cannot be zero: ' + v);\n            }\n          }\n        }\n\n        // CRYPTO {boolean} true or false.\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\n        // '[BigNumber Error] crypto unavailable'\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\n          v = obj[p];\n          if (v === !!v) {\n            if (v) {\n              if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n                CRYPTO = v;\n              } else {\n                CRYPTO = !v;\n                throw Error(bignumberError + 'crypto unavailable');\n              }\n            } else {\n              CRYPTO = v;\n            }\n          } else {\n            throw Error(bignumberError + p + ' not true or false: ' + v);\n          }\n        }\n\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\n          v = obj[p];\n          intCheck(v, 0, 9, p);\n          MODULO_MODE = v;\n        }\n\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\n          v = obj[p];\n          intCheck(v, 0, MAX, p);\n          POW_PRECISION = v;\n        }\n\n        // FORMAT {object}\n        // '[BigNumber Error] FORMAT not an object: {v}'\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\n          v = obj[p];\n          if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);\n        }\n\n        // ALPHABET {string}\n        // '[BigNumber Error] ALPHABET invalid: {v}'\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\n          v = obj[p];\n\n          // Disallow if less than two characters,\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\n            ALPHABET = v;\n          } else {\n            throw Error(bignumberError + p + ' invalid: ' + v);\n          }\n        }\n      } else {\n        // '[BigNumber Error] Object expected: {v}'\n        throw Error(bignumberError + 'Object expected: ' + obj);\n      }\n    }\n    return {\n      DECIMAL_PLACES: DECIMAL_PLACES,\n      ROUNDING_MODE: ROUNDING_MODE,\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\n      RANGE: [MIN_EXP, MAX_EXP],\n      CRYPTO: CRYPTO,\n      MODULO_MODE: MODULO_MODE,\n      POW_PRECISION: POW_PRECISION,\n      FORMAT: FORMAT,\n      ALPHABET: ALPHABET\n    };\n  };\n\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\n  BigNumber.isBigNumber = function (v) {\n    if (!v || v._isBigNumber !== true) return false;\n    if (!BigNumber.DEBUG) return true;\n    var i,\n      n,\n      c = v.c,\n      e = v.e,\n      s = v.s;\n    out: if ({}.toString.call(c) == '[object Array]') {\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\n        // If the first element is zero, the BigNumber value must be zero.\n        if (c[0] === 0) {\n          if (e === 0 && c.length === 1) return true;\n          break out;\n        }\n\n        // Calculate number of digits that c[0] should have, based on the exponent.\n        i = (e + 1) % LOG_BASE;\n        if (i < 1) i += LOG_BASE;\n\n        // Calculate number of digits of c[0].\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\n        if (String(c[0]).length == i) {\n          for (i = 0; i < c.length; i++) {\n            n = c[i];\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\n          }\n\n          // Last element cannot be zero, unless it is the only element.\n          if (n !== 0) return true;\n        }\n      }\n\n      // Infinity/NaN\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\n      return true;\n    }\n    throw Error(bignumberError + 'Invalid BigNumber: ' + v);\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\n  BigNumber.maximum = BigNumber.max = function () {\n    return maxOrMin(arguments, -1);\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\n  BigNumber.minimum = BigNumber.min = function () {\n    return maxOrMin(arguments, 1);\n  };\n\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\n  BigNumber.random = function () {\n    var pow2_53 = 0x20000000000000;\n\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\n    // Check if Math.random() produces more than 32 bits of randomness.\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\n    var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {\n      return mathfloor(Math.random() * pow2_53);\n    } : function () {\n      return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);\n    };\n    return function (dp) {\n      var a,\n        b,\n        e,\n        k,\n        v,\n        i = 0,\n        c = [],\n        rand = new BigNumber(ONE);\n      if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);\n      k = mathceil(dp / LOG_BASE);\n      if (CRYPTO) {\n        // Browsers supporting crypto.getRandomValues.\n        if (crypto.getRandomValues) {\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\n          for (; i < k;) {\n            // 53 bits:\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\n            //                                     11111 11111111 11111111\n            // 0x20000 is 2^21.\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\n\n            // Rejection sampling:\n            // 0 <= v < 9007199254740992\n            // Probability that v >= 9e15, is\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\n            if (v >= 9e15) {\n              b = crypto.getRandomValues(new Uint32Array(2));\n              a[i] = b[0];\n              a[i + 1] = b[1];\n            } else {\n              // 0 <= v <= 8999999999999999\n              // 0 <= (v % 1e14) <= 99999999999999\n              c.push(v % 1e14);\n              i += 2;\n            }\n          }\n          i = k / 2;\n\n          // Node.js supporting crypto.randomBytes.\n        } else if (crypto.randomBytes) {\n          // buffer\n          a = crypto.randomBytes(k *= 7);\n          for (; i < k;) {\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\n            // 0 <= v < 9007199254740992\n            v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\n            if (v >= 9e15) {\n              crypto.randomBytes(7).copy(a, i);\n            } else {\n              // 0 <= (v % 1e14) <= 99999999999999\n              c.push(v % 1e14);\n              i += 7;\n            }\n          }\n          i = k / 7;\n        } else {\n          CRYPTO = false;\n          throw Error(bignumberError + 'crypto unavailable');\n        }\n      }\n\n      // Use Math.random.\n      if (!CRYPTO) {\n        for (; i < k;) {\n          v = random53bitInt();\n          if (v < 9e15) c[i++] = v % 1e14;\n        }\n      }\n      k = c[--i];\n      dp %= LOG_BASE;\n\n      // Convert trailing digits to zeros according to dp.\n      if (k && dp) {\n        v = POWS_TEN[LOG_BASE - dp];\n        c[i] = mathfloor(k / v) * v;\n      }\n\n      // Remove trailing elements which are zero.\n      for (; c[i] === 0; c.pop(), i--);\n\n      // Zero?\n      if (i < 0) {\n        c = [e = 0];\n      } else {\n        // Remove leading elements which are zero and adjust exponent accordingly.\n        for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\n\n        // Count the digits of the first element of c to determine leading zeros, and...\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\n\n        // adjust the exponent accordingly.\n        if (i < LOG_BASE) e -= LOG_BASE - i;\n      }\n      rand.e = e;\n      rand.c = c;\n      return rand;\n    };\n  }();\n\n  /*\r\n  * Return a BigNumber whose value is the sum of the arguments.\r\n  *\r\n  * arguments {number|string|BigNumber}\r\n  */\n  BigNumber.sum = function () {\n    var i = 1,\n      args = arguments,\n      sum = new BigNumber(args[0]);\n    for (; i < args.length;) sum = sum.plus(args[i++]);\n    return sum;\n  };\n\n  // PRIVATE FUNCTIONS\n\n  // Called by BigNumber and BigNumber.prototype.toString.\n  convertBase = function () {\n    var decimal = '0123456789';\n\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\n      var j,\n        arr = [0],\n        arrL,\n        i = 0,\n        len = str.length;\n      for (; i < len;) {\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\n        arr[0] += alphabet.indexOf(str.charAt(i++));\n        for (j = 0; j < arr.length; j++) {\n          if (arr[j] > baseOut - 1) {\n            if (arr[j + 1] == null) arr[j + 1] = 0;\n            arr[j + 1] += arr[j] / baseOut | 0;\n            arr[j] %= baseOut;\n          }\n        }\n      }\n      return arr.reverse();\n    }\n\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\n    // If the caller is toString, we are converting from base 10 to baseOut.\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\n      var alphabet,\n        d,\n        e,\n        k,\n        r,\n        x,\n        xc,\n        y,\n        i = str.indexOf('.'),\n        dp = DECIMAL_PLACES,\n        rm = ROUNDING_MODE;\n\n      // Non-integer.\n      if (i >= 0) {\n        k = POW_PRECISION;\n\n        // Unlimited precision.\n        POW_PRECISION = 0;\n        str = str.replace('.', '');\n        y = new BigNumber(baseIn);\n        x = y.pow(str.length - i);\n        POW_PRECISION = k;\n\n        // Convert str as if an integer, then restore the fraction part by dividing the\n        // result by its base raised to a power.\n\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);\n        y.e = y.c.length;\n      }\n\n      // Convert the number as integer.\n\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));\n\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\n      e = k = xc.length;\n\n      // Remove trailing zeros.\n      for (; xc[--k] == 0; xc.pop());\n\n      // Zero?\n      if (!xc[0]) return alphabet.charAt(0);\n\n      // Does str represent an integer? If so, no need for the division.\n      if (i < 0) {\n        --e;\n      } else {\n        x.c = xc;\n        x.e = e;\n\n        // The sign is needed for correct rounding.\n        x.s = sign;\n        x = div(x, y, dp, rm, baseOut);\n        xc = x.c;\n        r = x.r;\n        e = x.e;\n      }\n\n      // xc now represents str converted to baseOut.\n\n      // The index of the rounding digit.\n      d = e + dp + 1;\n\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\n      i = xc[d];\n\n      // Look at the rounding digits and mode to determine whether to round up.\n\n      k = baseOut / 2;\n      r = r || d < 0 || xc[d + 1] != null;\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));\n\n      // If the index of the rounding digit is not greater than zero, or xc represents\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\n      // such as 0.00001.\n      if (d < 1 || !xc[0]) {\n        // 1^-dp or 0\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\n      } else {\n        // Truncate xc to the required number of decimal places.\n        xc.length = d;\n\n        // Round up?\n        if (r) {\n          // Rounding up may mean the previous digit has to be rounded up and so on.\n          for (--baseOut; ++xc[--d] > baseOut;) {\n            xc[d] = 0;\n            if (!d) {\n              ++e;\n              xc = [1].concat(xc);\n            }\n          }\n        }\n\n        // Determine trailing zeros.\n        for (k = xc.length; !xc[--k];);\n\n        // E.g. [4, 11, 15] becomes 4bf.\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\n\n        // Add leading zeros, decimal point and trailing zeros as required.\n        str = toFixedPoint(str, e, alphabet.charAt(0));\n      }\n\n      // The caller will add the sign.\n      return str;\n    };\n  }();\n\n  // Perform division in the specified base. Called by div and convertBase.\n  div = function () {\n    // Assume non-zero x and k.\n    function multiply(x, k, base) {\n      var m,\n        temp,\n        xlo,\n        xhi,\n        carry = 0,\n        i = x.length,\n        klo = k % SQRT_BASE,\n        khi = k / SQRT_BASE | 0;\n      for (x = x.slice(); i--;) {\n        xlo = x[i] % SQRT_BASE;\n        xhi = x[i] / SQRT_BASE | 0;\n        m = khi * xlo + xhi * klo;\n        temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\n        x[i] = temp % base;\n      }\n      if (carry) x = [carry].concat(x);\n      return x;\n    }\n    function compare(a, b, aL, bL) {\n      var i, cmp;\n      if (aL != bL) {\n        cmp = aL > bL ? 1 : -1;\n      } else {\n        for (i = cmp = 0; i < aL; i++) {\n          if (a[i] != b[i]) {\n            cmp = a[i] > b[i] ? 1 : -1;\n            break;\n          }\n        }\n      }\n      return cmp;\n    }\n    function subtract(a, b, aL, base) {\n      var i = 0;\n\n      // Subtract b from a.\n      for (; aL--;) {\n        a[aL] -= i;\n        i = a[aL] < b[aL] ? 1 : 0;\n        a[aL] = i * base + a[aL] - b[aL];\n      }\n\n      // Remove leading zeros.\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\n    }\n\n    // x: dividend, y: divisor.\n    return function (x, y, dp, rm, base) {\n      var cmp,\n        e,\n        i,\n        more,\n        n,\n        prod,\n        prodL,\n        q,\n        qc,\n        rem,\n        remL,\n        rem0,\n        xi,\n        xL,\n        yc0,\n        yL,\n        yz,\n        s = x.s == y.s ? 1 : -1,\n        xc = x.c,\n        yc = y.c;\n\n      // Either NaN, Infinity or 0?\n      if (!xc || !xc[0] || !yc || !yc[0]) {\n        return new BigNumber(\n        // Return NaN if either NaN, or both Infinity or 0.\n        !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\n        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\n        xc && xc[0] == 0 || !yc ? s * 0 : s / 0);\n      }\n      q = new BigNumber(s);\n      qc = q.c = [];\n      e = x.e - y.e;\n      s = dp + e + 1;\n      if (!base) {\n        base = BASE;\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\n        s = s / LOG_BASE | 0;\n      }\n\n      // Result exponent may be one less then the current value of e.\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\n      if (yc[i] > (xc[i] || 0)) e--;\n      if (s < 0) {\n        qc.push(1);\n        more = true;\n      } else {\n        xL = xc.length;\n        yL = yc.length;\n        i = 0;\n        s += 2;\n\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\n\n        n = mathfloor(base / (yc[0] + 1));\n\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\n        if (n > 1) {\n          yc = multiply(yc, n, base);\n          xc = multiply(xc, n, base);\n          yL = yc.length;\n          xL = xc.length;\n        }\n        xi = yL;\n        rem = xc.slice(0, yL);\n        remL = rem.length;\n\n        // Add zeros to make remainder as long as divisor.\n        for (; remL < yL; rem[remL++] = 0);\n        yz = yc.slice();\n        yz = [0].concat(yz);\n        yc0 = yc[0];\n        if (yc[1] >= base / 2) yc0++;\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\n\n        do {\n          n = 0;\n\n          // Compare divisor and remainder.\n          cmp = compare(yc, rem, yL, remL);\n\n          // If divisor < remainder.\n          if (cmp < 0) {\n            // Calculate trial digit, n.\n\n            rem0 = rem[0];\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\n\n            // n is how many times the divisor goes into the current remainder.\n            n = mathfloor(rem0 / yc0);\n\n            //  Algorithm:\n            //  product = divisor multiplied by trial digit (n).\n            //  Compare product and remainder.\n            //  If product is greater than remainder:\n            //    Subtract divisor from product, decrement trial digit.\n            //  Subtract product from remainder.\n            //  If product was less than remainder at the last compare:\n            //    Compare new remainder and divisor.\n            //    If remainder is greater than divisor:\n            //      Subtract divisor from remainder, increment trial digit.\n\n            if (n > 1) {\n              // n may be > base only when base is 3.\n              if (n >= base) n = base - 1;\n\n              // product = divisor * trial digit.\n              prod = multiply(yc, n, base);\n              prodL = prod.length;\n              remL = rem.length;\n\n              // Compare product and remainder.\n              // If product > remainder then trial digit n too high.\n              // n is 1 too high about 5% of the time, and is not known to have\n              // ever been more than 1 too high.\n              while (compare(prod, rem, prodL, remL) == 1) {\n                n--;\n\n                // Subtract divisor from product.\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\n                prodL = prod.length;\n                cmp = 1;\n              }\n            } else {\n              // n is 0 or 1, cmp is -1.\n              // If n is 0, there is no need to compare yc and rem again below,\n              // so change cmp to 1 to avoid it.\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\n              if (n == 0) {\n                // divisor < remainder, so n must be at least 1.\n                cmp = n = 1;\n              }\n\n              // product = divisor\n              prod = yc.slice();\n              prodL = prod.length;\n            }\n            if (prodL < remL) prod = [0].concat(prod);\n\n            // Subtract product from remainder.\n            subtract(rem, prod, remL, base);\n            remL = rem.length;\n\n            // If product was < remainder.\n            if (cmp == -1) {\n              // Compare divisor and new remainder.\n              // If divisor < new remainder, subtract divisor from remainder.\n              // Trial digit n too low.\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\n              while (compare(yc, rem, yL, remL) < 1) {\n                n++;\n\n                // Subtract divisor from remainder.\n                subtract(rem, yL < remL ? yz : yc, remL, base);\n                remL = rem.length;\n              }\n            }\n          } else if (cmp === 0) {\n            n++;\n            rem = [0];\n          } // else cmp === 1 and n will be 0\n\n          // Add the next digit, n, to the result array.\n          qc[i++] = n;\n\n          // Update the remainder.\n          if (rem[0]) {\n            rem[remL++] = xc[xi] || 0;\n          } else {\n            rem = [xc[xi]];\n            remL = 1;\n          }\n        } while ((xi++ < xL || rem[0] != null) && s--);\n        more = rem[0] != null;\n\n        // Leading zero?\n        if (!qc[0]) qc.splice(0, 1);\n      }\n      if (base == BASE) {\n        // To calculate q.e, first get the number of digits of qc[0].\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\n\n        // Caller is convertBase.\n      } else {\n        q.e = e;\n        q.r = +more;\n      }\n      return q;\n    };\n  }();\n\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\n  function format(n, i, rm, id) {\n    var c0, e, ne, len, str;\n    if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n    if (!n.c) return n.toString();\n    c0 = n.c[0];\n    ne = n.e;\n    if (i == null) {\n      str = coeffToString(n.c);\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');\n    } else {\n      n = round(new BigNumber(n), i, rm);\n\n      // n.e may have changed if the value was rounded up.\n      e = n.e;\n      str = coeffToString(n.c);\n      len = str.length;\n\n      // toPrecision returns exponential notation if the number of significant digits\n      // specified is less than the number of digits necessary to represent the integer\n      // part of the value in fixed-point notation.\n\n      // Exponential notation.\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\n        // Append zeros?\n        for (; len < i; str += '0', len++);\n        str = toExponential(str, e);\n\n        // Fixed-point notation.\n      } else {\n        i -= ne;\n        str = toFixedPoint(str, e, '0');\n\n        // Append zeros?\n        if (e + 1 > len) {\n          if (--i > 0) for (str += '.'; i--; str += '0');\n        } else {\n          i += e - len;\n          if (i > 0) {\n            if (e + 1 == len) str += '.';\n            for (; i--; str += '0');\n          }\n        }\n      }\n    }\n    return n.s < 0 && c0 ? '-' + str : str;\n  }\n\n  // Handle BigNumber.max and BigNumber.min.\n  // If any number is NaN, return NaN.\n  function maxOrMin(args, n) {\n    var k,\n      y,\n      i = 1,\n      x = new BigNumber(args[0]);\n    for (; i < args.length; i++) {\n      y = new BigNumber(args[i]);\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\n        x = y;\n      }\n    }\n    return x;\n  }\n\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\n  function normalise(n, c, e) {\n    var i = 1,\n      j = c.length;\n\n    // Remove trailing zeros.\n    for (; !c[--j]; c.pop());\n\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\n    for (j = c[0]; j >= 10; j /= 10, i++);\n\n    // Overflow?\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\n      // Infinity.\n      n.c = n.e = null;\n\n      // Underflow?\n    } else if (e < MIN_EXP) {\n      // Zero.\n      n.c = [n.e = 0];\n    } else {\n      n.e = e;\n      n.c = c;\n    }\n    return n;\n  }\n\n  // Handle values that fail the validity test in BigNumber.\n  parseNumeric = function () {\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\n      dotAfter = /^([^.]+)\\.$/,\n      dotBefore = /^\\.([^.]+)$/,\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\n    return function (x, str, isNum, b) {\n      var base,\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\n\n      // No exception on ±Infinity or NaN.\n      if (isInfinityOrNaN.test(s)) {\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\n      } else {\n        if (!isNum) {\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\n          s = s.replace(basePrefix, function (m, p1, p2) {\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\n            return !b || b == base ? p1 : m;\n          });\n          if (b) {\n            base = b;\n\n            // E.g. '1.' to '1', '.1' to '0.1'\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\n          }\n          if (str != s) return new BigNumber(s, base);\n        }\n\n        // '[BigNumber Error] Not a number: {n}'\n        // '[BigNumber Error] Not a base {b} number: {n}'\n        if (BigNumber.DEBUG) {\n          throw Error(bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\n        }\n\n        // NaN\n        x.s = null;\n      }\n      x.c = x.e = null;\n    };\n  }();\n\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\n  function round(x, sd, rm, r) {\n    var d,\n      i,\n      j,\n      k,\n      n,\n      ni,\n      rd,\n      xc = x.c,\n      pows10 = POWS_TEN;\n\n    // if x is not Infinity or NaN...\n    if (xc) {\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\n      // ni is the index of n within x.c.\n      // d is the number of digits of n.\n      // i is the index of rd within n including leading zeros.\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\n      out: {\n        // Get the number of digits of the first element of xc.\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\n        i = sd - d;\n\n        // If the rounding digit is in the first element of xc...\n        if (i < 0) {\n          i += LOG_BASE;\n          j = sd;\n          n = xc[ni = 0];\n\n          // Get the rounding digit at index j of n.\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\n        } else {\n          ni = mathceil((i + 1) / LOG_BASE);\n          if (ni >= xc.length) {\n            if (r) {\n              // Needed by sqrt.\n              for (; xc.length <= ni; xc.push(0));\n              n = rd = 0;\n              d = 1;\n              i %= LOG_BASE;\n              j = i - LOG_BASE + 1;\n            } else {\n              break out;\n            }\n          } else {\n            n = k = xc[ni];\n\n            // Get the number of digits of n.\n            for (d = 1; k >= 10; k /= 10, d++);\n\n            // Get the index of rd within n.\n            i %= LOG_BASE;\n\n            // Get the index of rd within n, adjusted for leading zeros.\n            // The number of leading zeros of n is given by LOG_BASE - d.\n            j = i - LOG_BASE + d;\n\n            // Get the rounding digit at index j of n.\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\n          }\n        }\n        r = r || sd < 0 ||\n        // Are there any non-zero digits after the rounding digit?\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\n        xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\n        r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\n        // Check whether the digit to the left of the rounding digit is odd.\n        (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n        if (sd < 1 || !xc[0]) {\n          xc.length = 0;\n          if (r) {\n            // Convert sd to decimal places.\n            sd -= x.e + 1;\n\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\n            x.e = -sd || 0;\n          } else {\n            // Zero.\n            xc[0] = x.e = 0;\n          }\n          return x;\n        }\n\n        // Remove excess digits.\n        if (i == 0) {\n          xc.length = ni;\n          k = 1;\n          ni--;\n        } else {\n          xc.length = ni + 1;\n          k = pows10[LOG_BASE - i];\n\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n          // j > 0 means i > number of leading zeros of n.\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\n        }\n\n        // Round up?\n        if (r) {\n          for (;;) {\n            // If the digit to be rounded up is in the first element of xc...\n            if (ni == 0) {\n              // i will be the length of xc[0] before k is added.\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\n              j = xc[0] += k;\n              for (k = 1; j >= 10; j /= 10, k++);\n\n              // if i != k the length has increased.\n              if (i != k) {\n                x.e++;\n                if (xc[0] == BASE) xc[0] = 1;\n              }\n              break;\n            } else {\n              xc[ni] += k;\n              if (xc[ni] != BASE) break;\n              xc[ni--] = 0;\n              k = 1;\n            }\n          }\n        }\n\n        // Remove trailing zeros.\n        for (i = xc.length; xc[--i] === 0; xc.pop());\n      }\n\n      // Overflow? Infinity.\n      if (x.e > MAX_EXP) {\n        x.c = x.e = null;\n\n        // Underflow? Zero.\n      } else if (x.e < MIN_EXP) {\n        x.c = [x.e = 0];\n      }\n    }\n    return x;\n  }\n  function valueOf(n) {\n    var str,\n      e = n.e;\n    if (e === null) return n.toString();\n    str = coeffToString(n.c);\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');\n    return n.s < 0 ? '-' + str : str;\n  }\n\n  // PROTOTYPE/INSTANCE METHODS\n\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\n  P.absoluteValue = P.abs = function () {\n    var x = new BigNumber(this);\n    if (x.s < 0) x.s = 1;\n    return x;\n  };\n\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\n  P.comparedTo = function (y, b) {\n    return compare(this, new BigNumber(y, b));\n  };\n\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\n  P.decimalPlaces = P.dp = function (dp, rm) {\n    var c,\n      n,\n      v,\n      x = this;\n    if (dp != null) {\n      intCheck(dp, 0, MAX);\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      return round(new BigNumber(x), dp + x.e + 1, rm);\n    }\n    if (!(c = x.c)) return null;\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\n\n    // Subtract the number of trailing zeros of the last number.\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\n    if (n < 0) n = 0;\n    return n;\n  };\n\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\n  P.dividedBy = P.div = function (y, b) {\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\n    return div(this, new BigNumber(y, b), 0, 1);\n  };\n\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\n  P.exponentiatedBy = P.pow = function (n, m) {\n    var half,\n      isModExp,\n      i,\n      k,\n      more,\n      nIsBig,\n      nIsNeg,\n      nIsOdd,\n      y,\n      x = this;\n    n = new BigNumber(n);\n\n    // Allow NaN and ±Infinity, but not other non-integers.\n    if (n.c && !n.isInteger()) {\n      throw Error(bignumberError + 'Exponent not an integer: ' + valueOf(n));\n    }\n    if (m != null) m = new BigNumber(m);\n\n    // Exponent of MAX_SAFE_INTEGER is 15.\n    nIsBig = n.e > 14;\n\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\n      // The sign of the result of pow when x is negative depends on the evenness of n.\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\n      return m ? y.mod(m) : y;\n    }\n    nIsNeg = n.s < 0;\n    if (m) {\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\n      if (isModExp) x = x.mod(m);\n\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\n    // [1, 240000000]\n    ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\n    // [80000000000000]  [99999750000000]\n    : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\n      // If x is negative and n is odd, k = -0, else k = 0.\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\n\n      // If x >= 1, k = ±Infinity.\n      if (x.e > -1) k = 1 / k;\n\n      // If n is negative return ±0, else return ±Infinity.\n      return new BigNumber(nIsNeg ? 1 / k : k);\n    } else if (POW_PRECISION) {\n      // Truncating each coefficient array to a length of k after each multiplication\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\n      // i.e. there will be a minimum of 28 guard digits retained.\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\n    }\n    if (nIsBig) {\n      half = new BigNumber(0.5);\n      if (nIsNeg) n.s = 1;\n      nIsOdd = isOdd(n);\n    } else {\n      i = Math.abs(+valueOf(n));\n      nIsOdd = i % 2;\n    }\n    y = new BigNumber(ONE);\n\n    // Performs 54 loop iterations for n of 9007199254740991.\n    for (;;) {\n      if (nIsOdd) {\n        y = y.times(x);\n        if (!y.c) break;\n        if (k) {\n          if (y.c.length > k) y.c.length = k;\n        } else if (isModExp) {\n          y = y.mod(m); //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\n        }\n      }\n      if (i) {\n        i = mathfloor(i / 2);\n        if (i === 0) break;\n        nIsOdd = i % 2;\n      } else {\n        n = n.times(half);\n        round(n, n.e + 1, 1);\n        if (n.e > 14) {\n          nIsOdd = isOdd(n);\n        } else {\n          i = +valueOf(n);\n          if (i === 0) break;\n          nIsOdd = i % 2;\n        }\n      }\n      x = x.times(x);\n      if (k) {\n        if (x.c && x.c.length > k) x.c.length = k;\n      } else if (isModExp) {\n        x = x.mod(m); //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\n      }\n    }\n    if (isModExp) return y;\n    if (nIsNeg) y = ONE.div(y);\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\n  P.integerValue = function (rm) {\n    var n = new BigNumber(this);\n    if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n    return round(n, n.e + 1, rm);\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\n  P.isEqualTo = P.eq = function (y, b) {\n    return compare(this, new BigNumber(y, b)) === 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\n  P.isFinite = function () {\n    return !!this.c;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\n  P.isGreaterThan = P.gt = function (y, b) {\n    return compare(this, new BigNumber(y, b)) > 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\n  P.isInteger = function () {\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\n  P.isLessThan = P.lt = function (y, b) {\n    return compare(this, new BigNumber(y, b)) < 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\n  P.isNaN = function () {\n    return !this.s;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\n  P.isNegative = function () {\n    return this.s < 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\n  P.isPositive = function () {\n    return this.s > 0;\n  };\n\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\n  P.isZero = function () {\n    return !!this.c && this.c[0] == 0;\n  };\n\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\n  P.minus = function (y, b) {\n    var i,\n      j,\n      t,\n      xLTy,\n      x = this,\n      a = x.s;\n    y = new BigNumber(y, b);\n    b = y.s;\n\n    // Either NaN?\n    if (!a || !b) return new BigNumber(NaN);\n\n    // Signs differ?\n    if (a != b) {\n      y.s = -b;\n      return x.plus(y);\n    }\n    var xe = x.e / LOG_BASE,\n      ye = y.e / LOG_BASE,\n      xc = x.c,\n      yc = y.c;\n    if (!xe || !ye) {\n      // Either Infinity?\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\n\n      // Either zero?\n      if (!xc[0] || !yc[0]) {\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\n        // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\n        ROUNDING_MODE == 3 ? -0 : 0);\n      }\n    }\n    xe = bitFloor(xe);\n    ye = bitFloor(ye);\n    xc = xc.slice();\n\n    // Determine which is the bigger number.\n    if (a = xe - ye) {\n      if (xLTy = a < 0) {\n        a = -a;\n        t = xc;\n      } else {\n        ye = xe;\n        t = yc;\n      }\n      t.reverse();\n\n      // Prepend zeros to equalise exponents.\n      for (b = a; b--; t.push(0));\n      t.reverse();\n    } else {\n      // Exponents equal. Check digit by digit.\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\n      for (a = b = 0; b < j; b++) {\n        if (xc[b] != yc[b]) {\n          xLTy = xc[b] < yc[b];\n          break;\n        }\n      }\n    }\n\n    // x < y? Point xc to the array of the bigger number.\n    if (xLTy) {\n      t = xc;\n      xc = yc;\n      yc = t;\n      y.s = -y.s;\n    }\n    b = (j = yc.length) - (i = xc.length);\n\n    // Append zeros to xc if shorter.\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\n    if (b > 0) for (; b--; xc[i++] = 0);\n    b = BASE - 1;\n\n    // Subtract yc from xc.\n    for (; j > a;) {\n      if (xc[--j] < yc[j]) {\n        for (i = j; i && !xc[--i]; xc[i] = b);\n        --xc[i];\n        xc[j] += BASE;\n      }\n      xc[j] -= yc[j];\n    }\n\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\n\n    // Zero?\n    if (!xc[0]) {\n      // Following IEEE 754 (2008) 6.3,\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\n      y.c = [y.e = 0];\n      return y;\n    }\n\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\n    // for finite x and y.\n    return normalise(y, xc, ye);\n  };\n\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\n  P.modulo = P.mod = function (y, b) {\n    var q,\n      s,\n      x = this;\n    y = new BigNumber(y, b);\n\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\n    if (!x.c || !y.s || y.c && !y.c[0]) {\n      return new BigNumber(NaN);\n\n      // Return x if y is Infinity or x is zero.\n    } else if (!y.c || x.c && !x.c[0]) {\n      return new BigNumber(x);\n    }\n    if (MODULO_MODE == 9) {\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\n      // r = x - qy    where  0 <= r < abs(y)\n      s = y.s;\n      y.s = 1;\n      q = div(x, y, 0, 3);\n      y.s = s;\n      q.s *= s;\n    } else {\n      q = div(x, y, 0, MODULO_MODE);\n    }\n    y = x.minus(q.times(y));\n\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\n    return y;\n  };\n\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\n  P.multipliedBy = P.times = function (y, b) {\n    var c,\n      e,\n      i,\n      j,\n      k,\n      m,\n      xcL,\n      xlo,\n      xhi,\n      ycL,\n      ylo,\n      yhi,\n      zc,\n      base,\n      sqrtBase,\n      x = this,\n      xc = x.c,\n      yc = (y = new BigNumber(y, b)).c;\n\n    // Either NaN, ±Infinity or ±0?\n    if (!xc || !yc || !xc[0] || !yc[0]) {\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\n        y.c = y.e = y.s = null;\n      } else {\n        y.s *= x.s;\n\n        // Return ±Infinity if either is ±Infinity.\n        if (!xc || !yc) {\n          y.c = y.e = null;\n\n          // Return ±0 if either is ±0.\n        } else {\n          y.c = [0];\n          y.e = 0;\n        }\n      }\n      return y;\n    }\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\n    y.s *= x.s;\n    xcL = xc.length;\n    ycL = yc.length;\n\n    // Ensure xc points to longer array and xcL to its length.\n    if (xcL < ycL) {\n      zc = xc;\n      xc = yc;\n      yc = zc;\n      i = xcL;\n      xcL = ycL;\n      ycL = i;\n    }\n\n    // Initialise the result array with zeros.\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\n    base = BASE;\n    sqrtBase = SQRT_BASE;\n    for (i = ycL; --i >= 0;) {\n      c = 0;\n      ylo = yc[i] % sqrtBase;\n      yhi = yc[i] / sqrtBase | 0;\n      for (k = xcL, j = i + k; j > i;) {\n        xlo = xc[--k] % sqrtBase;\n        xhi = xc[k] / sqrtBase | 0;\n        m = yhi * xlo + xhi * ylo;\n        xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\n        zc[j--] = xlo % base;\n      }\n      zc[j] = c;\n    }\n    if (c) {\n      ++e;\n    } else {\n      zc.splice(0, 1);\n    }\n    return normalise(y, zc, e);\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\n  P.negated = function () {\n    var x = new BigNumber(this);\n    x.s = -x.s || null;\n    return x;\n  };\n\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\n  P.plus = function (y, b) {\n    var t,\n      x = this,\n      a = x.s;\n    y = new BigNumber(y, b);\n    b = y.s;\n\n    // Either NaN?\n    if (!a || !b) return new BigNumber(NaN);\n\n    // Signs differ?\n    if (a != b) {\n      y.s = -b;\n      return x.minus(y);\n    }\n    var xe = x.e / LOG_BASE,\n      ye = y.e / LOG_BASE,\n      xc = x.c,\n      yc = y.c;\n    if (!xe || !ye) {\n      // Return ±Infinity if either ±Infinity.\n      if (!xc || !yc) return new BigNumber(a / 0);\n\n      // Either zero?\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\n    }\n    xe = bitFloor(xe);\n    ye = bitFloor(ye);\n    xc = xc.slice();\n\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\n    if (a = xe - ye) {\n      if (a > 0) {\n        ye = xe;\n        t = yc;\n      } else {\n        a = -a;\n        t = xc;\n      }\n      t.reverse();\n      for (; a--; t.push(0));\n      t.reverse();\n    }\n    a = xc.length;\n    b = yc.length;\n\n    // Point xc to the longer array, and b to the shorter length.\n    if (a - b < 0) {\n      t = yc;\n      yc = xc;\n      xc = t;\n      b = a;\n    }\n\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\n    for (a = 0; b;) {\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\n    }\n    if (a) {\n      xc = [a].concat(xc);\n      ++ye;\n    }\n\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    // ye = MAX_EXP + 1 possible\n    return normalise(y, xc, ye);\n  };\n\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\n  P.precision = P.sd = function (sd, rm) {\n    var c,\n      n,\n      v,\n      x = this;\n    if (sd != null && sd !== !!sd) {\n      intCheck(sd, 1, MAX);\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      return round(new BigNumber(x), sd, rm);\n    }\n    if (!(c = x.c)) return null;\n    v = c.length - 1;\n    n = v * LOG_BASE + 1;\n    if (v = c[v]) {\n      // Subtract the number of trailing zeros of the last element.\n      for (; v % 10 == 0; v /= 10, n--);\n\n      // Add the number of digits of the first element.\n      for (v = c[0]; v >= 10; v /= 10, n++);\n    }\n    if (sd && x.e + 1 > n) n = x.e + 1;\n    return n;\n  };\n\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\n  P.shiftedBy = function (k) {\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    return this.times('1e' + k);\n  };\n\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\n  P.squareRoot = P.sqrt = function () {\n    var m,\n      n,\n      r,\n      rep,\n      t,\n      x = this,\n      c = x.c,\n      s = x.s,\n      e = x.e,\n      dp = DECIMAL_PLACES + 4,\n      half = new BigNumber('0.5');\n\n    // Negative/NaN/Infinity/zero?\n    if (s !== 1 || !c || !c[0]) {\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\n    }\n\n    // Initial estimate.\n    s = Math.sqrt(+valueOf(x));\n\n    // Math.sqrt underflow/overflow?\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n    if (s == 0 || s == 1 / 0) {\n      n = coeffToString(c);\n      if ((n.length + e) % 2 == 0) n += '0';\n      s = Math.sqrt(+n);\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\n      if (s == 1 / 0) {\n        n = '5e' + e;\n      } else {\n        n = s.toExponential();\n        n = n.slice(0, n.indexOf('e') + 1) + e;\n      }\n      r = new BigNumber(n);\n    } else {\n      r = new BigNumber(s + '');\n    }\n\n    // Check for zero.\n    // r could be zero if MIN_EXP is changed after the this value was created.\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\n    // coeffToString to throw.\n    if (r.c[0]) {\n      e = r.e;\n      s = e + dp;\n      if (s < 3) s = 0;\n\n      // Newton-Raphson iteration.\n      for (;;) {\n        t = r;\n        r = half.times(t.plus(div(x, t, dp, 1)));\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\n          // The exponent of r may here be one less than the final result exponent,\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\n          // are indexed correctly.\n          if (r.e < e) --s;\n          n = n.slice(s - 3, s + 1);\n\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\n          // iteration.\n          if (n == '9999' || !rep && n == '4999') {\n            // On the first iteration only, check to see if rounding up gives the\n            // exact result as the nines may infinitely repeat.\n            if (!rep) {\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\n              if (t.times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n            dp += 4;\n            s += 4;\n            rep = 1;\n          } else {\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\n            // result. If not, then there are further digits and m will be truthy.\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n              // Truncate to the first rounding digit.\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\n              m = !r.times(r).eq(x);\n            }\n            break;\n          }\n        }\n      }\n    }\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\n  };\n\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\n  P.toExponential = function (dp, rm) {\n    if (dp != null) {\n      intCheck(dp, 0, MAX);\n      dp++;\n    }\n    return format(this, dp, rm, 1);\n  };\n\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\n  P.toFixed = function (dp, rm) {\n    if (dp != null) {\n      intCheck(dp, 0, MAX);\n      dp = dp + this.e + 1;\n    }\n    return format(this, dp, rm);\n  };\n\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\n  P.toFormat = function (dp, rm, format) {\n    var str,\n      x = this;\n    if (format == null) {\n      if (dp != null && rm && typeof rm == 'object') {\n        format = rm;\n        rm = null;\n      } else if (dp && typeof dp == 'object') {\n        format = dp;\n        dp = rm = null;\n      } else {\n        format = FORMAT;\n      }\n    } else if (typeof format != 'object') {\n      throw Error(bignumberError + 'Argument not an object: ' + format);\n    }\n    str = x.toFixed(dp, rm);\n    if (x.c) {\n      var i,\n        arr = str.split('.'),\n        g1 = +format.groupSize,\n        g2 = +format.secondaryGroupSize,\n        groupSeparator = format.groupSeparator || '',\n        intPart = arr[0],\n        fractionPart = arr[1],\n        isNeg = x.s < 0,\n        intDigits = isNeg ? intPart.slice(1) : intPart,\n        len = intDigits.length;\n      if (g2) {\n        i = g1;\n        g1 = g2;\n        g2 = i;\n        len -= i;\n      }\n      if (g1 > 0 && len > 0) {\n        i = len % g1 || g1;\n        intPart = intDigits.substr(0, i);\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\n        if (isNeg) intPart = '-' + intPart;\n      }\n      str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;\n    }\n    return (format.prefix || '') + str + (format.suffix || '');\n  };\n\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\n  P.toFraction = function (md) {\n    var d,\n      d0,\n      d1,\n      d2,\n      e,\n      exp,\n      n,\n      n0,\n      n1,\n      q,\n      r,\n      s,\n      x = this,\n      xc = x.c;\n    if (md != null) {\n      n = new BigNumber(md);\n\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\n        throw Error(bignumberError + 'Argument ' + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\n      }\n    }\n    if (!xc) return new BigNumber(x);\n    d = new BigNumber(ONE);\n    n1 = d0 = new BigNumber(ONE);\n    d1 = n0 = new BigNumber(ONE);\n    s = coeffToString(xc);\n\n    // Determine initial denominator.\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\n    e = d.e = s.length - x.e - 1;\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\n    md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;\n    exp = MAX_EXP;\n    MAX_EXP = 1 / 0;\n    n = new BigNumber(s);\n\n    // n0 = d1 = 0\n    n0.c[0] = 0;\n    for (;;) {\n      q = div(n, d, 0, 1);\n      d2 = d0.plus(q.times(d1));\n      if (d2.comparedTo(md) == 1) break;\n      d0 = d1;\n      d1 = d2;\n      n1 = n0.plus(q.times(d2 = n1));\n      n0 = d2;\n      d = n.minus(q.times(d2 = d));\n      n = d2;\n    }\n    d2 = div(md.minus(d0), d1, 0, 1);\n    n0 = n0.plus(d2.times(n1));\n    d0 = d0.plus(d2.times(d1));\n    n0.s = n1.s = x.s;\n    e = e * 2;\n\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n    MAX_EXP = exp;\n    return r;\n  };\n\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\n  P.toNumber = function () {\n    return +valueOf(this);\n  };\n\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\n  P.toPrecision = function (sd, rm) {\n    if (sd != null) intCheck(sd, 1, MAX);\n    return format(this, sd, rm, 2);\n  };\n\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\n  P.toString = function (b) {\n    var str,\n      n = this,\n      s = n.s,\n      e = n.e;\n\n    // Infinity or NaN?\n    if (e === null) {\n      if (s) {\n        str = 'Infinity';\n        if (s < 0) str = '-' + str;\n      } else {\n        str = 'NaN';\n      }\n    } else {\n      if (b == null) {\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\n      } else {\n        intCheck(b, 2, ALPHABET.length, 'Base');\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\n      }\n      if (s < 0 && n.c[0]) str = '-' + str;\n    }\n    return str;\n  };\n\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\n  P.valueOf = P.toJSON = function () {\n    return valueOf(this);\n  };\n  P._isBigNumber = true;\n  P[Symbol.toStringTag] = 'BigNumber';\n\n  // Node.js v10.12.0+\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\n  if (configObject != null) BigNumber.set(configObject);\n  return BigNumber;\n}\n\n// PRIVATE HELPER FUNCTIONS\n\n// These functions don't need access to variables,\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\n\nfunction bitFloor(n) {\n  var i = n | 0;\n  return n > 0 || n === i ? i : i - 1;\n}\n\n// Return a coefficient array as a string of base 10 digits.\nfunction coeffToString(a) {\n  var s,\n    z,\n    i = 1,\n    j = a.length,\n    r = a[0] + '';\n  for (; i < j;) {\n    s = a[i++] + '';\n    z = LOG_BASE - s.length;\n    for (; z--; s = '0' + s);\n    r += s;\n  }\n\n  // Determine trailing zeros.\n  for (j = r.length; r.charCodeAt(--j) === 48;);\n  return r.slice(0, j + 1 || 1);\n}\n\n// Compare the value of BigNumbers x and y.\nfunction compare(x, y) {\n  var a,\n    b,\n    xc = x.c,\n    yc = y.c,\n    i = x.s,\n    j = y.s,\n    k = x.e,\n    l = y.e;\n\n  // Either NaN?\n  if (!i || !j) return null;\n  a = xc && !xc[0];\n  b = yc && !yc[0];\n\n  // Either zero?\n  if (a || b) return a ? b ? 0 : -j : i;\n\n  // Signs differ?\n  if (i != j) return i;\n  a = i < 0;\n  b = k == l;\n\n  // Either Infinity?\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\n\n  // Compare exponents.\n  if (!b) return k > l ^ a ? 1 : -1;\n  j = (k = xc.length) < (l = yc.length) ? k : l;\n\n  // Compare digit by digit.\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\n\n  // Compare lengths.\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\n}\n\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\nfunction intCheck(n, min, max, name) {\n  if (n < min || n > max || n !== mathfloor(n)) {\n    throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));\n  }\n}\n\n// Assumes finite n.\nfunction isOdd(n) {\n  var k = n.c.length - 1;\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\n}\nfunction toExponential(str, e) {\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;\n}\nfunction toFixedPoint(str, e, z) {\n  var len, zs;\n\n  // Negative exponent?\n  if (e < 0) {\n    // Prepend zeros.\n    for (zs = z + '.'; ++e; zs += z);\n    str = zs + str;\n\n    // Positive exponent\n  } else {\n    len = str.length;\n\n    // Append zeros.\n    if (++e > len) {\n      for (zs = z, e -= len; --e; zs += z);\n      str += zs;\n    } else if (e < len) {\n      str = str.slice(0, e) + '.' + str.slice(e);\n    }\n  }\n  return str;\n}\n\n// EXPORT\n\nexport var BigNumber = clone();\nexport default BigNumber;", "// src/index.ts\nvar SplayTreeNode = class {\n  key;\n  left = null;\n  right = null;\n  constructor(key) {\n    this.key = key;\n  }\n};\nvar SplayTreeSetNode = class extends SplayTreeNode {\n  constructor(key) {\n    super(key);\n  }\n};\nvar SplayTreeMapNode = class _SplayTreeMapNode extends SplayTreeNode {\n  value;\n  constructor(key, value) {\n    super(key);\n    this.value = value;\n  }\n  replaceValue(value) {\n    const node = new _SplayTreeMapNode(this.key, value);\n    node.left = this.left;\n    node.right = this.right;\n    return node;\n  }\n};\nvar SplayTree = class {\n  size = 0;\n  modificationCount = 0;\n  splayCount = 0;\n  splay(key) {\n    const root = this.root;\n    if (root == null) {\n      this.compare(key, key);\n      return -1;\n    }\n    let right = null;\n    let newTreeRight = null;\n    let left = null;\n    let newTreeLeft = null;\n    let current = root;\n    const compare = this.compare;\n    let comp;\n    while (true) {\n      comp = compare(current.key, key);\n      if (comp > 0) {\n        let currentLeft = current.left;\n        if (currentLeft == null) break;\n        comp = compare(currentLeft.key, key);\n        if (comp > 0) {\n          current.left = currentLeft.right;\n          currentLeft.right = current;\n          current = currentLeft;\n          currentLeft = current.left;\n          if (currentLeft == null) break;\n        }\n        if (right == null) {\n          newTreeRight = current;\n        } else {\n          right.left = current;\n        }\n        right = current;\n        current = currentLeft;\n      } else if (comp < 0) {\n        let currentRight = current.right;\n        if (currentRight == null) break;\n        comp = compare(currentRight.key, key);\n        if (comp < 0) {\n          current.right = currentRight.left;\n          currentRight.left = current;\n          current = currentRight;\n          currentRight = current.right;\n          if (currentRight == null) break;\n        }\n        if (left == null) {\n          newTreeLeft = current;\n        } else {\n          left.right = current;\n        }\n        left = current;\n        current = currentRight;\n      } else {\n        break;\n      }\n    }\n    if (left != null) {\n      left.right = current.left;\n      current.left = newTreeLeft;\n    }\n    if (right != null) {\n      right.left = current.right;\n      current.right = newTreeRight;\n    }\n    if (this.root !== current) {\n      this.root = current;\n      this.splayCount++;\n    }\n    return comp;\n  }\n  splayMin(node) {\n    let current = node;\n    let nextLeft = current.left;\n    while (nextLeft != null) {\n      const left = nextLeft;\n      current.left = left.right;\n      left.right = current;\n      current = left;\n      nextLeft = current.left;\n    }\n    return current;\n  }\n  splayMax(node) {\n    let current = node;\n    let nextRight = current.right;\n    while (nextRight != null) {\n      const right = nextRight;\n      current.right = right.left;\n      right.left = current;\n      current = right;\n      nextRight = current.right;\n    }\n    return current;\n  }\n  _delete(key) {\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp != 0) return null;\n    let root = this.root;\n    const result = root;\n    const left = root.left;\n    this.size--;\n    if (left == null) {\n      this.root = root.right;\n    } else {\n      const right = root.right;\n      root = this.splayMax(left);\n      root.right = right;\n      this.root = root;\n    }\n    this.modificationCount++;\n    return result;\n  }\n  addNewRoot(node, comp) {\n    this.size++;\n    this.modificationCount++;\n    const root = this.root;\n    if (root == null) {\n      this.root = node;\n      return;\n    }\n    if (comp < 0) {\n      node.left = root;\n      node.right = root.right;\n      root.right = null;\n    } else {\n      node.right = root;\n      node.left = root.left;\n      root.left = null;\n    }\n    this.root = node;\n  }\n  _first() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMin(root);\n    return this.root;\n  }\n  _last() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMax(root);\n    return this.root;\n  }\n  clear() {\n    this.root = null;\n    this.size = 0;\n    this.modificationCount++;\n  }\n  has(key) {\n    return this.validKey(key) && this.splay(key) == 0;\n  }\n  defaultCompare() {\n    return (a, b) => a < b ? -1 : a > b ? 1 : 0;\n  }\n  wrap() {\n    return {\n      getRoot: () => {\n        return this.root;\n      },\n      setRoot: root => {\n        this.root = root;\n      },\n      getSize: () => {\n        return this.size;\n      },\n      getModificationCount: () => {\n        return this.modificationCount;\n      },\n      getSplayCount: () => {\n        return this.splayCount;\n      },\n      setSplayCount: count => {\n        this.splayCount = count;\n      },\n      splay: key => {\n        return this.splay(key);\n      },\n      has: key => {\n        return this.has(key);\n      }\n    };\n  }\n};\nvar SplayTreeMap = class extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? (a => a != null && a != void 0);\n  }\n  delete(key) {\n    if (!this.validKey(key)) return false;\n    return this._delete(key) != null;\n  }\n  forEach(f) {\n    const nodes = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value[1], result.value[0], this);\n    }\n  }\n  get(key) {\n    if (!this.validKey(key)) return void 0;\n    if (this.root != null) {\n      const comp = this.splay(key);\n      if (comp == 0) {\n        return this.root.value;\n      }\n    }\n    return void 0;\n  }\n  hasValue(value) {\n    const initialSplayCount = this.splayCount;\n    const visit = node => {\n      while (node != null) {\n        if (node.value == value) return true;\n        if (initialSplayCount != this.splayCount) {\n          throw \"Concurrent modification during iteration.\";\n        }\n        if (node.right != null && visit(node.right)) {\n          return true;\n        }\n        node = node.left;\n      }\n      return false;\n    };\n    return visit(this.root);\n  }\n  set(key, value) {\n    const comp = this.splay(key);\n    if (comp == 0) {\n      this.root = this.root.replaceValue(value);\n      this.splayCount += 1;\n      return this;\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return this;\n  }\n  setAll(other) {\n    other.forEach((value, key) => {\n      this.set(key, value);\n    });\n  }\n  setIfAbsent(key, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      return this.root.value;\n    }\n    const modificationCount = this.modificationCount;\n    const splayCount = this.splayCount;\n    const value = ifAbsent();\n    if (modificationCount != this.modificationCount) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (splayCount != this.splayCount) {\n      comp = this.splay(key);\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return value;\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return !this.isEmpty();\n  }\n  firstKey() {\n    if (this.root == null) return null;\n    return this._first().key;\n  }\n  lastKey() {\n    if (this.root == null) return null;\n    return this._last().key;\n  }\n  lastKeyBefore(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstKeyAfter(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  update(key, update, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = update(this.root.value);\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        this.splay(key);\n      }\n      this.root = this.root.replaceValue(newValue);\n      this.splayCount += 1;\n      return newValue;\n    }\n    if (ifAbsent != null) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = ifAbsent();\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        comp = this.splay(key);\n      }\n      this.addNewRoot(new SplayTreeMapNode(key, newValue), comp);\n      return newValue;\n    }\n    throw \"Invalid argument (key): Key not in map.\";\n  }\n  updateAll(update) {\n    const root = this.root;\n    if (root == null) return;\n    const iterator = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let node;\n    while (node = iterator.next(), !node.done) {\n      const newValue = update(...node.value);\n      iterator.replaceValue(newValue);\n    }\n  }\n  keys() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  values() {\n    return new SplayTreeValueIterableIterator(this.wrap());\n  }\n  entries() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeMapEntryIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Map]\";\n};\nvar SplayTreeSet = class _SplayTreeSet extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? (v => v != null && v != void 0);\n  }\n  delete(element) {\n    if (!this.validKey(element)) return false;\n    return this._delete(element) != null;\n  }\n  deleteAll(elements) {\n    for (const element of elements) {\n      this.delete(element);\n    }\n  }\n  forEach(f) {\n    const nodes = this[Symbol.iterator]();\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value, result.value, this);\n    }\n  }\n  add(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this;\n  }\n  addAndReturn(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this.root.key;\n  }\n  addAll(elements) {\n    for (const element of elements) {\n      this.add(element);\n    }\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return this.root != null;\n  }\n  single() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    if (this.size > 1) throw \"Bad state: Too many element\";\n    return this.root.key;\n  }\n  first() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._first().key;\n  }\n  last() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._last().key;\n  }\n  lastBefore(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstAfter(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  retainAll(elements) {\n    const retainSet = new _SplayTreeSet(this.compare, this.validKey);\n    const modificationCount = this.modificationCount;\n    for (const object of elements) {\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (this.validKey(object) && this.splay(object) == 0) {\n        retainSet.add(this.root.key);\n      }\n    }\n    if (retainSet.size != this.size) {\n      this.root = retainSet.root;\n      this.size = retainSet.size;\n      this.modificationCount++;\n    }\n  }\n  lookup(object) {\n    if (!this.validKey(object)) return null;\n    const comp = this.splay(object);\n    if (comp != 0) return null;\n    return this.root.key;\n  }\n  intersection(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  difference(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (!other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  union(other) {\n    const u = this.clone();\n    u.addAll(other);\n    return u;\n  }\n  clone() {\n    const set = new _SplayTreeSet(this.compare, this.validKey);\n    set.size = this.size;\n    set.root = this.copyNode(this.root);\n    return set;\n  }\n  copyNode(node) {\n    if (node == null) return null;\n    function copyChildren(node2, dest) {\n      let left;\n      let right;\n      do {\n        left = node2.left;\n        right = node2.right;\n        if (left != null) {\n          const newLeft = new SplayTreeSetNode(left.key);\n          dest.left = newLeft;\n          copyChildren(left, newLeft);\n        }\n        if (right != null) {\n          const newRight = new SplayTreeSetNode(right.key);\n          dest.right = newRight;\n          node2 = right;\n          dest = newRight;\n        }\n      } while (right != null);\n    }\n    const result = new SplayTreeSetNode(node.key);\n    copyChildren(node, result);\n    return result;\n  }\n  toSet() {\n    return this.clone();\n  }\n  entries() {\n    return new SplayTreeSetEntryIterableIterator(this.wrap());\n  }\n  keys() {\n    return this[Symbol.iterator]();\n  }\n  values() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Set]\";\n};\nvar SplayTreeIterableIterator = class {\n  tree;\n  path = new Array();\n  modificationCount = null;\n  splayCount;\n  constructor(tree) {\n    this.tree = tree;\n    this.splayCount = tree.getSplayCount();\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    if (this.moveNext()) return {\n      done: false,\n      value: this.current()\n    };\n    return {\n      done: true,\n      value: null\n    };\n  }\n  current() {\n    if (!this.path.length) return null;\n    const node = this.path[this.path.length - 1];\n    return this.getValue(node);\n  }\n  rebuildPath(key) {\n    this.path.splice(0, this.path.length);\n    this.tree.splay(key);\n    this.path.push(this.tree.getRoot());\n    this.splayCount = this.tree.getSplayCount();\n  }\n  findLeftMostDescendent(node) {\n    while (node != null) {\n      this.path.push(node);\n      node = node.left;\n    }\n  }\n  moveNext() {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      if (this.modificationCount == null) {\n        this.modificationCount = this.tree.getModificationCount();\n        let node2 = this.tree.getRoot();\n        while (node2 != null) {\n          this.path.push(node2);\n          node2 = node2.left;\n        }\n        return this.path.length > 0;\n      }\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (!this.path.length) return false;\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    let node = this.path[this.path.length - 1];\n    let next = node.right;\n    if (next != null) {\n      while (next != null) {\n        this.path.push(next);\n        next = next.left;\n      }\n      return true;\n    }\n    this.path.pop();\n    while (this.path.length && this.path[this.path.length - 1].right === node) {\n      node = this.path.pop();\n    }\n    return this.path.length > 0;\n  }\n};\nvar SplayTreeKeyIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return node.key;\n  }\n};\nvar SplayTreeSetEntryIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return [node.key, node.key];\n  }\n};\nvar SplayTreeValueIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return node.value;\n  }\n};\nvar SplayTreeMapEntryIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return [node.key, node.value];\n  }\n  replaceValue(value) {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    const last = this.path.pop();\n    const newLast = last.replaceValue(value);\n    if (!this.path.length) {\n      this.tree.setRoot(newLast);\n    } else {\n      const parent = this.path[this.path.length - 1];\n      if (last === parent.left) {\n        parent.left = newLast;\n      } else {\n        parent.right = newLast;\n      }\n    }\n    this.path.push(newLast);\n    const count = this.tree.getSplayCount() + 1;\n    this.tree.setSplayCount(count);\n    this.splayCount = count;\n  }\n};\nexport { SplayTreeMap, SplayTreeSet };\n", "// index.ts\nimport * as polyclip from \"polyclip-ts\";\nimport { polygon, multiPolygon } from \"@turf/helpers\";\nimport { geomEach } from \"@turf/meta\";\nfunction difference2(features) {\n  const geoms = [];\n  geomEach(features, geom => {\n    geoms.push(geom.coordinates);\n  });\n  if (geoms.length < 2) {\n    throw new Error(\"Must have at least two features\");\n  }\n  const properties = features.features[0].properties || {};\n  const differenced = polyclip.difference(geoms[0], ...geoms.slice(1));\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\nvar turf_difference_default = difference2;\nexport { turf_difference_default as default, difference2 as difference };\n", "// index.ts\nimport { flattenEach } from \"@turf/meta\";\nimport { featureCollection } from \"@turf/helpers\";\nfunction flatten(geojson) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  var results = [];\n  flattenEach(geojson, function (feature) {\n    results.push(feature);\n  });\n  return featureCollection(results);\n}\nvar turf_flatten_default = flatten;\nexport { turf_flatten_default as default, flatten };\n", "// index.ts\nimport { featureCollection, isObject, multiPolygon } from \"@turf/helpers\";\nimport { collectionOf } from \"@turf/invariant\";\nimport { featureEach } from \"@turf/meta\";\nimport { flatten } from \"@turf/flatten\";\nimport * as polyclip from \"polyclip-ts\";\nfunction dissolve(fc, options = {}) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const {\n    propertyName\n  } = options;\n  collectionOf(fc, \"Polygon\", \"dissolve\");\n  const outFeatures = [];\n  if (!propertyName) {\n    return flatten(multiPolygon(polyclip.union.apply(null,\n    // List of polygons expressed as Position[][][] a.k.a. Geom[]\n    fc.features.map(function (f) {\n      return f.geometry.coordinates;\n    }))));\n  } else {\n    const uniquePropertyVals = {};\n    featureEach(fc, function (feature) {\n      if (feature.properties) {\n        if (!Object.prototype.hasOwnProperty.call(uniquePropertyVals, feature.properties[propertyName])) {\n          uniquePropertyVals[feature.properties[propertyName]] = [];\n        }\n        uniquePropertyVals[feature.properties[propertyName]].push(feature);\n      }\n    });\n    const vals = Object.keys(uniquePropertyVals);\n    for (let i = 0; i < vals.length; i++) {\n      const mp = multiPolygon(polyclip.union.apply(null,\n      // List of polygons expressed as Position[][][] a.k.a. Geom[]\n      uniquePropertyVals[vals[i]].map(function (f) {\n        return f.geometry.coordinates;\n      })));\n      if (mp && mp.properties) {\n        mp.properties[propertyName] = vals[i];\n        outFeatures.push(mp);\n      }\n    }\n  }\n  return flatten(featureCollection(outFeatures));\n}\nvar turf_dissolve_default = dissolve;\nexport { turf_dissolve_default as default, dissolve };\n", "// index.ts\nimport { centroid } from \"@turf/centroid\";\nimport { getCoord } from \"@turf/invariant\";\nimport { featureEach } from \"@turf/meta\";\nfunction pNormDistance(feature1, feature2, p = 2) {\n  const coordinate1 = getCoord(feature1);\n  const coordinate2 = getCoord(feature2);\n  const xDiff = coordinate1[0] - coordinate2[0];\n  const yDiff = coordinate1[1] - coordinate2[1];\n  if (p === 1) {\n    return Math.abs(xDiff) + Math.abs(yDiff);\n  }\n  return Math.pow(Math.pow(xDiff, p) + Math.pow(yDiff, p), 1 / p);\n}\nfunction distanceWeight(fc, options) {\n  var _a, _b;\n  options = options || {};\n  const threshold = options.threshold || 1e4;\n  const p = options.p || 2;\n  const binary = (_a = options.binary) != null ? _a : false;\n  const alpha = options.alpha || -1;\n  const rowTransform = (_b = options.standardization) != null ? _b : false;\n  const features = [];\n  featureEach(fc, feature => {\n    features.push(centroid(feature));\n  });\n  const weights = [];\n  for (let i = 0; i < features.length; i++) {\n    weights[i] = [];\n  }\n  for (let i = 0; i < features.length; i++) {\n    for (let j = i; j < features.length; j++) {\n      if (i === j) {\n        weights[i][j] = 0;\n      }\n      const dis = pNormDistance(features[i], features[j], p);\n      weights[i][j] = dis;\n      weights[j][i] = dis;\n    }\n  }\n  for (let i = 0; i < features.length; i++) {\n    for (let j = 0; j < features.length; j++) {\n      const dis = weights[i][j];\n      if (dis === 0) {\n        continue;\n      }\n      if (binary) {\n        if (dis <= threshold) {\n          weights[i][j] = 1;\n        } else {\n          weights[i][j] = 0;\n        }\n      } else {\n        if (dis <= threshold) {\n          weights[i][j] = Math.pow(dis, alpha);\n        } else {\n          weights[i][j] = 0;\n        }\n      }\n    }\n  }\n  if (rowTransform) {\n    for (let i = 0; i < features.length; i++) {\n      const rowSum = weights[i].reduce((sum, currentVal) => {\n        return sum + currentVal;\n      }, 0);\n      for (let j = 0; j < features.length; j++) {\n        weights[i][j] = weights[i][j] / rowSum;\n      }\n    }\n  }\n  return weights;\n}\nvar turf_distance_weight_default = distanceWeight;\nexport { turf_distance_weight_default as default, distanceWeight, pNormDistance };\n", "// index.ts\nimport { convertLength, degreesToRadians, earthRadius, point } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction rhumbDestination(origin, distance, bearing, options = {}) {\n  const wasNegativeDistance = distance < 0;\n  let distanceInMeters = convertLength(Math.abs(distance), options.units, \"meters\");\n  if (wasNegativeDistance) distanceInMeters = -Math.abs(distanceInMeters);\n  const coords = getCoord(origin);\n  const destination = calculateRhumbDestination(coords, distanceInMeters, bearing);\n  destination[0] += destination[0] - coords[0] > 180 ? -360 : coords[0] - destination[0] > 180 ? 360 : 0;\n  return point(destination, options.properties);\n}\nfunction calculateRhumbDestination(origin, distance, bearing, radius) {\n  radius = radius === void 0 ? earthRadius : Number(radius);\n  const delta = distance / radius;\n  const lambda1 = origin[0] * Math.PI / 180;\n  const phi1 = degreesToRadians(origin[1]);\n  const theta = degreesToRadians(bearing);\n  const DeltaPhi = delta * Math.cos(theta);\n  let phi2 = phi1 + DeltaPhi;\n  if (Math.abs(phi2) > Math.PI / 2) {\n    phi2 = phi2 > 0 ? Math.PI - phi2 : -Math.PI - phi2;\n  }\n  const DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n  const q = Math.abs(DeltaPsi) > 1e-11 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n  const DeltaLambda = delta * Math.sin(theta) / q;\n  const lambda2 = lambda1 + DeltaLambda;\n  return [(lambda2 * 180 / Math.PI + 540) % 360 - 180, phi2 * 180 / Math.PI];\n}\nvar turf_rhumb_destination_default = rhumbDestination;\nexport { turf_rhumb_destination_default as default, rhumbDestination };\n", "// index.ts\nimport { convertLength, earthRadius } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction rhumbDistance(from, to, options = {}) {\n  const origin = getCoord(from);\n  const destination = getCoord(to);\n  destination[0] += destination[0] - origin[0] > 180 ? -360 : origin[0] - destination[0] > 180 ? 360 : 0;\n  const distanceInMeters = calculateRhumbDistance(origin, destination);\n  const distance = convertLength(distanceInMeters, \"meters\", options.units);\n  return distance;\n}\nfunction calculateRhumbDistance(origin, destination, radius) {\n  radius = radius === void 0 ? earthRadius : Number(radius);\n  const R = radius;\n  const phi1 = origin[1] * Math.PI / 180;\n  const phi2 = destination[1] * Math.PI / 180;\n  const DeltaPhi = phi2 - phi1;\n  let DeltaLambda = Math.abs(destination[0] - origin[0]) * Math.PI / 180;\n  if (DeltaLambda > Math.PI) {\n    DeltaLambda -= 2 * Math.PI;\n  }\n  const DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n  const q = Math.abs(DeltaPsi) > 1e-11 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n  const delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda);\n  const dist = delta * R;\n  return dist;\n}\nvar turf_rhumb_distance_default = rhumbDistance;\nexport { turf_rhumb_distance_default as default, rhumbDistance };\n", "// index.ts\nimport { centroid } from \"@turf/centroid\";\nimport { rhumbBearing } from \"@turf/rhumb-bearing\";\nimport { rhumbDistance } from \"@turf/rhumb-distance\";\nimport { rhumbDestination } from \"@turf/rhumb-destination\";\nimport { clone } from \"@turf/clone\";\nimport { coordEach } from \"@turf/meta\";\nimport { getCoords } from \"@turf/invariant\";\nimport { isObject } from \"@turf/helpers\";\nfunction transformRotate(geojson, angle, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const pivot = options.pivot;\n  const mutate = options.mutate;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (angle === void 0 || angle === null || isNaN(angle)) throw new Error(\"angle is required\");\n  if (angle === 0) return geojson;\n  const pivotCoord = pivot != null ? pivot : centroid(geojson);\n  if (mutate === false || mutate === void 0) geojson = clone(geojson);\n  coordEach(geojson, function (pointCoords) {\n    const initialAngle = rhumbBearing(pivotCoord, pointCoords);\n    const finalAngle = initialAngle + angle;\n    const distance = rhumbDistance(pivotCoord, pointCoords);\n    const newCoords = getCoords(rhumbDestination(pivotCoord, distance, finalAngle));\n    pointCoords[0] = newCoords[0];\n    pointCoords[1] = newCoords[1];\n  });\n  return geojson;\n}\nvar turf_transform_rotate_default = transformRotate;\nexport { turf_transform_rotate_default as default, transformRotate };\n", "// index.ts\nimport { degreesToRadians, polygon, isObject, isNumber } from \"@turf/helpers\";\nimport { rhumbDestination } from \"@turf/rhumb-destination\";\nimport { transformRotate } from \"@turf/transform-rotate\";\nimport { getCoord } from \"@turf/invariant\";\nfunction ellipse(center, xSemiAxis, ySemiAxis, options) {\n  options = options || {};\n  const steps = options.steps || 64;\n  const units = options.units || \"kilometers\";\n  const angle = options.angle || 0;\n  const pivot = options.pivot || center;\n  const properties = options.properties || {};\n  if (!center) throw new Error(\"center is required\");\n  if (!xSemiAxis) throw new Error(\"xSemiAxis is required\");\n  if (!ySemiAxis) throw new Error(\"ySemiAxis is required\");\n  if (!isObject(options)) throw new Error(\"options must be an object\");\n  if (!isNumber(steps)) throw new Error(\"steps must be a number\");\n  if (!isNumber(angle)) throw new Error(\"angle must be a number\");\n  const centerCoords = getCoord(center);\n  if (units !== \"degrees\") {\n    const xDest = rhumbDestination(center, xSemiAxis, 90, {\n      units\n    });\n    const yDest = rhumbDestination(center, ySemiAxis, 0, {\n      units\n    });\n    xSemiAxis = getCoord(xDest)[0] - centerCoords[0];\n    ySemiAxis = getCoord(yDest)[1] - centerCoords[1];\n  }\n  const coordinates = [];\n  for (let i = 0; i < steps; i += 1) {\n    const stepAngle = i * -360 / steps;\n    let x = xSemiAxis * ySemiAxis / Math.sqrt(Math.pow(ySemiAxis, 2) + Math.pow(xSemiAxis, 2) * Math.pow(getTanDeg(stepAngle), 2));\n    let y = xSemiAxis * ySemiAxis / Math.sqrt(Math.pow(xSemiAxis, 2) + Math.pow(ySemiAxis, 2) / Math.pow(getTanDeg(stepAngle), 2));\n    if (stepAngle < -90 && stepAngle >= -270) x = -x;\n    if (stepAngle < -180 && stepAngle >= -360) y = -y;\n    if (units === \"degrees\") {\n      const angleRad = degreesToRadians(angle);\n      const newx = x * Math.cos(angleRad) + y * Math.sin(angleRad);\n      const newy = y * Math.cos(angleRad) - x * Math.sin(angleRad);\n      x = newx;\n      y = newy;\n    }\n    coordinates.push([x + centerCoords[0], y + centerCoords[1]]);\n  }\n  coordinates.push(coordinates[0]);\n  if (units === \"degrees\") {\n    return polygon([coordinates], properties);\n  } else {\n    return transformRotate(polygon([coordinates], properties), angle, {\n      pivot\n    });\n  }\n}\nfunction getTanDeg(deg) {\n  const rad = deg * Math.PI / 180;\n  return Math.tan(rad);\n}\nvar turf_ellipse_default = ellipse;\nexport { turf_ellipse_default as default, ellipse };\n", "// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { bboxPolygon } from \"@turf/bbox-polygon\";\nfunction envelope(geojson) {\n  return bboxPolygon(bbox(geojson));\n}\nvar turf_envelope_default = envelope;\nexport { turf_envelope_default as default, envelope };\n", "// index.ts\nimport { coordEach, featureEach } from \"@turf/meta\";\nimport { point, featureCollection } from \"@turf/helpers\";\nfunction explode(geojson) {\n  const points = [];\n  if (geojson.type === \"FeatureCollection\") {\n    featureEach(geojson, function (feature) {\n      coordEach(feature, function (coord) {\n        points.push(point(coord, feature.properties));\n      });\n    });\n  } else if (geojson.type === \"Feature\") {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord, geojson.properties));\n    });\n  } else {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord));\n    });\n  }\n  return featureCollection(points);\n}\nvar turf_explode_default = explode;\nexport { turf_explode_default as default, explode };\n", "// index.ts\nimport { coordEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nimport { clone } from \"@turf/clone\";\nfunction flip(geojson, options) {\n  var _a;\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const mutate = (_a = options.mutate) != null ? _a : false;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (mutate === false || mutate === void 0) geojson = clone(geojson);\n  coordEach(geojson, function (coord) {\n    var x = coord[0];\n    var y = coord[1];\n    coord[0] = y;\n    coord[1] = x;\n  });\n  return geojson;\n}\nvar turf_flip_default = flip;\nexport { turf_flip_default as default, flip };\n", "// index.js\nimport { lineString } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n\n// lib/arc.js\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\nvar Coord = function (lon, lat) {\n  this.lon = lon;\n  this.lat = lat;\n  this.x = D2R * lon;\n  this.y = D2R * lat;\n};\nCoord.prototype.view = function () {\n  return String(this.lon).slice(0, 4) + \",\" + String(this.lat).slice(0, 4);\n};\nCoord.prototype.antipode = function () {\n  var anti_lat = -1 * this.lat;\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\n  return new Coord(anti_lon, anti_lat);\n};\nvar LineString = function () {\n  this.coords = [];\n  this.length = 0;\n};\nLineString.prototype.move_to = function (coord) {\n  this.length++;\n  this.coords.push(coord);\n};\nvar Arc = function (properties) {\n  this.properties = properties || {};\n  this.geometries = [];\n};\nArc.prototype.json = function () {\n  if (this.geometries.length <= 0) {\n    return {\n      geometry: {\n        type: \"LineString\",\n        coordinates: null\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  } else if (this.geometries.length === 1) {\n    return {\n      geometry: {\n        type: \"LineString\",\n        coordinates: this.geometries[0].coords\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  } else {\n    var multiline = [];\n    for (var i = 0; i < this.geometries.length; i++) {\n      multiline.push(this.geometries[i].coords);\n    }\n    return {\n      geometry: {\n        type: \"MultiLineString\",\n        coordinates: multiline\n      },\n      type: \"Feature\",\n      properties: this.properties\n    };\n  }\n};\nArc.prototype.wkt = function () {\n  var wkt_string = \"\";\n  var wkt = \"LINESTRING(\";\n  var collect = function (c) {\n    wkt += c[0] + \" \" + c[1] + \",\";\n  };\n  for (var i = 0; i < this.geometries.length; i++) {\n    if (this.geometries[i].coords.length === 0) {\n      return \"LINESTRING(empty)\";\n    } else {\n      var coords = this.geometries[i].coords;\n      coords.forEach(collect);\n      wkt_string += wkt.substring(0, wkt.length - 1) + \")\";\n    }\n  }\n  return wkt_string;\n};\nvar GreatCircle = function (start, end, properties) {\n  if (!start || start.x === void 0 || start.y === void 0) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n  if (!end || end.x === void 0 || end.y === void 0) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n  this.start = new Coord(start.x, start.y);\n  this.end = new Coord(end.x, end.y);\n  this.properties = properties || {};\n  var w = this.start.x - this.end.x;\n  var h = this.start.y - this.end.y;\n  var z = Math.pow(Math.sin(h / 2), 2) + Math.cos(this.start.y) * Math.cos(this.end.y) * Math.pow(Math.sin(w / 2), 2);\n  this.g = 2 * Math.asin(Math.sqrt(z));\n  if (this.g === Math.PI) {\n    throw new Error(\"it appears \" + start.view() + \" and \" + end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n  } else if (isNaN(this.g)) {\n    throw new Error(\"could not calculate great circle between \" + start + \" and \" + end);\n  }\n};\nGreatCircle.prototype.interpolate = function (f) {\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\n  var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n  var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n  var lon = R2D * Math.atan2(y, x);\n  return [lon, lat];\n};\nGreatCircle.prototype.Arc = function (npoints, options) {\n  var first_pass = [];\n  if (!npoints || npoints <= 2) {\n    first_pass.push([this.start.lon, this.start.lat]);\n    first_pass.push([this.end.lon, this.end.lat]);\n  } else {\n    var delta = 1 / (npoints - 1);\n    for (var i = 0; i < npoints; ++i) {\n      var step = delta * i;\n      var pair = this.interpolate(step);\n      first_pass.push(pair);\n    }\n  }\n  var bHasBigDiff = false;\n  var dfMaxSmallDiffLong = 0;\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\n  var dfLeftBorderX = 180 - dfDateLineOffset;\n  var dfRightBorderX = -180 + dfDateLineOffset;\n  var dfDiffSpace = 360 - dfDateLineOffset;\n  for (var j = 1; j < first_pass.length; ++j) {\n    var dfPrevX = first_pass[j - 1][0];\n    var dfX = first_pass[j][0];\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\n    if (dfDiffLong > dfDiffSpace && (dfX > dfLeftBorderX && dfPrevX < dfRightBorderX || dfPrevX > dfLeftBorderX && dfX < dfRightBorderX)) {\n      bHasBigDiff = true;\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\n      dfMaxSmallDiffLong = dfDiffLong;\n    }\n  }\n  var poMulti = [];\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n    var poNewLS = [];\n    poMulti.push(poNewLS);\n    for (var k = 0; k < first_pass.length; ++k) {\n      var dfX0 = parseFloat(first_pass[k][0]);\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\n        var dfX2 = parseFloat(first_pass[k][0]);\n        var dfY2 = parseFloat(first_pass[k][1]);\n        if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 === 180 && k + 1 < first_pass.length && first_pass[k - 1][0] > -180 && first_pass[k - 1][0] < dfRightBorderX) {\n          poNewLS.push([-180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 === -180 && k + 1 < first_pass.length && first_pass[k - 1][0] > dfLeftBorderX && first_pass[k - 1][0] < 180) {\n          poNewLS.push([180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        }\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n          var tmpX = dfX1;\n          dfX1 = dfX2;\n          dfX2 = tmpX;\n          var tmpY = dfY1;\n          dfY1 = dfY2;\n          dfY2 = tmpY;\n        }\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n          dfX2 += 360;\n        }\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n          poNewLS = [];\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n          poMulti.push(poNewLS);\n        } else {\n          poNewLS = [];\n          poMulti.push(poNewLS);\n        }\n        poNewLS.push([dfX0, first_pass[k][1]]);\n      } else {\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n      }\n    }\n  } else {\n    var poNewLS0 = [];\n    poMulti.push(poNewLS0);\n    for (var l = 0; l < first_pass.length; ++l) {\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n    }\n  }\n  var arc = new Arc(this.properties);\n  for (var m = 0; m < poMulti.length; ++m) {\n    var line = new LineString();\n    arc.geometries.push(line);\n    var points = poMulti[m];\n    for (var j0 = 0; j0 < points.length; ++j0) {\n      line.move_to(points[j0]);\n    }\n  }\n  return arc;\n};\n\n// index.js\nfunction greatCircle(start, end, options) {\n  options = options || {};\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\n  var properties = options.properties;\n  var npoints = options.npoints;\n  var offset = options.offset;\n  start = getCoord(start);\n  end = getCoord(end);\n  properties = properties || {};\n  npoints = npoints || 100;\n  if (start[0] === end[0] && start[1] === end[1]) {\n    const arr = Array(npoints);\n    arr.fill([start[0], start[1]]);\n    return lineString(arr, properties);\n  }\n  offset = offset || 10;\n  var generator = new GreatCircle({\n    x: start[0],\n    y: start[1]\n  }, {\n    x: end[0],\n    y: end[1]\n  }, properties);\n  var line = generator.Arc(npoints, {\n    offset\n  });\n  return line.json();\n}\nvar turf_great_circle_default = greatCircle;\nexport { turf_great_circle_default as default, greatCircle };\n/*!\n * Copyright (c) 2019, Dane Springmeyer\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in\n *       the documentation and/or other materials provided with the\n *       distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n", "// index.ts\nimport { multiPolygon, polygon } from \"@turf/helpers\";\nimport { geomEach } from \"@turf/meta\";\nimport * as polyclip from \"polyclip-ts\";\nfunction intersect(features, options = {}) {\n  const geoms = [];\n  geomEach(features, geom => {\n    geoms.push(geom.coordinates);\n  });\n  if (geoms.length < 2) {\n    throw new Error(\"Must specify at least 2 geometries\");\n  }\n  const intersection2 = polyclip.intersection(geoms[0], ...geoms.slice(1));\n  if (intersection2.length === 0) return null;\n  if (intersection2.length === 1) return polygon(intersection2[0], options.properties);\n  return multiPolygon(intersection2, options.properties);\n}\nvar turf_intersect_default = intersect;\nexport { turf_intersect_default as default, intersect };\n", "// index.ts\nimport { distance } from \"@turf/distance\";\nimport { intersect } from \"@turf/intersect\";\nimport { polygon, featureCollection } from \"@turf/helpers\";\nfunction hexGrid(bbox, cellSide, options = {}) {\n  const clonedProperties = JSON.stringify(options.properties || {});\n  const [west, south, east, north] = bbox;\n  const centerY = (south + north) / 2;\n  const centerX = (west + east) / 2;\n  const xFraction = cellSide * 2 / distance([west, centerY], [east, centerY], options);\n  const cellWidth = xFraction * (east - west);\n  const yFraction = cellSide * 2 / distance([centerX, south], [centerX, north], options);\n  const cellHeight = yFraction * (north - south);\n  const radius = cellWidth / 2;\n  const hex_width = radius * 2;\n  const hex_height = Math.sqrt(3) / 2 * cellHeight;\n  const box_width = east - west;\n  const box_height = north - south;\n  const x_interval = 3 / 4 * hex_width;\n  const y_interval = hex_height;\n  const x_span = (box_width - hex_width) / (hex_width - radius / 2);\n  const x_count = Math.floor(x_span);\n  const x_adjust = (x_count * x_interval - radius / 2 - box_width) / 2 - radius / 2 + x_interval / 2;\n  const y_count = Math.floor((box_height - hex_height) / hex_height);\n  let y_adjust = (box_height - y_count * hex_height) / 2;\n  const hasOffsetY = y_count * hex_height - box_height > hex_height / 2;\n  if (hasOffsetY) {\n    y_adjust -= hex_height / 4;\n  }\n  const cosines = [];\n  const sines = [];\n  for (let i = 0; i < 6; i++) {\n    const angle = 2 * Math.PI / 6 * i;\n    cosines.push(Math.cos(angle));\n    sines.push(Math.sin(angle));\n  }\n  const results = [];\n  for (let x = 0; x <= x_count; x++) {\n    for (let y = 0; y <= y_count; y++) {\n      const isOdd = x % 2 === 1;\n      if (y === 0 && isOdd) continue;\n      if (y === 0 && hasOffsetY) continue;\n      const center_x = x * x_interval + west - x_adjust;\n      let center_y = y * y_interval + south + y_adjust;\n      if (isOdd) {\n        center_y -= hex_height / 2;\n      }\n      if (options.triangles === true) {\n        hexTriangles([center_x, center_y], cellWidth / 2, cellHeight / 2, JSON.parse(clonedProperties), cosines, sines).forEach(function (triangle) {\n          if (options.mask) {\n            if (intersect(featureCollection([options.mask, triangle]))) results.push(triangle);\n          } else {\n            results.push(triangle);\n          }\n        });\n      } else {\n        const hex = hexagon([center_x, center_y], cellWidth / 2, cellHeight / 2, JSON.parse(clonedProperties), cosines, sines);\n        if (options.mask) {\n          if (intersect(featureCollection([options.mask, hex]))) results.push(hex);\n        } else {\n          results.push(hex);\n        }\n      }\n    }\n  }\n  return featureCollection(results);\n}\nfunction hexagon(center, rx, ry, properties, cosines, sines) {\n  const vertices = [];\n  for (let i = 0; i < 6; i++) {\n    const x = center[0] + rx * cosines[i];\n    const y = center[1] + ry * sines[i];\n    vertices.push([x, y]);\n  }\n  vertices.push(vertices[0].slice());\n  return polygon([vertices], properties);\n}\nfunction hexTriangles(center, rx, ry, properties, cosines, sines) {\n  const triangles = [];\n  for (let i = 0; i < 6; i++) {\n    const vertices = [];\n    vertices.push(center);\n    vertices.push([center[0] + rx * cosines[i], center[1] + ry * sines[i]]);\n    vertices.push([center[0] + rx * cosines[(i + 1) % 6], center[1] + ry * sines[(i + 1) % 6]]);\n    vertices.push(center);\n    triangles.push(polygon([vertices], properties));\n  }\n  return triangles;\n}\nvar turf_hex_grid_default = hexGrid;\nexport { turf_hex_grid_default as default, hexGrid };\n", "// index.ts\nimport { booleanWithin as within } from \"@turf/boolean-within\";\nimport { distance } from \"@turf/distance\";\nimport { point, featureCollection } from \"@turf/helpers\";\nfunction pointGrid(bbox, cellSide, options = {}) {\n  if (options.mask && !options.units) options.units = \"kilometers\";\n  var results = [];\n  var west = bbox[0];\n  var south = bbox[1];\n  var east = bbox[2];\n  var north = bbox[3];\n  var xFraction = cellSide / distance([west, south], [east, south], options);\n  var cellWidth = xFraction * (east - west);\n  var yFraction = cellSide / distance([west, south], [west, north], options);\n  var cellHeight = yFraction * (north - south);\n  var bboxWidth = east - west;\n  var bboxHeight = north - south;\n  var columns = Math.floor(bboxWidth / cellWidth);\n  var rows = Math.floor(bboxHeight / cellHeight);\n  var deltaX = (bboxWidth - columns * cellWidth) / 2;\n  var deltaY = (bboxHeight - rows * cellHeight) / 2;\n  var currentX = west + deltaX;\n  while (currentX <= east) {\n    var currentY = south + deltaY;\n    while (currentY <= north) {\n      var cellPt = point([currentX, currentY], options.properties);\n      if (options.mask) {\n        if (within(cellPt, options.mask)) results.push(cellPt);\n      } else {\n        results.push(cellPt);\n      }\n      currentY += cellHeight;\n    }\n    currentX += cellWidth;\n  }\n  return featureCollection(results);\n}\nvar turf_point_grid_default = pointGrid;\nexport { turf_point_grid_default as default, pointGrid };\n", "// index.ts\nimport { booleanIntersects as intersect } from \"@turf/boolean-intersects\";\nimport { convertLength, featureCollection, polygon } from \"@turf/helpers\";\nfunction rectangleGrid(bbox, cellWidth, cellHeight, options = {}) {\n  const results = [];\n  const west = bbox[0];\n  const south = bbox[1];\n  const east = bbox[2];\n  const north = bbox[3];\n  const bboxWidth = east - west;\n  const cellWidthDeg = convertLength(cellWidth, options.units, \"degrees\");\n  const bboxHeight = north - south;\n  const cellHeightDeg = convertLength(cellHeight, options.units, \"degrees\");\n  const columns = Math.floor(Math.abs(bboxWidth) / cellWidthDeg);\n  const rows = Math.floor(Math.abs(bboxHeight) / cellHeightDeg);\n  const deltaX = (bboxWidth - columns * cellWidthDeg) / 2;\n  const deltaY = (bboxHeight - rows * cellHeightDeg) / 2;\n  let currentX = west + deltaX;\n  for (let column = 0; column < columns; column++) {\n    let currentY = south + deltaY;\n    for (let row = 0; row < rows; row++) {\n      const cellPoly = polygon([[[currentX, currentY], [currentX, currentY + cellHeightDeg], [currentX + cellWidthDeg, currentY + cellHeightDeg], [currentX + cellWidthDeg, currentY], [currentX, currentY]]], options.properties);\n      if (options.mask) {\n        if (intersect(options.mask, cellPoly)) {\n          results.push(cellPoly);\n        }\n      } else {\n        results.push(cellPoly);\n      }\n      currentY += cellHeightDeg;\n    }\n    currentX += cellWidthDeg;\n  }\n  return featureCollection(results);\n}\nvar turf_rectangle_grid_default = rectangleGrid;\nexport { turf_rectangle_grid_default as default, rectangleGrid };\n", "// index.ts\nimport { rectangleGrid } from \"@turf/rectangle-grid\";\nfunction squareGrid(bbox, cellSide, options = {}) {\n  return rectangleGrid(bbox, cellSide, cellSide, options);\n}\nvar turf_square_grid_default = squareGrid;\nexport { turf_square_grid_default as default, squareGrid };\n", "// index.ts\nimport { distance } from \"@turf/distance\";\nimport { intersect } from \"@turf/intersect\";\nimport { polygon, featureCollection } from \"@turf/helpers\";\nfunction triangleGrid(bbox, cellSide, options = {}) {\n  var results = [];\n  var xFraction = cellSide / distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], options);\n  var cellWidth = xFraction * (bbox[2] - bbox[0]);\n  var yFraction = cellSide / distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], options);\n  var cellHeight = yFraction * (bbox[3] - bbox[1]);\n  var xi = 0;\n  var currentX = bbox[0];\n  while (currentX <= bbox[2]) {\n    var yi = 0;\n    var currentY = bbox[1];\n    while (currentY <= bbox[3]) {\n      var cellTriangle1 = null;\n      var cellTriangle2 = null;\n      if (xi % 2 === 0 && yi % 2 === 0) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY + cellHeight]]], options.properties);\n      } else if (xi % 2 === 0 && yi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX, currentY]]], options.properties);\n      } else if (yi % 2 === 0 && xi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n      } else if (yi % 2 === 1 && xi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY + cellHeight]]], options.properties);\n      }\n      if (options.mask) {\n        if (intersect(featureCollection([options.mask, cellTriangle1]))) results.push(cellTriangle1);\n        if (intersect(featureCollection([options.mask, cellTriangle2]))) results.push(cellTriangle2);\n      } else {\n        results.push(cellTriangle1);\n        results.push(cellTriangle2);\n      }\n      currentY += cellHeight;\n      yi++;\n    }\n    xi++;\n    currentX += cellWidth;\n  }\n  return featureCollection(results);\n}\nvar turf_triangle_grid_default = triangleGrid;\nexport { turf_triangle_grid_default as default, triangleGrid };\n", "// index.js\nimport { bbox } from \"@turf/bbox\";\nimport { hexGrid } from \"@turf/hex-grid\";\nimport { pointGrid } from \"@turf/point-grid\";\nimport { distance } from \"@turf/distance\";\nimport { centroid } from \"@turf/centroid\";\nimport { squareGrid } from \"@turf/square-grid\";\nimport { triangleGrid } from \"@turf/triangle-grid\";\nimport { clone } from \"@turf/clone\";\nimport { featureCollection, validateBBox } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nimport { collectionOf } from \"@turf/invariant\";\nfunction interpolate(points, cellSize, options) {\n  options = options || {};\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\n  var gridType = options.gridType;\n  var property = options.property;\n  var weight = options.weight;\n  var box = options.bbox;\n  if (!points) throw new Error(\"points is required\");\n  collectionOf(points, \"Point\", \"input must contain Points\");\n  if (!cellSize) throw new Error(\"cellSize is required\");\n  if (weight !== void 0 && typeof weight !== \"number\") throw new Error(\"weight must be a number\");\n  property = property || \"elevation\";\n  gridType = gridType || \"square\";\n  weight = weight || 1;\n  box = box != null ? box : bbox(points);\n  validateBBox(box);\n  var grid;\n  switch (gridType) {\n    case \"point\":\n    case \"points\":\n      grid = pointGrid(box, cellSize, options);\n      break;\n    case \"square\":\n    case \"squares\":\n      grid = squareGrid(box, cellSize, options);\n      break;\n    case \"hex\":\n    case \"hexes\":\n      grid = hexGrid(box, cellSize, options);\n      break;\n    case \"triangle\":\n    case \"triangles\":\n      grid = triangleGrid(box, cellSize, options);\n      break;\n    default:\n      throw new Error(\"invalid gridType\");\n  }\n  var results = [];\n  featureEach(grid, function (gridFeature) {\n    var zw = 0;\n    var sw = 0;\n    featureEach(points, function (point) {\n      var gridPoint = gridType === \"point\" ? gridFeature : centroid(gridFeature);\n      var d = distance(gridPoint, point, options);\n      var zValue;\n      if (property !== void 0) zValue = point.properties[property];\n      if (zValue === void 0) zValue = point.geometry.coordinates[2];\n      if (zValue === void 0) throw new Error(\"zValue is missing\");\n      if (d === 0) zw = zValue;\n      var w = 1 / Math.pow(d, weight);\n      sw += w;\n      zw += w * zValue;\n    });\n    var newFeature = clone(gridFeature);\n    newFeature.properties[property] = zw / sw;\n    results.push(newFeature);\n  });\n  return featureCollection(results);\n}\nvar turf_interpolate_default = interpolate;\nexport { turf_interpolate_default as default, interpolate };\n", "/*!\n* MarchingSquaresJS\n* version 1.3.3\n* https://github.com/RaumZeit/MarchingSquares.js\n*\n* @license GNU Affero General Public License.\n* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>\n*/\n\n/*\n *  Compute the distance of a value 'v' from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear(a, b, v) {\n  if (a < b) return (v - a) / (b - a);\n  return (a - v) / (a - b);\n}\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function assumes that exactly one value, 'v0' or 'v1', is actually located\n *  between 'a' and 'b', and choses the right one automagically\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_ab(a, b, v0, v1) {\n  var tmp;\n  if (v0 > v1) {\n    tmp = v0;\n    v0 = v1;\n    v1 = tmp;\n  }\n  if (a < b) {\n    if (a < v0) return (v0 - a) / (b - a);else return (v1 - a) / (b - a);\n  } else if (a > v1) {\n    return (a - v1) / (a - b);\n  }\n  return (a - v0) / (a - b);\n}\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function automagically choses the value 'vN' that is closer to 'a'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_a(a, b, minV, maxV) {\n  if (a < b) return (minV - a) / (b - a);\n  return (a - maxV) / (a - b);\n}\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function automagically choses the value 'vN' that is closer to 'b'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_b(a, b, minV, maxV) {\n  if (a < b) return (maxV - a) / (b - a);\n  return (a - minV) / (a - b);\n}\nfunction Options() {\n  /* Settings common to all implemented algorithms */\n  this.successCallback = null;\n  this.verbose = false;\n  this.polygons = false;\n  this.polygons_full = false;\n  this.linearRing = true;\n  this.noQuadTree = false;\n  this.noFrame = false;\n}\n\n/* Compose settings specific to IsoBands algorithm */\nfunction isoBandOptions(userSettings) {\n  var i, key, val, bandOptions, optionKeys;\n  bandOptions = new Options();\n  userSettings = userSettings ? userSettings : {};\n  optionKeys = Object.keys(bandOptions);\n  for (i = 0; i < optionKeys.length; i++) {\n    key = optionKeys[i];\n    val = userSettings[key];\n    if (typeof val !== 'undefined' && val !== null) bandOptions[key] = val;\n  }\n\n  /* restore compatibility */\n  bandOptions.polygons_full = !bandOptions.polygons;\n\n  /* add interpolation functions (not yet user customizable) */\n  bandOptions.interpolate = linear_ab;\n  bandOptions.interpolate_a = linear_a;\n  bandOptions.interpolate_b = linear_b;\n  return bandOptions;\n}\n\n/* Compose settings specific to IsoLines algorithm */\nfunction isoLineOptions(userSettings) {\n  var i, key, val, lineOptions, optionKeys;\n  lineOptions = new Options();\n  userSettings = userSettings ? userSettings : {};\n  optionKeys = Object.keys(lineOptions);\n  for (i = 0; i < optionKeys.length; i++) {\n    key = optionKeys[i];\n    val = userSettings[key];\n    if (typeof val !== 'undefined' && val !== null) lineOptions[key] = val;\n  }\n\n  /* restore compatibility */\n  lineOptions.polygons_full = !lineOptions.polygons;\n\n  /* add interpolation functions (not yet user customizable) */\n  lineOptions.interpolate = linear;\n  return lineOptions;\n}\nfunction cell2Polygons(cell, x, y, settings) {\n  var polygons = [];\n  cell.polygons.forEach(function (p) {\n    p.forEach(function (pp) {\n      pp[0] += x;\n      pp[1] += y;\n    });\n    if (settings.linearRing) p.push(p[0]);\n    polygons.push(p);\n  });\n  return polygons;\n}\nfunction entry_coordinate(x, y, mode, path) {\n  if (mode === 0) {\n    /* down */\n    x += 1;\n    y += path[0][1];\n  } else if (mode === 1) {\n    /* left */\n    x += path[0][0];\n  } else if (mode === 2) {\n    /* up */\n    y += path[0][1];\n  } else if (mode === 3) {\n    /* right */\n    x += path[0][0];\n    y += 1;\n  }\n  return [x, y];\n}\nfunction skip_coordinate(x, y, mode) {\n  if (mode === 0) {\n    /* down */\n    x++;\n  } else if (mode === 1) ;else if (mode === 2) {\n    /* up */\n    y++;\n  } else if (mode === 3) {\n    /* right */\n    x++;\n    y++;\n  }\n  return [x, y];\n}\nfunction requireFrame(data, lowerBound, upperBound) {\n  var frameRequired, cols, rows, i, j;\n  frameRequired = true;\n  cols = data[0].length;\n  rows = data.length;\n  for (j = 0; j < rows; j++) {\n    if (data[j][0] < lowerBound || data[j][0] > upperBound || data[j][cols - 1] < lowerBound || data[j][cols - 1] > upperBound) {\n      frameRequired = false;\n      break;\n    }\n  }\n  if (frameRequired && (data[rows - 1][0] < lowerBound || data[rows - 1][0] > upperBound || data[rows - 1][cols - 1] < lowerBound || data[rows - 1][cols - 1] > upperBound)) {\n    frameRequired = false;\n  }\n  if (frameRequired) for (i = 0; i < cols - 1; i++) {\n    if (data[0][i] < lowerBound || data[0][i] > upperBound || data[rows - 1][i] < lowerBound || data[rows - 1][i] > upperBound) {\n      frameRequired = false;\n      break;\n    }\n  }\n  return frameRequired;\n}\nfunction requireLineFrame(data, threshold) {\n  var frameRequired, cols, rows, i, j;\n  frameRequired = true;\n  cols = data[0].length;\n  rows = data.length;\n  for (j = 0; j < rows; j++) {\n    if (data[j][0] >= threshold || data[j][cols - 1] >= threshold) {\n      frameRequired = false;\n      break;\n    }\n  }\n  if (frameRequired && (data[rows - 1][0] >= threshold || data[rows - 1][cols - 1] >= threshold)) {\n    frameRequired = false;\n  }\n  if (frameRequired) for (i = 0; i < cols - 1; i++) {\n    if (data[0][i] >= threshold || data[rows - 1][i] > threshold) {\n      frameRequired = false;\n      break;\n    }\n  }\n  return frameRequired;\n}\nfunction traceBandPaths(data, cellGrid, settings) {\n  var nextedge, path, e, ee, s, ve, enter, x, y, finalized, origin, cc, dir, count, point, found_entry;\n  var polygons = [];\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n\n  /*\n   * directions for out-of-grid moves are:\n   * 0 ... \"down\",\n   * 1 ... \"left\",\n   * 2 ... \"up\",\n   * 3 ... \"right\"\n   */\n  var valid_entries = [['rt', 'rb'], /* down */\n  ['br', 'bl'], /* left */\n  ['lb', 'lt'], /* up */\n  ['tl', 'tr'] /* right */];\n  var add_x = [0, -1, 0, 1];\n  var add_y = [-1, 0, 1, 0];\n  var available_starts = ['bl', 'lb', 'lt', 'tl', 'tr', 'rt', 'rb', 'br'];\n  var entry_dir = {\n    bl: 1,\n    br: 1,\n    lb: 2,\n    lt: 2,\n    tl: 3,\n    tr: 3,\n    rt: 0,\n    rb: 0\n  };\n  if (requireFrame(data, settings.minV, settings.maxV)) {\n    if (settings.linearRing) polygons.push([[0, 0], [0, rows], [cols, rows], [cols, 0], [0, 0]]);else polygons.push([[0, 0], [0, rows], [cols, rows], [cols, 0]]);\n  }\n\n  /* finally, start tracing back first polygon(s) */\n  cellGrid.forEach(function (a, i) {\n    a.forEach(function (cell, j) {\n      nextedge = null;\n\n      /* trace paths for all available edges that go through this cell */\n      for (e = 0; e < 8; e++) {\n        nextedge = available_starts[e];\n        if (typeof cell.edges[nextedge] !== 'object') continue;\n\n        /* start a new, full path */\n        path = [];\n        ee = cell.edges[nextedge];\n        enter = nextedge;\n        x = i;\n        y = j;\n        finalized = false;\n        origin = [i + ee.path[0][0], j + ee.path[0][1]];\n\n        /* add start coordinate */\n        path.push(origin);\n\n        /* start traceback */\n        while (!finalized) {\n          cc = cellGrid[x][y];\n          if (typeof cc.edges[enter] !== 'object') break;\n          ee = cc.edges[enter];\n\n          /* remove edge from cell */\n          delete cc.edges[enter];\n\n          /* add last point of edge to path arra, since we extend a polygon */\n          point = ee.path[1];\n          point[0] += x;\n          point[1] += y;\n          path.push(point);\n          enter = ee.move.enter;\n          x = x + ee.move.x;\n          y = y + ee.move.y;\n\n          /* handle out-of-grid moves */\n          if (typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined') {\n            dir = 0;\n            count = 0;\n            if (x === cols) {\n              x--;\n              dir = 0; /* move downwards */\n            } else if (x < 0) {\n              x++;\n              dir = 2; /* move upwards */\n            } else if (y === rows) {\n              y--;\n              dir = 3; /* move right */\n            } else if (y < 0) {\n              y++;\n              dir = 1; /* move left */\n            } else {\n              throw new Error('Left the grid somewhere in the interior!');\n            }\n            if (x === i && y === j && dir === entry_dir[nextedge]) {\n              finalized = true;\n              enter = nextedge;\n              break;\n            }\n            while (1) {\n              found_entry = false;\n              if (count > 4) throw new Error('Direction change counter overflow! This should never happen!');\n              if (!(typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined')) {\n                cc = cellGrid[x][y];\n\n                /* check for re-entry */\n                for (s = 0; s < valid_entries[dir].length; s++) {\n                  ve = valid_entries[dir][s];\n                  if (typeof cc.edges[ve] === 'object') {\n                    /* found re-entry */\n                    ee = cc.edges[ve];\n                    path.push(entry_coordinate(x, y, dir, ee.path));\n                    enter = ve;\n                    found_entry = true;\n                    break;\n                  }\n                }\n              }\n              if (found_entry) {\n                break;\n              } else {\n                path.push(skip_coordinate(x, y, dir));\n                x += add_x[dir];\n                y += add_y[dir];\n\n                /* change direction if we'e moved out of grid again */\n                if (typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined') {\n                  if (dir === 0 && y < 0 || dir === 1 && x < 0 || dir === 2 && y === rows || dir === 3 && x === cols) {\n                    x -= add_x[dir];\n                    y -= add_y[dir];\n                    dir = (dir + 1) % 4;\n                    count++;\n                  }\n                }\n                if (x === i && y === j && dir === entry_dir[nextedge]) {\n                  /* we are back where we started off, so finalize the polygon */\n                  finalized = true;\n                  enter = nextedge;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (settings.linearRing && (path[path.length - 1][0] !== origin[0] || path[path.length - 1][1] !== origin[1])) path.push(origin);\n        polygons.push(path);\n      } /* end forall entry sites */\n    }); /* end foreach i */\n  }); /* end foreach j */\n\n  return polygons;\n}\nfunction traceLinePaths(data, cellGrid, settings) {\n  var nextedge, e, ee, cc, path, enter, x, y, finalized, origin, point, dir, count, found_entry, ve;\n  var polygons = [];\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n\n  /*\n   * directions for out-of-grid moves are:\n   * 0 ... \"down\",\n   * 1 ... \"left\",\n   * 2 ... \"up\",\n   * 3 ... \"right\"\n   */\n  var valid_entries = ['right', /* down */\n  'bottom', /* left */\n  'left', /* up */\n  'top' /* right */];\n  var add_x = [0, -1, 0, 1];\n  var add_y = [-1, 0, 1, 0];\n  var entry_dir = {\n    bottom: 1,\n    left: 2,\n    top: 3,\n    right: 0\n  };\n\n  /* first, detect whether we need any outer frame */\n  if (!settings.noFrame) if (requireLineFrame(data, settings.threshold)) {\n    if (settings.linearRing) polygons.push([[0, 0], [0, rows], [cols, rows], [cols, 0], [0, 0]]);else polygons.push([[0, 0], [0, rows], [cols, rows], [cols, 0]]);\n  }\n\n  /* finally, start tracing back first polygon(s) */\n\n  cellGrid.forEach(function (a, i) {\n    a.forEach(function (cell, j) {\n      nextedge = null;\n\n      /* trace paths for all available edges that go through this cell */\n      for (e = 0; e < 4; e++) {\n        nextedge = valid_entries[e];\n        if (typeof cell.edges[nextedge] !== 'object') continue;\n\n        /* start a new, full path */\n        path = [];\n        ee = cell.edges[nextedge];\n        enter = nextedge;\n        x = i;\n        y = j;\n        finalized = false;\n        origin = [i + ee.path[0][0], j + ee.path[0][1]];\n\n        /* add start coordinate */\n        path.push(origin);\n\n        /* start traceback */\n        while (!finalized) {\n          cc = cellGrid[x][y];\n          if (typeof cc.edges[enter] !== 'object') break;\n          ee = cc.edges[enter];\n\n          /* remove edge from cell */\n          delete cc.edges[enter];\n\n          /* add last point of edge to path arra, since we extend a polygon */\n          point = ee.path[1];\n          point[0] += x;\n          point[1] += y;\n          path.push(point);\n          enter = ee.move.enter;\n          x = x + ee.move.x;\n          y = y + ee.move.y;\n\n          /* handle out-of-grid moves */\n          if (typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined') {\n            if (!settings.linearRing) break;\n            dir = 0;\n            count = 0;\n            if (x === cols) {\n              x--;\n              dir = 0; /* move downwards */\n            } else if (x < 0) {\n              x++;\n              dir = 2; /* move upwards */\n            } else if (y === rows) {\n              y--;\n              dir = 3; /* move right */\n            } else if (y < 0) {\n              y++;\n              dir = 1; /* move left */\n            }\n            if (x === i && y === j && dir === entry_dir[nextedge]) {\n              finalized = true;\n              enter = nextedge;\n              break;\n            }\n            while (1) {\n              found_entry = false;\n              if (count > 4) throw new Error('Direction change counter overflow! This should never happen!');\n              if (!(typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined')) {\n                cc = cellGrid[x][y];\n\n                /* check for re-entry */\n                ve = valid_entries[dir];\n                if (typeof cc.edges[ve] === 'object') {\n                  /* found re-entry */\n                  ee = cc.edges[ve];\n                  path.push(entry_coordinate(x, y, dir, ee.path));\n                  enter = ve;\n                  found_entry = true;\n                  break;\n                }\n              }\n              if (found_entry) {\n                break;\n              } else {\n                path.push(skip_coordinate(x, y, dir));\n                x += add_x[dir];\n                y += add_y[dir];\n\n                /* change direction if we'e moved out of grid again */\n                if (typeof cellGrid[x] === 'undefined' || typeof cellGrid[x][y] === 'undefined') {\n                  if (dir === 0 && y < 0 || dir === 1 && x < 0 || dir === 2 && y === rows || dir === 3 && x === cols) {\n                    x -= add_x[dir];\n                    y -= add_y[dir];\n                    dir = (dir + 1) % 4;\n                    count++;\n                  }\n                }\n                if (x === i && y === j && dir === entry_dir[nextedge]) {\n                  /* we are back where we started off, so finalize the polygon */\n                  finalized = true;\n                  enter = nextedge;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (settings.linearRing && (path[path.length - 1][0] !== origin[0] || path[path.length - 1][1] !== origin[1])) path.push(origin);\n        polygons.push(path);\n      } /* end forall entry sites */\n    }); /* end foreach i */\n  }); /* end foreach j */\n\n  return polygons;\n}\n\n/* quadTree node constructor */\nfunction TreeNode(data, x, y, dx, dy) {\n  var dx_tmp = dx,\n    dy_tmp = dy,\n    msb_x = 0,\n    msb_y = 0;\n\n  /* left-bottom corner of current quadrant */\n  this.x = x;\n  this.y = y;\n\n  /* minimum value in subtree under this node */\n  this.lowerBound = null;\n  /* maximum value in subtree under this node */\n  this.upperBound = null;\n\n  /*\n   *  child nodes are layed out in the following way:\n   *\n   *  (x, y + 1) ---- (x + 1, y + 1)\n   *  |             |              |\n   *  |      D      |      C       |\n   *  |             |              |\n   *  |----------------------------|\n   *  |             |              |\n   *  |      A      |      B       |\n   *  |             |              |\n   *  (x, y) ------------ (x + 1, y)\n   */\n  this.childA = null;\n  this.childB = null;\n  this.childC = null;\n  this.childD = null;\n  if (dx === 1 && dy === 1) {\n    /* do not further subdivision */\n    this.lowerBound = Math.min(data[y][x], data[y][x + 1], data[y + 1][x + 1], data[y + 1][x]);\n    this.upperBound = Math.max(data[y][x], data[y][x + 1], data[y + 1][x + 1], data[y + 1][x]);\n  } else {\n    /* get most significant bit from dx */\n    if (dx > 1) {\n      while (dx_tmp !== 0) {\n        dx_tmp = dx_tmp >> 1;\n        msb_x++;\n      }\n      if (dx === 1 << msb_x - 1) msb_x--;\n      dx_tmp = 1 << msb_x - 1;\n    }\n\n    /* get most significant bit from dx */\n    if (dy > 1) {\n      while (dy_tmp !== 0) {\n        dy_tmp = dy_tmp >> 1;\n        msb_y++;\n      }\n      if (dy === 1 << msb_y - 1) msb_y--;\n      dy_tmp = 1 << msb_y - 1;\n    }\n    this.childA = new TreeNode(data, x, y, dx_tmp, dy_tmp);\n    this.lowerBound = this.childA.lowerBound;\n    this.upperBound = this.childA.upperBound;\n    if (dx - dx_tmp > 0) {\n      this.childB = new TreeNode(data, x + dx_tmp, y, dx - dx_tmp, dy_tmp);\n      this.lowerBound = Math.min(this.lowerBound, this.childB.lowerBound);\n      this.upperBound = Math.max(this.upperBound, this.childB.upperBound);\n      if (dy - dy_tmp > 0) {\n        this.childC = new TreeNode(data, x + dx_tmp, y + dy_tmp, dx - dx_tmp, dy - dy_tmp);\n        this.lowerBound = Math.min(this.lowerBound, this.childC.lowerBound);\n        this.upperBound = Math.max(this.upperBound, this.childC.upperBound);\n      }\n    }\n    if (dy - dy_tmp > 0) {\n      this.childD = new TreeNode(data, x, y + dy_tmp, dx_tmp, dy - dy_tmp);\n      this.lowerBound = Math.min(this.lowerBound, this.childD.lowerBound);\n      this.upperBound = Math.max(this.upperBound, this.childD.upperBound);\n    }\n  }\n}\n\n/**\n *  Retrieve a list of cells within a particular range of values by\n *  recursivly traversing the quad tree to it's leaves.\n *\n *  @param  subsumed  If 'true' include all cells that are completely\n *                    subsumed within the specified range. Otherwise,\n *                    return only cells where at least one corner is\n *                    outside the specified range.\n *\n *  @return   An array of objects 'o' where each object has exactly two\n *            properties: 'o.x' and 'o.y' denoting the left-bottom corner\n *            of the corresponding cell.\n */\nTreeNode.prototype.cellsInBand = function (lowerBound, upperBound, subsumed) {\n  var cells = [];\n  subsumed = typeof subsumed === 'undefined' ? true : subsumed;\n  if (this.lowerBound > upperBound || this.upperBound < lowerBound) return cells;\n  if (!(this.childA || this.childB || this.childC || this.childD)) {\n    if (subsumed || this.lowerBound <= lowerBound || this.upperBound >= upperBound) {\n      cells.push({\n        x: this.x,\n        y: this.y\n      });\n    }\n  } else {\n    if (this.childA) cells = cells.concat(this.childA.cellsInBand(lowerBound, upperBound, subsumed));\n    if (this.childB) cells = cells.concat(this.childB.cellsInBand(lowerBound, upperBound, subsumed));\n    if (this.childD) cells = cells.concat(this.childD.cellsInBand(lowerBound, upperBound, subsumed));\n    if (this.childC) cells = cells.concat(this.childC.cellsInBand(lowerBound, upperBound, subsumed));\n  }\n  return cells;\n};\nTreeNode.prototype.cellsBelowThreshold = function (threshold, subsumed) {\n  var cells = [];\n  subsumed = typeof subsumed === 'undefined' ? true : subsumed;\n  if (this.lowerBound > threshold) return cells;\n  if (!(this.childA || this.childB || this.childC || this.childD)) {\n    if (subsumed || this.upperBound >= threshold) {\n      cells.push({\n        x: this.x,\n        y: this.y\n      });\n    }\n  } else {\n    if (this.childA) cells = cells.concat(this.childA.cellsBelowThreshold(threshold, subsumed));\n    if (this.childB) cells = cells.concat(this.childB.cellsBelowThreshold(threshold, subsumed));\n    if (this.childD) cells = cells.concat(this.childD.cellsBelowThreshold(threshold, subsumed));\n    if (this.childC) cells = cells.concat(this.childC.cellsBelowThreshold(threshold, subsumed));\n  }\n  return cells;\n};\n\n/*\n * Given a scalar field `data` construct a QuadTree\n * to efficiently lookup those parts of the scalar\n * field where values are within a particular\n * range of [lowerbound, upperbound] limits.\n */\nfunction QuadTree(data) {\n  var i, cols;\n\n  /* do some input checking */\n  if (!data) throw new Error('data is required');\n  if (!Array.isArray(data) || !Array.isArray(data[0])) throw new Error('data must be scalar field, i.e. array of arrays');\n  if (data.length < 2) throw new Error('data must contain at least two rows');\n\n  /* check if we've got a regular grid */\n  cols = data[0].length;\n  if (cols < 2) throw new Error('data must contain at least two columns');\n  for (i = 1; i < data.length; i++) {\n    if (!Array.isArray(data[i])) throw new Error('Row ' + i + ' is not an array');\n    if (data[i].length != cols) throw new Error('unequal row lengths detected, please provide a regular grid');\n  }\n\n  /* create pre-processing object */\n  this.data = data;\n  /* root node, i.e. entry to the data */\n  this.root = new TreeNode(data, 0, 0, data[0].length - 1, data.length - 1);\n}\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n\n/*\n * Compute the iso lines for a scalar 2D field given\n * a certain threshold by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n */\n\nfunction isoLines(input, threshold, options) {\n  var settings,\n    i,\n    j,\n    useQuadTree = false,\n    multiLine = false,\n    tree = null,\n    root = null,\n    data = null,\n    cellGrid = null,\n    linePolygons = null,\n    ret = [];\n\n  /* validation */\n  if (!input) throw new Error('data is required');\n  if (threshold === undefined || threshold === null) throw new Error('threshold is required');\n  if (!!options && typeof options !== 'object') throw new Error('options must be an object');\n\n  /* process options */\n  settings = isoLineOptions(options);\n\n  /* check for input data */\n  if (input instanceof QuadTree) {\n    tree = input;\n    root = input.root;\n    data = input.data;\n    if (!settings.noQuadTree) useQuadTree = true;\n  } else if (Array.isArray(input) && Array.isArray(input[0])) {\n    data = input;\n  } else {\n    throw new Error('input is neither array of arrays nor object retrieved from \\'QuadTree()\\'');\n  }\n\n  /* check and prepare input threshold(s) */\n  if (Array.isArray(threshold)) {\n    multiLine = true;\n\n    /* activate QuadTree optimization if not explicitly forbidden by user settings */\n    if (!settings.noQuadTree) useQuadTree = true;\n\n    /* check if all minV are numbers */\n    for (i = 0; i < threshold.length; i++) if (isNaN(+threshold[i])) throw new Error('threshold[' + i + '] is not a number');\n  } else {\n    if (isNaN(+threshold)) throw new Error('threshold must be a number or array of numbers');\n    threshold = [threshold];\n  }\n\n  /* create QuadTree root node if not already present */\n  if (useQuadTree && !root) {\n    tree = new QuadTree(data);\n    root = tree.root;\n    data = tree.data;\n  }\n  if (settings.verbose) {\n    if (settings.polygons) console.log('MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell');else console.log('MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid');\n    if (multiLine) console.log('MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold');\n  }\n\n  /* Done with all input validation, now let's start computing stuff */\n\n  /* loop over all threhsold values */\n  threshold.forEach(function (t, i) {\n    linePolygons = [];\n\n    /* store bounds for current computation in settings object */\n    settings.threshold = t;\n    if (settings.verbose) console.log('MarchingSquaresJS-isoLines: computing iso lines for threshold ' + t);\n    if (settings.polygons) {\n      /* compose list of polygons for each single cell */\n      if (useQuadTree) {\n        /* go through list of cells retrieved from QuadTree */\n        root.cellsBelowThreshold(settings.threshold, true).forEach(function (c) {\n          linePolygons = linePolygons.concat(cell2Polygons(prepareCell(data, c.x, c.y, settings), c.x, c.y, settings));\n        });\n      } else {\n        /* go through entire array of input data */\n        for (j = 0; j < data.length - 1; ++j) {\n          for (i = 0; i < data[0].length - 1; ++i) linePolygons = linePolygons.concat(cell2Polygons(prepareCell(data, i, j, settings), i, j, settings));\n        }\n      }\n    } else {\n      /* sparse grid of input data cells */\n      cellGrid = [];\n      for (i = 0; i < data[0].length - 1; ++i) cellGrid[i] = [];\n\n      /* compose list of polygons for entire input grid */\n      if (useQuadTree) {\n        /* collect the cells */\n        root.cellsBelowThreshold(settings.threshold, false).forEach(function (c) {\n          cellGrid[c.x][c.y] = prepareCell(data, c.x, c.y, settings);\n        });\n      } else {\n        /* prepare cells */\n        for (i = 0; i < data[0].length - 1; ++i) {\n          for (j = 0; j < data.length - 1; ++j) {\n            cellGrid[i][j] = prepareCell(data, i, j, settings);\n          }\n        }\n      }\n      linePolygons = traceLinePaths(data, cellGrid, settings);\n    }\n\n    /* finally, add polygons to output array */\n    if (multiLine) ret.push(linePolygons);else ret = linePolygons;\n    if (typeof settings.successCallback === 'function') settings.successCallback(ret, t);\n  });\n  return ret;\n}\n\n/*\n * Thats all for the public interface, below follows the actual\n * implementation\n */\n\n/*\n * ################################\n * Isocontour implementation below\n * ################################\n */\n\nfunction prepareCell(grid, x, y, settings) {\n  var left, right, top, bottom, average, cell;\n  var cval = 0;\n  var x3 = grid[y + 1][x];\n  var x2 = grid[y + 1][x + 1];\n  var x1 = grid[y][x + 1];\n  var x0 = grid[y][x];\n  var threshold = settings.threshold;\n\n  /*\n   * Note that missing data within the grid will result\n   * in horribly failing to trace full polygon paths\n   */\n  if (isNaN(x0) || isNaN(x1) || isNaN(x2) || isNaN(x3)) {\n    return;\n  }\n\n  /*\n   * Here we detect the type of the cell\n   *\n   * x3 ---- x2\n   * |      |\n   * |      |\n   * x0 ---- x1\n   *\n   * with edge points\n   *\n   * x0 = (x,y),\n   * x1 = (x + 1, y),\n   * x2 = (x + 1, y + 1), and\n   * x3 = (x, y + 1)\n   *\n   * and compute the polygon intersections with the edges\n   * of the cell. Each edge value may be (i) smaller, or (ii)\n   * greater or equal to the iso line threshold. We encode\n   * this property using 1 bit of information, where\n   *\n   * 0 ... below,\n   * 1 ... above or equal\n   *\n   * Then we store the cells value as vector\n   *\n   * cval = (x0, x1, x2, x3)\n   *\n   * where x0 is the least significant bit (0th),\n   * x1 the 2nd bit, and so on. This essentially\n   * enables us to work with a single integer number\n   */\n\n  cval |= x3 >= threshold ? 8 : 0;\n  cval |= x2 >= threshold ? 4 : 0;\n  cval |= x1 >= threshold ? 2 : 0;\n  cval |= x0 >= threshold ? 1 : 0;\n\n  /* make sure cval is a number */\n  cval = +cval;\n\n  /* compose the cell object */\n  cell = {\n    cval: cval,\n    polygons: [],\n    edges: {},\n    x0: x0,\n    x1: x1,\n    x2: x2,\n    x3: x3\n  };\n\n  /*\n   * Compute interpolated intersections of the polygon(s)\n   * with the cell borders and (i) add edges for polygon\n   * trace-back, or (ii) a list of small closed polygons\n   */\n  switch (cval) {\n    case 0:\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, 1], [1, 1], [1, 0]]);\n      break;\n    case 15:\n      /* cell is outside (above) threshold, no polygons */\n      break;\n    case 14:\n      /* 1110 */\n      left = settings.interpolate(x0, x3, threshold);\n      bottom = settings.interpolate(x0, x1, threshold);\n      if (settings.polygons_full) {\n        cell.edges.left = {\n          path: [[0, left], [bottom, 0]],\n          move: {\n            x: 0,\n            y: -1,\n            enter: 'top'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, left], [bottom, 0]]);\n      break;\n    case 13:\n      /* 1101 */\n      bottom = settings.interpolate(x0, x1, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.bottom = {\n          path: [[bottom, 0], [1, right]],\n          move: {\n            x: 1,\n            y: 0,\n            enter: 'left'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[bottom, 0], [1, right], [1, 0]]);\n      break;\n    case 11:\n      /* 1011 */\n      right = settings.interpolate(x1, x2, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.right = {\n          path: [[1, right], [top, 1]],\n          move: {\n            x: 0,\n            y: 1,\n            enter: 'bottom'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[1, right], [top, 1], [1, 1]]);\n      break;\n    case 7:\n      /* 0111 */\n      left = settings.interpolate(x0, x3, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.top = {\n          path: [[top, 1], [0, left]],\n          move: {\n            x: -1,\n            y: 0,\n            enter: 'right'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[top, 1], [0, left], [0, 1]]);\n      break;\n    case 1:\n      /* 0001 */\n      left = settings.interpolate(x0, x3, threshold);\n      bottom = settings.interpolate(x0, x1, threshold);\n      if (settings.polygons_full) {\n        cell.edges.bottom = {\n          path: [[bottom, 0], [0, left]],\n          move: {\n            x: -1,\n            y: 0,\n            enter: 'right'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[bottom, 0], [0, left], [0, 1], [1, 1], [1, 0]]);\n      break;\n    case 2:\n      /* 0010 */\n      bottom = settings.interpolate(x0, x1, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.right = {\n          path: [[1, right], [bottom, 0]],\n          move: {\n            x: 0,\n            y: -1,\n            enter: 'top'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, 1], [1, 1], [1, right], [bottom, 0]]);\n      break;\n    case 4:\n      /* 0100 */\n      right = settings.interpolate(x1, x2, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.top = {\n          path: [[top, 1], [1, right]],\n          move: {\n            x: 1,\n            y: 0,\n            enter: 'left'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, 1], [top, 1], [1, right], [1, 0]]);\n      break;\n    case 8:\n      /* 1000 */\n      left = settings.interpolate(x0, x3, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.left = {\n          path: [[0, left], [top, 1]],\n          move: {\n            x: 0,\n            y: 1,\n            enter: 'bottom'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, left], [top, 1], [1, 1], [1, 0]]);\n      break;\n    case 12:\n      /* 1100 */\n      left = settings.interpolate(x0, x3, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.left = {\n          path: [[0, left], [1, right]],\n          move: {\n            x: 1,\n            y: 0,\n            enter: 'left'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, left], [1, right], [1, 0]]);\n      break;\n    case 9:\n      /* 1001 */\n      bottom = settings.interpolate(x0, x1, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.bottom = {\n          path: [[bottom, 0], [top, 1]],\n          move: {\n            x: 0,\n            y: 1,\n            enter: 'bottom'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[bottom, 0], [top, 1], [1, 1], [1, 0]]);\n      break;\n    case 3:\n      /* 0011 */\n      left = settings.interpolate(x0, x3, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.right = {\n          path: [[1, right], [0, left]],\n          move: {\n            x: -1,\n            y: 0,\n            enter: 'right'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, left], [0, 1], [1, 1], [1, right]]);\n      break;\n    case 6:\n      /* 0110 */\n      bottom = settings.interpolate(x0, x1, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      if (settings.polygons_full) {\n        cell.edges.top = {\n          path: [[top, 1], [bottom, 0]],\n          move: {\n            x: 0,\n            y: -1,\n            enter: 'top'\n          }\n        };\n      }\n      if (settings.polygons) cell.polygons.push([[0, 0], [0, 1], [top, 1], [bottom, 0]]);\n      break;\n    case 10:\n      /* 1010 */\n      left = settings.interpolate(x0, x3, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      bottom = settings.interpolate(x0, x1, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      average = (x0 + x1 + x2 + x3) / 4;\n      if (settings.polygons_full) {\n        if (average < threshold) {\n          cell.edges.left = {\n            path: [[0, left], [top, 1]],\n            move: {\n              x: 0,\n              y: 1,\n              enter: 'bottom'\n            }\n          };\n          cell.edges.right = {\n            path: [[1, right], [bottom, 0]],\n            move: {\n              x: 0,\n              y: -1,\n              enter: 'top'\n            }\n          };\n        } else {\n          cell.edges.right = {\n            path: [[1, right], [top, 1]],\n            move: {\n              x: 0,\n              y: 1,\n              enter: 'bottom'\n            }\n          };\n          cell.edges.left = {\n            path: [[0, left], [bottom, 0]],\n            move: {\n              x: 0,\n              y: -1,\n              enter: 'top'\n            }\n          };\n        }\n      }\n      if (settings.polygons) {\n        if (average < threshold) {\n          cell.polygons.push([[0, 0], [0, left], [top, 1], [1, 1], [1, right], [bottom, 0]]);\n        } else {\n          cell.polygons.push([[0, 0], [0, left], [bottom, 0]]);\n          cell.polygons.push([[top, 1], [1, 1], [1, right]]);\n        }\n      }\n      break;\n    case 5:\n      /* 0101 */\n      left = settings.interpolate(x0, x3, threshold);\n      right = settings.interpolate(x1, x2, threshold);\n      bottom = settings.interpolate(x0, x1, threshold);\n      top = settings.interpolate(x3, x2, threshold);\n      average = (x0 + x1 + x2 + x3) / 4;\n      if (settings.polygons_full) {\n        if (average < threshold) {\n          cell.edges.bottom = {\n            path: [[bottom, 0], [0, left]],\n            move: {\n              x: -1,\n              y: 0,\n              enter: 'right'\n            }\n          };\n          cell.edges.top = {\n            path: [[top, 1], [1, right]],\n            move: {\n              x: 1,\n              y: 0,\n              enter: 'left'\n            }\n          };\n        } else {\n          cell.edges.top = {\n            path: [[top, 1], [0, left]],\n            move: {\n              x: -1,\n              y: 0,\n              enter: 'right'\n            }\n          };\n          cell.edges.bottom = {\n            path: [[bottom, 0], [1, right]],\n            move: {\n              x: 1,\n              y: 0,\n              enter: 'left'\n            }\n          };\n        }\n      }\n      if (settings.polygons) {\n        if (average < threshold) {\n          cell.polygons.push([[0, left], [0, 1], [top, 1], [1, right], [1, 0], [bottom, 0]]);\n        } else {\n          cell.polygons.push([[0, left], [0, 1], [top, 1]]);\n          cell.polygons.push([[bottom, 0], [1, right], [1, 0]]);\n        }\n      }\n      break;\n  }\n  return cell;\n}\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n\n/*\n * lookup table to generate polygon paths or edges required to\n * trace the full polygon(s)\n */\nvar shapeCoordinates = {\n  square: function (cell, x0, x1, x2, x3, opt) {\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, 1], [1, 1], [1, 0]]);\n  },\n  triangle_bl: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, leftbottom], [bottomleft, 0], [0, 0]]);\n  },\n  triangle_br: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [1, rightbottom], [1, 0]]);\n  },\n  triangle_tr: function (cell, x0, x1, x2, x3, opt) {\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [[1, righttop], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[1, righttop], [topright, 1], [1, 1]]);\n  },\n  triangle_tl: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, lefttop], [0, 1], [topleft, 1]]);\n  },\n  tetragon_t: function (cell, x0, x1, x2, x3, opt) {\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [[1, righttop], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, lefttop], [0, 1], [1, 1], [1, righttop]]);\n  },\n  tetragon_r: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [topright, 1], [1, 1], [1, 0]]);\n  },\n  tetragon_b: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [1, rightbottom], [1, 0]]);\n  },\n  tetragon_l: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, 1], [topleft, 1], [bottomleft, 0]]);\n  },\n  tetragon_bl: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [0, leftbottom], [0, lefttop], [bottomright, 0]]);\n  },\n  tetragon_br: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [1, righttop], [1, rightbottom], [bottomright, 0]]);\n  },\n  tetragon_tr: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.rb = {\n        path: [[1, rightbottom], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[1, rightbottom], [topleft, 1], [topright, 1], [1, righttop]]);\n  },\n  tetragon_tl: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tr = {\n        path: [[topright, 1], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[topright, 1], [0, leftbottom], [0, lefttop], [topleft, 1]]);\n  },\n  tetragon_lr: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lt = {\n        path: [[0, lefttop], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, leftbottom], [0, lefttop], [1, righttop], [1, rightbottom]]);\n  },\n  tetragon_tb: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tr = {\n        path: [[topright, 1], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [topleft, 1], [topright, 1], [bottomright, 0]]);\n  },\n  pentagon_tr: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, 1], [topleft, 1], [1, rightbottom], [1, 0]]);\n  },\n  pentagon_tl: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [topright, 1], [1, 1], [1, 0]]);\n  },\n  pentagon_br: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [[1, righttop], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, 1], [1, 1], [1, righttop], [bottomleft, 0]]);\n  },\n  pentagon_bl: function (cell, x0, x1, x2, x3, opt) {\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, lefttop], [0, 1], [1, 1], [1, 0], [bottomright, 0]]);\n  },\n  pentagon_tr_rl: function (cell, x0, x1, x2, x3, opt) {\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, lefttop], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom]]);\n  },\n  pentagon_rb_bt: function (cell, x0, x1, x2, x3, opt) {\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [[1, righttop], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[topright, 1], [1, 1], [1, righttop], [bottomright, 0], [bottomleft, 0]]);\n  },\n  pentagon_bl_lr: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [0, leftbottom], [0, lefttop], [1, rightbottom], [1, 0]]);\n  },\n  pentagon_lt_tb: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [bottomleft, 0]]);\n  },\n  pentagon_bl_tb: function (cell, x0, x1, x2, x3, opt) {\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [[topleft, 1], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, lefttop], [0, 1], [topleft, 1], [bottomright, 0], [bottomleft, 0]]);\n  },\n  pentagon_lt_rl: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate(x1, x3, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lt = {\n        path: [[0, lefttop], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [[1, righttop], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, righttop]]);\n  },\n  pentagon_tr_bt: function (cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[topleft, 1], [topright, 1], [1, rightbottom], [1, 0], [bottomright, 0]]);\n  },\n  pentagon_rb_lr: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [1, righttop], [1, rightbottom], [bottomleft, 0]]);\n  },\n  hexagon_lt_tr: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [1, rightbottom], [1, 0]]);\n  },\n  hexagon_bl_lt: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, 0]]);\n  },\n  hexagon_bl_rb: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n      cell.edges.rt = {\n        path: [[1, righttop], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [0, lefttop], [0, 1], [1, 1], [1, righttop], [bottomright, 0]]);\n  },\n  hexagon_tr_rb: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom], [bottomleft, 0]]);\n  },\n  hexagon_lt_rb: function (cell, x0, x1, x2, x3, opt) {\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [[1, righttop], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [topright, 1], [1, 1], [1, righttop], [bottomleft, 0]]);\n  },\n  hexagon_bl_tr: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [0, lefttop], [0, 1], [topleft, 1], [1, rightbottom], [1, 0]]);\n  },\n  heptagon_tr: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [topright, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [[1, righttop], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, righttop], [bottomright, 0]]);\n  },\n  heptagon_bl: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [[0, leftbottom], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomleft, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tl'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [1, righttop], [1, rightbottom], [bottomleft, 0]]);\n  },\n  heptagon_tl: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, lefttop]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [0, lefttop], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom], [bottomright, 0]]);\n  },\n  heptagon_br: function (cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [[bottomright, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, rightbottom]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lb'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomright, 0], [0, leftbottom], [0, lefttop], [topleft, 1], [topright, 1], [1, rightbottom], [1, 0]]);\n  },\n  octagon: function (cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topleft = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [[bottomleft, 0], [0, leftbottom]],\n        move: {\n          x: -1,\n          y: 0,\n          enter: 'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [[0, lefttop], [topleft, 1]],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [[topright, 1], [1, righttop]],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [[1, rightbottom], [bottomright, 0]],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n    if (opt.polygons) cell.polygons.push([[bottomleft, 0], [0, leftbottom], [0, lefttop], [topleft, 1], [topright, 1], [1, righttop], [1, rightbottom], [bottomright, 0]]);\n  }\n};\n\n/*\n * Compute isobands(s) for a scalar 2D field given a certain\n * threshold and a bandwidth by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n * either for individual polygons within each grid cell, or the\n * outline of connected polygons.\n */\nfunction isoBands(input, minV, bandWidth, options) {\n  var i,\n    j,\n    settings,\n    useQuadTree = false,\n    tree = null,\n    root = null,\n    data = null,\n    cellGrid = null,\n    multiBand = false,\n    bw = [],\n    bandPolygons = [],\n    ret = [];\n\n  /* basic input validation */\n  if (!input) throw new Error('data is required');\n  if (minV === undefined || minV === null) throw new Error('lowerBound is required');\n  if (bandWidth === undefined || bandWidth === null) throw new Error('bandWidth is required');\n  if (!!options && typeof options !== 'object') throw new Error('options must be an object');\n  settings = isoBandOptions(options);\n\n  /* check for input data */\n  if (input instanceof QuadTree) {\n    tree = input;\n    root = input.root;\n    data = input.data;\n    if (!settings.noQuadTree) useQuadTree = true;\n  } else if (Array.isArray(input) && Array.isArray(input[0])) {\n    data = input;\n  } else {\n    throw new Error('input is neither array of arrays nor object retrieved from \\'QuadTree()\\'');\n  }\n\n  /* check and prepare input thresholds */\n  if (Array.isArray(minV)) {\n    multiBand = true;\n\n    /* activate QuadTree optimization if not explicitly forbidden by user settings */\n    if (!settings.noQuadTree) useQuadTree = true;\n\n    /* check if all minV are numbers */\n    for (i = 0; i < minV.length; i++) if (isNaN(+minV[i])) throw new Error('lowerBound[' + i + '] is not a number');\n    if (Array.isArray(bandWidth)) {\n      if (minV.length !== bandWidth.length) throw new Error('lowerBound and bandWidth have unequal lengths');\n\n      /* check bandwidth values */\n      for (i = 0; i < bandWidth.length; i++) if (isNaN(+bandWidth[i])) throw new Error('bandWidth[' + i + '] is not a number');\n    } else {\n      if (isNaN(+bandWidth)) throw new Error('bandWidth must be a number');\n      bw = [];\n      for (i = 0; i < minV.length; i++) {\n        bw.push(bandWidth);\n      }\n      bandWidth = bw;\n    }\n  } else {\n    if (isNaN(+minV)) throw new Error('lowerBound must be a number');\n    minV = [minV];\n    if (isNaN(+bandWidth)) throw new Error('bandWidth must be a number');\n    bandWidth = [bandWidth];\n  }\n\n  /* create QuadTree root node if not already present */\n  if (useQuadTree && !root) {\n    tree = new QuadTree(data);\n    root = tree.root;\n    data = tree.data;\n  }\n  if (settings.verbose) {\n    if (settings.polygons) console.log('MarchingSquaresJS-isoBands: returning single polygons for each grid cell');else console.log('MarchingSquaresJS-isoBands: returning polygon paths for entire data grid');\n    if (multiBand) console.log('MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band');\n  }\n\n  /* Done with all input validation, now let's start computing stuff */\n\n  /* loop over all minV values */\n  minV.forEach(function (lowerBound, b) {\n    bandPolygons = [];\n\n    /* store bounds for current computation in settings object */\n    settings.minV = lowerBound;\n    settings.maxV = lowerBound + bandWidth[b];\n    if (settings.verbose) console.log('MarchingSquaresJS-isoBands: computing isobands for [' + lowerBound + ':' + (lowerBound + bandWidth[b]) + ']');\n    if (settings.polygons) {\n      /* compose list of polygons for each single cell */\n      if (useQuadTree) {\n        /* go through list of cells retrieved from QuadTree */\n        root.cellsInBand(settings.minV, settings.maxV, true).forEach(function (c) {\n          bandPolygons = bandPolygons.concat(cell2Polygons(prepareCell$1(data, c.x, c.y, settings), c.x, c.y, settings));\n        });\n      } else {\n        /* go through entire array of input data */\n        for (j = 0; j < data.length - 1; ++j) {\n          for (i = 0; i < data[0].length - 1; ++i) bandPolygons = bandPolygons.concat(cell2Polygons(prepareCell$1(data, i, j, settings), i, j, settings));\n        }\n      }\n    } else {\n      /* sparse grid of input data cells */\n      cellGrid = [];\n      for (i = 0; i < data[0].length - 1; ++i) cellGrid[i] = [];\n\n      /* compose list of polygons for entire input grid */\n      if (useQuadTree) {\n        /* collect the cells */\n        root.cellsInBand(settings.minV, settings.maxV, false).forEach(function (c) {\n          cellGrid[c.x][c.y] = prepareCell$1(data, c.x, c.y, settings);\n        });\n      } else {\n        /* prepare cells */\n        for (i = 0; i < data[0].length - 1; ++i) {\n          for (j = 0; j < data.length - 1; ++j) {\n            cellGrid[i][j] = prepareCell$1(data, i, j, settings);\n          }\n        }\n      }\n      bandPolygons = traceBandPaths(data, cellGrid, settings);\n    }\n\n    /* finally, add polygons to output array */\n    if (multiBand) ret.push(bandPolygons);else ret = bandPolygons;\n    if (typeof settings.successCallback === 'function') settings.successCallback(ret, lowerBound, bandWidth[b]);\n  });\n  return ret;\n}\n\n/*\n * Thats all for the public interface, below follows the actual\n * implementation\n */\n\n/*\n *  For isoBands, each square is defined by the three states\n * of its corner points. However, since computers use power-2\n * values, we use 2bits per trit, i.e.:\n *\n * 00 ... below minV\n * 01 ... between minV and maxV\n * 10 ... above maxV\n *\n * Hence we map the 4-trit configurations as follows:\n *\n * 0000 => 0\n * 0001 => 1\n * 0002 => 2\n * 0010 => 4\n * 0011 => 5\n * 0012 => 6\n * 0020 => 8\n * 0021 => 9\n * 0022 => 10\n * 0100 => 16\n * 0101 => 17\n * 0102 => 18\n * 0110 => 20\n * 0111 => 21\n * 0112 => 22\n * 0120 => 24\n * 0121 => 25\n * 0122 => 26\n * 0200 => 32\n * 0201 => 33\n * 0202 => 34\n * 0210 => 36\n * 0211 => 37\n * 0212 => 38\n * 0220 => 40\n * 0221 => 41\n * 0222 => 42\n * 1000 => 64\n * 1001 => 65\n * 1002 => 66\n * 1010 => 68\n * 1011 => 69\n * 1012 => 70\n * 1020 => 72\n * 1021 => 73\n * 1022 => 74\n * 1100 => 80\n * 1101 => 81\n * 1102 => 82\n * 1110 => 84\n * 1111 => 85\n * 1112 => 86\n * 1120 => 88\n * 1121 => 89\n * 1122 => 90\n * 1200 => 96\n * 1201 => 97\n * 1202 => 98\n * 1210 => 100\n * 1211 => 101\n * 1212 => 102\n * 1220 => 104\n * 1221 => 105\n * 1222 => 106\n * 2000 => 128\n * 2001 => 129\n * 2002 => 130\n * 2010 => 132\n * 2011 => 133\n * 2012 => 134\n * 2020 => 136\n * 2021 => 137\n * 2022 => 138\n * 2100 => 144\n * 2101 => 145\n * 2102 => 146\n * 2110 => 148\n * 2111 => 149\n * 2112 => 150\n * 2120 => 152\n * 2121 => 153\n * 2122 => 154\n * 2200 => 160\n * 2201 => 161\n * 2202 => 162\n * 2210 => 164\n * 2211 => 165\n * 2212 => 166\n * 2220 => 168\n * 2221 => 169\n * 2222 => 170\n */\n\n/*\n * ####################################\n * Some small helper functions\n * ####################################\n */\n\nfunction computeCenterAverage(bl, br, tr, tl, minV, maxV) {\n  var average = (tl + tr + br + bl) / 4;\n  if (average > maxV) return 2; /* above isoband limits */\n\n  if (average < minV) return 0; /* below isoband limits */\n\n  return 1; /* within isoband limits */\n}\nfunction prepareCell$1(grid, x, y, opt) {\n  var cell, center_avg;\n\n  /*  compose the 4-trit corner representation */\n  var cval = 0;\n  var x3 = grid[y + 1][x];\n  var x2 = grid[y + 1][x + 1];\n  var x1 = grid[y][x + 1];\n  var x0 = grid[y][x];\n  var minV = opt.minV;\n  var maxV = opt.maxV;\n\n  /*\n   * Note that missing data within the grid will result\n   * in horribly failing to trace full polygon paths\n   */\n  if (isNaN(x0) || isNaN(x1) || isNaN(x2) || isNaN(x3)) {\n    return;\n  }\n\n  /*\n   * Here we detect the type of the cell\n   *\n   * x3 ---- x2\n   * |      |\n   * |      |\n   * x0 ---- x1\n   *\n   * with edge points\n   *\n   * x0 = (x,y),\n   * x1 = (x + 1, y),\n   * x2 = (x + 1, y + 1), and\n   * x3 = (x, y + 1)\n   *\n   * and compute the polygon intersections with the edges\n   * of the cell. Each edge value may be (i) below, (ii) within,\n   * or (iii) above the values of the isoband limits. We\n   * encode this property using 2 bits of information, where\n   *\n   * 00 ... below,\n   * 01 ... within, and\n   * 10 ... above\n   *\n   * Then we store the cells value as vector\n   *\n   * cval = (x0, x1, x2, x3)\n   *\n   * where x0 are the two least significant bits (0th, 1st),\n   * x1 the 2nd and 3rd bit, and so on. This essentially\n   * enables us to work with a single integer number\n   */\n\n  cval |= x3 < minV ? 0 : x3 > maxV ? 128 : 64;\n  cval |= x2 < minV ? 0 : x2 > maxV ? 32 : 16;\n  cval |= x1 < minV ? 0 : x1 > maxV ? 8 : 4;\n  cval |= x0 < minV ? 0 : x0 > maxV ? 2 : 1;\n\n  /* make sure cval is a number */\n  cval = +cval;\n\n  /*\n   * cell center average trit for ambiguous cases, where\n   * 0 ... below iso band\n   * 1 ... within iso band\n   * 2 ... above isoband\n   */\n  center_avg = 0;\n  cell = {\n    cval: cval,\n    polygons: [],\n    edges: {},\n    x0: x0,\n    x1: x1,\n    x2: x2,\n    x3: x3,\n    x: x,\n    y: y\n  };\n\n  /*\n   * Compute interpolated intersections of the polygon(s)\n   * with the cell borders and (i) add edges for polygon\n   * trace-back, or (ii) a list of small closed polygons\n   * according to look-up table\n   */\n  switch (cval) {\n    case 85:\n      /* 1111 */\n      shapeCoordinates.square(cell, x0, x1, x2, x3, opt);\n    /* fall through */\n    case 0: /* 0000 */\n    /* fall through */\n    case 170:\n      /* 2222 */\n      break;\n\n    /* single triangle cases */\n\n    case 169:\n      /* 2221 */\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 166:\n      /* 2212 */\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 154:\n      /* 2122 */\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 106:\n      /* 1222 */\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 1:\n      /* 0001 */\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 4:\n      /* 0010 */\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 16:\n      /* 0100 */\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 64:\n      /* 1000 */\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      break;\n\n    /* single trapezoid cases */\n\n    case 168:\n      /* 2220 */\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 162:\n      /* 2202 */\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 138:\n      /* 2022 */\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 42:\n      /* 0222 */\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 2:\n      /* 0002 */\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 8:\n      /* 0020 */\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 32:\n      /* 0200 */\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 128:\n      /* 2000 */\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      break;\n\n    /* single rectangle cases */\n\n    case 5:\n      /* 0011 */\n      shapeCoordinates.tetragon_b(cell, x0, x1, x2, x3, opt);\n      break;\n    case 20:\n      /* 0110 */\n      shapeCoordinates.tetragon_r(cell, x0, x1, x2, x3, opt);\n      break;\n    case 80:\n      /* 1100 */\n      shapeCoordinates.tetragon_t(cell, x0, x1, x2, x3, opt);\n      break;\n    case 65:\n      /* 1001 */\n      shapeCoordinates.tetragon_l(cell, x0, x1, x2, x3, opt);\n      break;\n    case 165:\n      /* 2211 */\n      shapeCoordinates.tetragon_b(cell, x0, x1, x2, x3, opt);\n      break;\n    case 150:\n      /* 2112 */\n      shapeCoordinates.tetragon_r(cell, x0, x1, x2, x3, opt);\n      break;\n    case 90:\n      /* 1122 */\n      shapeCoordinates.tetragon_t(cell, x0, x1, x2, x3, opt);\n      break;\n    case 105:\n      /* 1221 */\n      shapeCoordinates.tetragon_l(cell, x0, x1, x2, x3, opt);\n      break;\n    case 160:\n      /* 2200 */\n      shapeCoordinates.tetragon_lr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 130:\n      /* 2002 */\n      shapeCoordinates.tetragon_tb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 10:\n      /* 0022 */\n      shapeCoordinates.tetragon_lr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 40:\n      /* 0220 */\n      shapeCoordinates.tetragon_tb(cell, x0, x1, x2, x3, opt);\n      break;\n\n    /* single pentagon cases */\n\n    case 101:\n      /* 1211 */\n      shapeCoordinates.pentagon_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 149:\n      /* 2111 */\n      shapeCoordinates.pentagon_tl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 86:\n      /* 1112 */\n      shapeCoordinates.pentagon_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 89:\n      /* 1121 */\n      shapeCoordinates.pentagon_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 69:\n      /* 1011 */\n      shapeCoordinates.pentagon_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 21:\n      /* 0111 */\n      shapeCoordinates.pentagon_tl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 84:\n      /* 1110 */\n      shapeCoordinates.pentagon_bl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 81:\n      /* 1101 */\n      shapeCoordinates.pentagon_br(cell, x0, x1, x2, x3, opt);\n      break;\n    case 96:\n      /* 1200 */\n      shapeCoordinates.pentagon_tr_rl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 24:\n      /* 0120 */\n      shapeCoordinates.pentagon_rb_bt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 6:\n      /* 0012 */\n      shapeCoordinates.pentagon_bl_lr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 129:\n      /* 2001 */\n      shapeCoordinates.pentagon_lt_tb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 74:\n      /* 1022 */\n      shapeCoordinates.pentagon_tr_rl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 146:\n      /* 2102 */\n      shapeCoordinates.pentagon_rb_bt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 164:\n      /* 2210 */\n      shapeCoordinates.pentagon_bl_lr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 41:\n      /* 0221 */\n      shapeCoordinates.pentagon_lt_tb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 66:\n      /* 1002 */\n      shapeCoordinates.pentagon_bl_tb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 144:\n      /* 2100 */\n      shapeCoordinates.pentagon_lt_rl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 36:\n      /* 0210 */\n      shapeCoordinates.pentagon_tr_bt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 9:\n      /* 0021 */\n      shapeCoordinates.pentagon_rb_lr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 104:\n      /* 1220 */\n      shapeCoordinates.pentagon_bl_tb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 26:\n      /* 0122 */\n      shapeCoordinates.pentagon_lt_rl(cell, x0, x1, x2, x3, opt);\n      break;\n    case 134:\n      /* 2012 */\n      shapeCoordinates.pentagon_tr_bt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 161:\n      /* 2201 */\n      shapeCoordinates.pentagon_rb_lr(cell, x0, x1, x2, x3, opt);\n      break;\n\n    /* single hexagon cases */\n\n    case 37:\n      /* 0211 */\n      shapeCoordinates.hexagon_lt_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 148:\n      /* 2110 */\n      shapeCoordinates.hexagon_bl_lt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 82:\n      /* 1102 */\n      shapeCoordinates.hexagon_bl_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 73:\n      /* 1021 */\n      shapeCoordinates.hexagon_tr_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 133:\n      /* 2011 */\n      shapeCoordinates.hexagon_lt_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 22:\n      /* 0112 */\n      shapeCoordinates.hexagon_bl_lt(cell, x0, x1, x2, x3, opt);\n      break;\n    case 88:\n      /* 1120 */\n      shapeCoordinates.hexagon_bl_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 97:\n      /* 1201 */\n      shapeCoordinates.hexagon_tr_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 145:\n      /* 2101 */\n      shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 25:\n      /* 0121 */\n      shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n      break;\n    case 70:\n      /* 1012 */\n      shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n      break;\n    case 100:\n      /* 1210 */\n      shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n      break;\n\n    /* 6-sided saddles */\n\n    case 17:\n      /* 0101 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 68:\n      /* 1010 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 153:\n      /* 2121 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 102:\n      /* 1212 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n\n    /* 7-sided saddles */\n\n    case 152:\n      /* 2120 */\n\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_tr(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 137:\n      /* 2021 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_bl(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 98:\n      /* 1202 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_tl(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 38:\n      /* 0212 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 0 */\n      if (center_avg === 2) {\n        shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_br(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 18:\n      /* 0102 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_tr(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 33:\n      /* 0201 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_bl(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 72:\n      /* 1020 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_tl(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 132:\n      /* 2010 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      /* should never be center_avg === 2 */\n      if (center_avg === 0) {\n        shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.heptagon_br(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n\n    /* 8-sided saddles */\n\n    case 136:\n      /* 2020 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      if (center_avg === 0) {\n        shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      } else if (center_avg === 1) {\n        shapeCoordinates.octagon(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n    case 34:\n      /* 0202 */\n      center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n      if (center_avg === 0) {\n        shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n      } else if (center_avg === 1) {\n        shapeCoordinates.octagon(cell, x0, x1, x2, x3, opt);\n      } else {\n        shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n        shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n      }\n      break;\n  }\n  return cell;\n}\nexport { isoLines, isoLines as isoContours, isoBands, QuadTree, QuadTree as quadTree };", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { area } from \"@turf/area\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { explode } from \"@turf/explode\";\nimport { collectionOf as collectionOf2 } from \"@turf/invariant\";\nimport { polygon, multiPolygon, featureCollection, isObject as isObject2 } from \"@turf/helpers\";\n\n// lib/grid-to-matrix.js\nimport { getCoords, collectionOf } from \"@turf/invariant\";\nimport { featureEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nfunction gridToMatrix(grid, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n  var matrix = [];\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);else row.push(0);\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n  return matrix;\n}\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n  return pointMatrix;\n}\n\n// index.ts\nimport { isoBands } from \"marchingsquares\";\nfunction isobands(pointGrid, breaks, options) {\n  options = options || {};\n  if (!isObject2(options)) throw new Error(\"options is invalid\");\n  const zProperty = options.zProperty || \"elevation\";\n  const commonProperties = options.commonProperties || {};\n  const breaksProperties = options.breaksProperties || [];\n  collectionOf2(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject2(commonProperties)) throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties)) throw new Error(\"breaksProperties is not an Array\");\n  const matrix = gridToMatrix(pointGrid, {\n    zProperty,\n    flip: true\n  });\n  let contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n  const multipolygons = contours.map((contour, index) => {\n    if (breaksProperties[index] && !isObject2(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    }\n    const contourProperties = __spreadValues(__spreadValues({}, commonProperties), breaksProperties[index]);\n    contourProperties[zProperty] = contour[zProperty];\n    const multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n  return featureCollection(multipolygons);\n}\nfunction createContourLines(matrix, breaks, property) {\n  const contours = [];\n  for (let i = 1; i < breaks.length; i++) {\n    const lowerBand = +breaks[i - 1];\n    const upperBand = +breaks[i];\n    const isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n    const nestedRings = orderByArea(isobandsCoords);\n    const groupedRings = groupNestedRings(nestedRings);\n    contours.push({\n      groupedRings,\n      [property]: lowerBand + \"-\" + upperBand\n    });\n  }\n  return contours;\n}\nfunction rescaleContours(contours, matrix, points) {\n  const gridBbox = bbox(points);\n  const originalWidth = gridBbox[2] - gridBbox[0];\n  const originalHeigth = gridBbox[3] - gridBbox[1];\n  const x0 = gridBbox[0];\n  const y0 = gridBbox[1];\n  const matrixWidth = matrix[0].length - 1;\n  const matrixHeight = matrix.length - 1;\n  const scaleX = originalWidth / matrixWidth;\n  const scaleY = originalHeigth / matrixHeight;\n  return contours.map(function (contour) {\n    contour.groupedRings = contour.groupedRings.map(function (lineRingSet) {\n      return lineRingSet.map(function (lineRing) {\n        return lineRing.map(point => [point[0] * scaleX + x0, point[1] * scaleY + y0]);\n      });\n    });\n    return contour;\n  });\n}\nfunction orderByArea(ringsCoords) {\n  const ringsWithArea = ringsCoords.map(function (coords) {\n    return {\n      ring: coords,\n      area: area(polygon([coords]))\n    };\n  });\n  ringsWithArea.sort(function (a, b) {\n    return b.area - a.area;\n  });\n  return ringsWithArea.map(function (x) {\n    return x.ring;\n  });\n}\nfunction groupNestedRings(orderedLinearRings) {\n  const lrList = orderedLinearRings.map(lr => {\n    return {\n      lrCoordinates: lr,\n      grouped: false\n    };\n  });\n  const groupedLinearRingsCoords = [];\n  while (!allGrouped(lrList)) {\n    for (let i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        const group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        const outerMostPoly = polygon([lrList[i].lrCoordinates]);\n        for (let j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            const lrPoly = polygon([lrList[j].lrCoordinates]);\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        }\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n  return groupedLinearRingsCoords;\n}\nfunction isInside(testPolygon, targetPolygon) {\n  const points = explode(testPolygon);\n  for (let i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction allGrouped(list) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n  return true;\n}\nvar turf_isobands_default = isobands;\nexport { turf_isobands_default as default, isobands };\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { coordEach } from \"@turf/meta\";\nimport { collectionOf as collectionOf2 } from \"@turf/invariant\";\nimport { multiLineString, featureCollection, isObject as isObject2 } from \"@turf/helpers\";\nimport { isoContours } from \"marchingsquares\";\n\n// lib/grid-to-matrix.js\nimport { getCoords, collectionOf } from \"@turf/invariant\";\nimport { featureEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nfunction gridToMatrix(grid, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n  var matrix = [];\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);else row.push(0);\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n  return matrix;\n}\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n  return pointMatrix;\n}\n\n// index.ts\nfunction isolines(pointGrid, breaks, options) {\n  options = options || {};\n  if (!isObject2(options)) throw new Error(\"options is invalid\");\n  const zProperty = options.zProperty || \"elevation\";\n  const commonProperties = options.commonProperties || {};\n  const breaksProperties = options.breaksProperties || [];\n  collectionOf2(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks must be an Array\");\n  if (!isObject2(commonProperties)) throw new Error(\"commonProperties must be an Object\");\n  if (!Array.isArray(breaksProperties)) throw new Error(\"breaksProperties must be an Array\");\n  const matrix = gridToMatrix(pointGrid, {\n    zProperty,\n    flip: true\n  });\n  const createdIsoLines = createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties);\n  const scaledIsolines = rescaleIsolines(createdIsoLines, matrix, pointGrid);\n  return featureCollection(scaledIsolines);\n}\nfunction createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties) {\n  const results = [];\n  for (let i = 0; i < breaks.length; i++) {\n    const threshold = +breaks[i];\n    const properties = __spreadValues(__spreadValues({}, commonProperties), breaksProperties[i]);\n    properties[zProperty] = threshold;\n    const isoline = multiLineString(isoContours(matrix, threshold, {\n      linearRing: false,\n      noFrame: true\n    }), properties);\n    results.push(isoline);\n  }\n  return results;\n}\nfunction rescaleIsolines(createdIsoLines, matrix, points) {\n  const gridBbox = bbox(points);\n  const originalWidth = gridBbox[2] - gridBbox[0];\n  const originalHeigth = gridBbox[3] - gridBbox[1];\n  const x0 = gridBbox[0];\n  const y0 = gridBbox[1];\n  const matrixWidth = matrix[0].length - 1;\n  const matrixHeight = matrix.length - 1;\n  const scaleX = originalWidth / matrixWidth;\n  const scaleY = originalHeigth / matrixHeight;\n  const resize = point => {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  };\n  createdIsoLines.forEach(isoline => {\n    coordEach(isoline, resize);\n  });\n  return createdIsoLines;\n}\nvar turf_isolines_default = isolines;\nexport { turf_isolines_default as default, isolines };\n", "// index.ts\nimport { point } from \"@turf/helpers\";\nfunction kinks(featureIn) {\n  let coordinates;\n  let feature;\n  const results = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  if (featureIn.type === \"Feature\") {\n    feature = featureIn.geometry;\n  } else {\n    feature = featureIn;\n  }\n  if (feature.type === \"LineString\") {\n    coordinates = [feature.coordinates];\n  } else if (feature.type === \"MultiLineString\") {\n    coordinates = feature.coordinates;\n  } else if (feature.type === \"MultiPolygon\") {\n    coordinates = [].concat(...feature.coordinates);\n  } else if (feature.type === \"Polygon\") {\n    coordinates = feature.coordinates;\n  } else {\n    throw new Error(\"Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry\");\n  }\n  coordinates.forEach(line1 => {\n    coordinates.forEach(line2 => {\n      for (let i = 0; i < line1.length - 1; i++) {\n        for (let k = i; k < line2.length - 1; k++) {\n          if (line1 === line2) {\n            if (Math.abs(i - k) === 1) {\n              continue;\n            }\n            if (\n            // segments are first and last segment of lineString\n            i === 0 && k === line1.length - 2 &&\n            // lineString is closed\n            line1[i][0] === line1[line1.length - 1][0] && line1[i][1] === line1[line1.length - 1][1]) {\n              continue;\n            }\n          }\n          const intersection = lineIntersects(line1[i][0], line1[i][1], line1[i + 1][0], line1[i + 1][1], line2[k][0], line2[k][1], line2[k + 1][0], line2[k + 1][1]);\n          if (intersection) {\n            results.features.push(point([intersection[0], intersection[1]]));\n          }\n        }\n      }\n    });\n  });\n  return results;\n}\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n  let denominator;\n  let a;\n  let b;\n  let numerator1;\n  let numerator2;\n  const result = {\n    x: null,\n    y: null,\n    onLine1: false,\n    onLine2: false\n  };\n  denominator = (line2EndY - line2StartY) * (line1EndX - line1StartX) - (line2EndX - line2StartX) * (line1EndY - line1StartY);\n  if (denominator === 0) {\n    if (result.x !== null && result.y !== null) {\n      return result;\n    } else {\n      return false;\n    }\n  }\n  a = line1StartY - line2StartY;\n  b = line1StartX - line2StartX;\n  numerator1 = (line2EndX - line2StartX) * a - (line2EndY - line2StartY) * b;\n  numerator2 = (line1EndX - line1StartX) * a - (line1EndY - line1StartY) * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n  result.x = line1StartX + a * (line1EndX - line1StartX);\n  result.y = line1StartY + a * (line1EndY - line1StartY);\n  if (a >= 0 && a <= 1) {\n    result.onLine1 = true;\n  }\n  if (b >= 0 && b <= 1) {\n    result.onLine2 = true;\n  }\n  if (result.onLine1 && result.onLine2) {\n    return [result.x, result.y];\n  } else {\n    return false;\n  }\n}\nvar turf_kinks_default = kinks;\nexport { turf_kinks_default as default, kinks };\n", "// index.ts\nimport { distance } from \"@turf/distance\";\nimport { segmentReduce } from \"@turf/meta\";\nfunction length(geojson, options = {}) {\n  return segmentReduce(geojson, (previousValue, segment) => {\n    const coords = segment.geometry.coordinates;\n    return previousValue + distance(coords[0], coords[1], options);\n  }, 0);\n}\nvar turf_length_default = length;\nexport { turf_length_default as default, length };\n", "// index.ts\nimport { circle } from \"@turf/circle\";\nimport { destination } from \"@turf/destination\";\nimport { lineString } from \"@turf/helpers\";\nfunction lineArc(center, radius, bearing1, bearing2, options = {}) {\n  const steps = options.steps || 64;\n  const angle1 = convertAngleTo360(bearing1);\n  const angle2 = convertAngleTo360(bearing2);\n  const properties = !Array.isArray(center) && center.type === \"Feature\" ? center.properties : {};\n  if (angle1 === angle2) {\n    return lineString(circle(center, radius, options).geometry.coordinates[0], properties);\n  }\n  const arcStartDegree = angle1;\n  const arcEndDegree = angle1 < angle2 ? angle2 : angle2 + 360;\n  let alpha = arcStartDegree;\n  const coordinates = [];\n  let i = 0;\n  const arcStep = (arcEndDegree - arcStartDegree) / steps;\n  while (alpha <= arcEndDegree) {\n    coordinates.push(destination(center, radius, alpha, options).geometry.coordinates);\n    i++;\n    alpha = arcStartDegree + i * arcStep;\n  }\n  return lineString(coordinates, properties);\n}\nfunction convertAngleTo360(alpha) {\n  let beta = alpha % 360;\n  if (beta < 0) {\n    beta += 360;\n  }\n  return beta;\n}\nvar turf_line_arc_default = lineArc;\nexport { turf_line_arc_default as default, lineArc };\n", "// index.js\nimport { bearing } from \"@turf/bearing\";\nimport { distance } from \"@turf/distance\";\nimport { destination } from \"@turf/destination\";\nimport { lineString, isObject } from \"@turf/helpers\";\nfunction lineSliceAlong(line, startDist, stopDist, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var coords;\n  var slice = [];\n  if (line.type === \"Feature\") coords = line.geometry.coordinates;else if (line.type === \"LineString\") coords = line.coordinates;else throw new Error(\"input must be a LineString Feature or Geometry\");\n  var origCoordsLength = coords.length;\n  var travelled = 0;\n  var overshot, direction, interpolated;\n  for (var i = 0; i < coords.length; i++) {\n    if (startDist >= travelled && i === coords.length - 1) break;else if (travelled > startDist && slice.length === 0) {\n      overshot = startDist - travelled;\n      if (!overshot) {\n        slice.push(coords[i]);\n        return lineString(slice);\n      }\n      direction = bearing(coords[i], coords[i - 1]) - 180;\n      interpolated = destination(coords[i], overshot, direction, options);\n      slice.push(interpolated.geometry.coordinates);\n    }\n    if (travelled >= stopDist) {\n      overshot = stopDist - travelled;\n      if (!overshot) {\n        slice.push(coords[i]);\n        return lineString(slice);\n      }\n      direction = bearing(coords[i], coords[i - 1]) - 180;\n      interpolated = destination(coords[i], overshot, direction, options);\n      slice.push(interpolated.geometry.coordinates);\n      return lineString(slice);\n    }\n    if (travelled >= startDist) {\n      slice.push(coords[i]);\n    }\n    if (i === coords.length - 1) {\n      return lineString(slice);\n    }\n    travelled += distance(coords[i], coords[i + 1], options);\n  }\n  if (travelled < startDist && coords.length === origCoordsLength) throw new Error(\"Start position is beyond line\");\n  var last = coords[coords.length - 1];\n  return lineString([last, last]);\n}\nvar turf_line_slice_along_default = lineSliceAlong;\nexport { turf_line_slice_along_default as default, lineSliceAlong };\n", "// index.js\nimport { length } from \"@turf/length\";\nimport { lineSliceAlong } from \"@turf/line-slice-along\";\nimport { flattenEach } from \"@turf/meta\";\nimport { featureCollection, isObject } from \"@turf/helpers\";\nfunction lineChunk(geojson, segmentLength, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n  var reverse = options.reverse;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (segmentLength <= 0) throw new Error(\"segmentLength must be greater than 0\");\n  var results = [];\n  flattenEach(geojson, function (feature) {\n    if (reverse) feature.geometry.coordinates = feature.geometry.coordinates.reverse();\n    sliceLineSegments(feature, segmentLength, units, function (segment) {\n      results.push(segment);\n    });\n  });\n  return featureCollection(results);\n}\nfunction sliceLineSegments(line, segmentLength, units, callback) {\n  var lineLength = length(line, {\n    units\n  });\n  if (lineLength <= segmentLength) return callback(line);\n  var numberOfSegments = lineLength / segmentLength;\n  if (!Number.isInteger(numberOfSegments)) {\n    numberOfSegments = Math.floor(numberOfSegments) + 1;\n  }\n  for (var i = 0; i < numberOfSegments; i++) {\n    var outline = lineSliceAlong(line, segmentLength * i, segmentLength * (i + 1), {\n      units\n    });\n    callback(outline, i);\n  }\n}\nvar turf_line_chunk_default = lineChunk;\nexport { turf_line_chunk_default as default, lineChunk };\n", "// index.js\nimport { flattenEach } from \"@turf/meta\";\nimport { getCoords, getType } from \"@turf/invariant\";\nimport { isObject, lineString, multiLineString, lengthToDegrees } from \"@turf/helpers\";\n\n// lib/intersection.js\nfunction ab(segment) {\n  var start = segment[0];\n  var end = segment[1];\n  return [end[0] - start[0], end[1] - start[1]];\n}\nfunction crossProduct(v1, v2) {\n  return v1[0] * v2[1] - v2[0] * v1[1];\n}\nfunction add(v1, v2) {\n  return [v1[0] + v2[0], v1[1] + v2[1]];\n}\nfunction sub(v1, v2) {\n  return [v1[0] - v2[0], v1[1] - v2[1]];\n}\nfunction scalarMult(s, v) {\n  return [s * v[0], s * v[1]];\n}\nfunction intersectSegments(a, b) {\n  var p = a[0];\n  var r = ab(a);\n  var q = b[0];\n  var s = ab(b);\n  var cross = crossProduct(r, s);\n  var qmp = sub(q, p);\n  var numerator = crossProduct(qmp, s);\n  var t = numerator / cross;\n  var intersection2 = add(p, scalarMult(t, r));\n  return intersection2;\n}\nfunction isParallel(a, b) {\n  var r = ab(a);\n  var s = ab(b);\n  return crossProduct(r, s) === 0;\n}\nfunction intersection(a, b) {\n  if (isParallel(a, b)) return false;\n  return intersectSegments(a, b);\n}\n\n// index.js\nfunction lineOffset(geojson, distance, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (distance === void 0 || distance === null || isNaN(distance)) throw new Error(\"distance is required\");\n  var type = getType(geojson);\n  var properties = geojson.properties;\n  switch (type) {\n    case \"LineString\":\n      return lineOffsetFeature(geojson, distance, units);\n    case \"MultiLineString\":\n      var coords = [];\n      flattenEach(geojson, function (feature) {\n        coords.push(lineOffsetFeature(feature, distance, units).geometry.coordinates);\n      });\n      return multiLineString(coords, properties);\n    default:\n      throw new Error(\"geometry \" + type + \" is not supported\");\n  }\n}\nfunction lineOffsetFeature(line, distance, units) {\n  var segments = [];\n  var offsetDegrees = lengthToDegrees(distance, units);\n  var coords = getCoords(line);\n  var finalCoords = [];\n  coords.forEach(function (currentCoords, index) {\n    if (index !== coords.length - 1) {\n      var segment = processSegment(currentCoords, coords[index + 1], offsetDegrees);\n      segments.push(segment);\n      if (index > 0) {\n        var seg2Coords = segments[index - 1];\n        var intersects = intersection(segment, seg2Coords);\n        if (intersects !== false) {\n          seg2Coords[1] = intersects;\n          segment[0] = intersects;\n        }\n        finalCoords.push(seg2Coords[0]);\n        if (index === coords.length - 2) {\n          finalCoords.push(segment[0]);\n          finalCoords.push(segment[1]);\n        }\n      }\n      if (coords.length === 2) {\n        finalCoords.push(segment[0]);\n        finalCoords.push(segment[1]);\n      }\n    }\n  });\n  return lineString(finalCoords, line.properties);\n}\nfunction processSegment(point1, point2, offset) {\n  var L = Math.sqrt((point1[0] - point2[0]) * (point1[0] - point2[0]) + (point1[1] - point2[1]) * (point1[1] - point2[1]));\n  var out1x = point1[0] + offset * (point2[1] - point1[1]) / L;\n  var out2x = point2[0] + offset * (point2[1] - point1[1]) / L;\n  var out1y = point1[1] + offset * (point1[0] - point2[0]) / L;\n  var out2y = point2[1] + offset * (point1[0] - point2[0]) / L;\n  return [[out1x, out1y], [out2x, out2y]];\n}\nvar turf_line_offset_default = lineOffset;\nexport { turf_line_offset_default as default, lineOffset };\n", "// index.js\nimport { getCoords, getType } from \"@turf/invariant\";\nimport { lineString as linestring } from \"@turf/helpers\";\nimport { nearestPointOnLine } from \"@turf/nearest-point-on-line\";\nfunction lineSlice(startPt, stopPt, line) {\n  var coords = getCoords(line);\n  if (getType(line) !== \"LineString\") throw new Error(\"line must be a LineString\");\n  var startVertex = nearestPointOnLine(line, startPt);\n  var stopVertex = nearestPointOnLine(line, stopPt);\n  var ends;\n  if (startVertex.properties.index <= stopVertex.properties.index) {\n    ends = [startVertex, stopVertex];\n  } else {\n    ends = [stopVertex, startVertex];\n  }\n  var clipCoords = [ends[0].geometry.coordinates];\n  for (var i = ends[0].properties.index + 1; i < ends[1].properties.index + 1; i++) {\n    clipCoords.push(coords[i]);\n  }\n  clipCoords.push(ends[1].geometry.coordinates);\n  return linestring(clipCoords, line.properties);\n}\nvar turf_line_slice_default = lineSlice;\nexport { turf_line_slice_default as default, lineSlice };\n", "// index.ts\nimport { distance } from \"@turf/distance\";\nfunction square(bbox) {\n  var west = bbox[0];\n  var south = bbox[1];\n  var east = bbox[2];\n  var north = bbox[3];\n  var horizontalDistance = distance(bbox.slice(0, 2), [east, south]);\n  var verticalDistance = distance(bbox.slice(0, 2), [west, north]);\n  if (horizontalDistance >= verticalDistance) {\n    var verticalMidpoint = (south + north) / 2;\n    return [west, verticalMidpoint - (east - west) / 2, east, verticalMidpoint + (east - west) / 2];\n  } else {\n    var horizontalMidpoint = (west + east) / 2;\n    return [horizontalMidpoint - (north - south) / 2, south, horizontalMidpoint + (north - south) / 2, north];\n  }\n}\nvar turf_square_default = square;\nexport { turf_square_default as default, square };\n", "// index.ts\nimport { coordEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nfunction truncate(geojson, options) {\n  options = options != null ? options : {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var precision = options.precision;\n  var coordinates = options.coordinates;\n  var mutate = options.mutate;\n  precision = precision === void 0 || precision === null || isNaN(precision) ? 6 : precision;\n  coordinates = coordinates === void 0 || coordinates === null || isNaN(coordinates) ? 3 : coordinates;\n  if (!geojson) throw new Error(\"<geojson> is required\");\n  if (typeof precision !== \"number\") throw new Error(\"<precision> must be a number\");\n  if (typeof coordinates !== \"number\") throw new Error(\"<coordinates> must be a number\");\n  if (mutate === false || mutate === void 0) geojson = JSON.parse(JSON.stringify(geojson));\n  var factor = Math.pow(10, precision);\n  coordEach(geojson, function (coords) {\n    truncateCoords(coords, factor, coordinates);\n  });\n  return geojson;\n}\nfunction truncateCoords(coords, factor, coordinates) {\n  if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n  for (var i = 0; i < coords.length; i++) {\n    coords[i] = Math.round(coords[i] * factor) / factor;\n  }\n  return coords;\n}\nvar turf_truncate_default = truncate;\nexport { turf_truncate_default as default, truncate };\n", "// index.js\nimport { geojsonRbush as rbush } from \"@turf/geojson-rbush\";\nimport { square } from \"@turf/square\";\nimport { bbox } from \"@turf/bbox\";\nimport { truncate } from \"@turf/truncate\";\nimport { lineSegment } from \"@turf/line-segment\";\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { nearestPointOnLine } from \"@turf/nearest-point-on-line\";\nimport { getCoords, getCoord, getType } from \"@turf/invariant\";\nimport { featureEach, featureReduce, flattenEach } from \"@turf/meta\";\nimport { lineString, featureCollection } from \"@turf/helpers\";\nfunction lineSplit(line, splitter) {\n  if (!line) throw new Error(\"line is required\");\n  if (!splitter) throw new Error(\"splitter is required\");\n  var lineType = getType(line);\n  var splitterType = getType(splitter);\n  if (lineType !== \"LineString\") throw new Error(\"line must be LineString\");\n  if (splitterType === \"FeatureCollection\") throw new Error(\"splitter cannot be a FeatureCollection\");\n  if (splitterType === \"GeometryCollection\") throw new Error(\"splitter cannot be a GeometryCollection\");\n  var truncatedSplitter = truncate(splitter, {\n    precision: 7\n  });\n  switch (splitterType) {\n    case \"Point\":\n      return splitLineWithPoint(line, truncatedSplitter);\n    case \"MultiPoint\":\n      return splitLineWithPoints(line, truncatedSplitter);\n    case \"LineString\":\n    case \"MultiLineString\":\n    case \"Polygon\":\n    case \"MultiPolygon\":\n      return splitLineWithPoints(line, lineIntersect(line, truncatedSplitter, {\n        ignoreSelfIntersections: true\n      }));\n  }\n}\nfunction splitLineWithPoints(line, splitter) {\n  var results = [];\n  var tree = rbush();\n  flattenEach(splitter, function (point) {\n    results.forEach(function (feature, index) {\n      feature.id = index;\n    });\n    if (!results.length) {\n      results = splitLineWithPoint(line, point).features;\n      results.forEach(function (feature) {\n        if (!feature.bbox) feature.bbox = square(bbox(feature));\n      });\n      tree.load(featureCollection(results));\n    } else {\n      var search = tree.search(point);\n      if (search.features.length) {\n        var closestLine = findClosestFeature(point, search);\n        results = results.filter(function (feature) {\n          return feature.id !== closestLine.id;\n        });\n        tree.remove(closestLine);\n        featureEach(splitLineWithPoint(closestLine, point), function (line2) {\n          results.push(line2);\n          tree.insert(line2);\n        });\n      }\n    }\n  });\n  return featureCollection(results);\n}\nfunction splitLineWithPoint(line, splitter) {\n  var results = [];\n  var startPoint = getCoords(line)[0];\n  var endPoint = getCoords(line)[line.geometry.coordinates.length - 1];\n  if (pointsEquals(startPoint, getCoord(splitter)) || pointsEquals(endPoint, getCoord(splitter))) return featureCollection([line]);\n  var tree = rbush();\n  var segments = lineSegment(line);\n  tree.load(segments);\n  var search = tree.search(splitter);\n  if (!search.features.length) return featureCollection([line]);\n  var closestSegment = findClosestFeature(splitter, search);\n  var initialValue = [startPoint];\n  var lastCoords = featureReduce(segments, function (previous, current, index) {\n    var currentCoords = getCoords(current)[1];\n    var splitterCoords = getCoord(splitter);\n    if (index === closestSegment.id) {\n      previous.push(splitterCoords);\n      results.push(lineString(previous));\n      if (pointsEquals(splitterCoords, currentCoords)) return [splitterCoords];\n      return [splitterCoords, currentCoords];\n    } else {\n      previous.push(currentCoords);\n      return previous;\n    }\n  }, initialValue);\n  if (lastCoords.length > 1) {\n    results.push(lineString(lastCoords));\n  }\n  return featureCollection(results);\n}\nfunction findClosestFeature(point, lines) {\n  if (!lines.features.length) throw new Error(\"lines must contain features\");\n  if (lines.features.length === 1) return lines.features[0];\n  var closestFeature;\n  var closestDistance = Infinity;\n  featureEach(lines, function (segment) {\n    var pt = nearestPointOnLine(segment, point);\n    var dist = pt.properties.dist;\n    if (dist < closestDistance) {\n      closestFeature = segment;\n      closestDistance = dist;\n    }\n  });\n  return closestFeature;\n}\nfunction pointsEquals(pt1, pt2) {\n  return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\nvar turf_line_split_default = lineSplit;\nexport { turf_line_split_default as default, lineSplit };\n", "// index.ts\nimport { bbox as turfBBox } from \"@turf/bbox\";\nimport { getCoords, getGeom } from \"@turf/invariant\";\nimport { polygon, multiPolygon, lineString } from \"@turf/helpers\";\nimport { clone } from \"@turf/clone\";\nfunction lineToPolygon(lines, options = {}) {\n  var _a, _b, _c;\n  var properties = options.properties;\n  var autoComplete = (_a = options.autoComplete) != null ? _a : true;\n  var orderCoords = (_b = options.orderCoords) != null ? _b : true;\n  var mutate = (_c = options.mutate) != null ? _c : false;\n  if (!mutate) {\n    lines = clone(lines);\n  }\n  switch (lines.type) {\n    case \"FeatureCollection\":\n      var coords = [];\n      lines.features.forEach(function (line) {\n        coords.push(getCoords(lineStringToPolygon(line, {}, autoComplete, orderCoords)));\n      });\n      return multiPolygon(coords, properties);\n    default:\n      return lineStringToPolygon(lines, properties, autoComplete, orderCoords);\n  }\n}\nfunction lineStringToPolygon(line, properties, autoComplete, orderCoords) {\n  properties = properties ? properties : line.type === \"Feature\" ? line.properties : {};\n  var geom = getGeom(line);\n  var coords = geom.coordinates;\n  var type = geom.type;\n  if (!coords.length) throw new Error(\"line must contain coordinates\");\n  switch (type) {\n    case \"LineString\":\n      if (autoComplete) coords = autoCompleteCoords(coords);\n      return polygon([coords], properties);\n    case \"MultiLineString\":\n      var multiCoords = [];\n      var largestArea = 0;\n      coords.forEach(function (coord) {\n        if (autoComplete) coord = autoCompleteCoords(coord);\n        if (orderCoords) {\n          var area = calculateArea(turfBBox(lineString(coord)));\n          if (area > largestArea) {\n            multiCoords.unshift(coord);\n            largestArea = area;\n          } else multiCoords.push(coord);\n        } else {\n          multiCoords.push(coord);\n        }\n      });\n      return polygon(multiCoords, properties);\n    default:\n      throw new Error(\"geometry type \" + type + \" is not supported\");\n  }\n}\nfunction autoCompleteCoords(coords) {\n  var first = coords[0];\n  var x1 = first[0];\n  var y1 = first[1];\n  var last = coords[coords.length - 1];\n  var x2 = last[0];\n  var y2 = last[1];\n  if (x1 !== x2 || y1 !== y2) {\n    coords.push(first);\n  }\n  return coords;\n}\nfunction calculateArea(bbox) {\n  var west = bbox[0];\n  var south = bbox[1];\n  var east = bbox[2];\n  var north = bbox[3];\n  return Math.abs(west - east) * Math.abs(south - north);\n}\nvar turf_line_to_polygon_default = lineToPolygon;\nexport { turf_line_to_polygon_default as default, lineToPolygon };\n", "// index.ts\nimport { polygon as createPolygon, multiPolygon } from \"@turf/helpers\";\nimport * as polyclip from \"polyclip-ts\";\nimport { clone } from \"@turf/clone\";\nfunction mask(polygon, mask2, options) {\n  var _a;\n  const mutate = (_a = options == null ? void 0 : options.mutate) != null ? _a : false;\n  let maskTemplate = mask2;\n  if (mask2 && mutate === false) {\n    maskTemplate = clone(mask2);\n  }\n  const maskPolygon = createMask(maskTemplate);\n  let polygonOuters = null;\n  if (polygon.type === \"FeatureCollection\") {\n    polygonOuters = unionFc(polygon);\n  } else if (polygon.type === \"Feature\") {\n    polygonOuters = createGeomFromPolygonClippingOutput(polyclip.union(polygon.geometry.coordinates));\n  } else {\n    polygonOuters = createGeomFromPolygonClippingOutput(polyclip.union(polygon.coordinates));\n  }\n  polygonOuters.geometry.coordinates.forEach(function (contour) {\n    maskPolygon.geometry.coordinates.push(contour[0]);\n  });\n  return maskPolygon;\n}\nfunction unionFc(fc) {\n  const unioned = fc.features.length === 2 ? polyclip.union(fc.features[0].geometry.coordinates, fc.features[1].geometry.coordinates) : polyclip.union.apply(polyclip, fc.features.map(function (f) {\n    return f.geometry.coordinates;\n  }));\n  return createGeomFromPolygonClippingOutput(unioned);\n}\nfunction createGeomFromPolygonClippingOutput(unioned) {\n  return multiPolygon(unioned);\n}\nfunction createMask(mask2) {\n  const world = [[[180, 90], [-180, 90], [-180, -90], [180, -90], [180, 90]]];\n  let coordinates = world;\n  if (mask2) {\n    if (mask2.type === \"Feature\") {\n      coordinates = mask2.geometry.coordinates;\n    } else {\n      coordinates = mask2.coordinates;\n    }\n  }\n  return createPolygon(coordinates);\n}\nvar turf_mask_default = mask;\nexport { turf_mask_default as default, mask };\n", "// index.ts\nimport { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance } from \"@turf/distance\";\nfunction midpoint(point1, point2) {\n  const dist = distance(point1, point2);\n  const heading = bearing(point1, point2);\n  const midpoint2 = destination(point1, dist / 2, heading);\n  return midpoint2;\n}\nvar turf_midpoint_default = midpoint;\nexport { turf_midpoint_default as default, midpoint };\n", "// index.ts\nimport { distanceWeight as spatialWeight } from \"@turf/distance-weight\";\nimport { featureEach } from \"@turf/meta\";\nfunction moranIndex(fc, options) {\n  var _a, _b;\n  const inputField = options.inputField;\n  const threshold = options.threshold || 1e5;\n  const p = options.p || 2;\n  const binary = (_a = options.binary) != null ? _a : false;\n  const alpha = options.alpha || -1;\n  const standardization = (_b = options.standardization) != null ? _b : true;\n  const weight = spatialWeight(fc, {\n    alpha,\n    binary,\n    p,\n    standardization,\n    threshold\n  });\n  const y = [];\n  featureEach(fc, feature => {\n    const feaProperties = feature.properties || {};\n    y.push(feaProperties[inputField]);\n  });\n  const yMean = mean(y);\n  const yVar = variance(y);\n  let weightSum = 0;\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  const n = weight.length;\n  for (let i = 0; i < n; i++) {\n    let subS2 = 0;\n    for (let j = 0; j < n; j++) {\n      weightSum += weight[i][j] * (y[i] - yMean) * (y[j] - yMean);\n      s0 += weight[i][j];\n      s1 += Math.pow(weight[i][j] + weight[j][i], 2);\n      subS2 += weight[i][j] + weight[j][i];\n    }\n    s2 += Math.pow(subS2, 2);\n  }\n  s1 = 0.5 * s1;\n  const moranIndex2 = weightSum / s0 / yVar;\n  const expectedMoranIndex = -1 / (n - 1);\n  const vNum = n * n * s1 - n * s2 + 3 * (s0 * s0);\n  const vDen = (n - 1) * (n + 1) * (s0 * s0);\n  const vNorm = vNum / vDen - expectedMoranIndex * expectedMoranIndex;\n  const stdNorm = Math.sqrt(vNorm);\n  const zNorm = (moranIndex2 - expectedMoranIndex) / stdNorm;\n  return {\n    expectedMoranIndex,\n    moranIndex: moranIndex2,\n    stdNorm,\n    zNorm\n  };\n}\nfunction mean(y) {\n  let sum = 0;\n  for (const item of y) {\n    sum += item;\n  }\n  return sum / y.length;\n}\nfunction variance(y) {\n  const yMean = mean(y);\n  let sum = 0;\n  for (const item of y) {\n    sum += Math.pow(item - yMean, 2);\n  }\n  return sum / y.length;\n}\nvar turf_moran_index_default = moranIndex;\nexport { turf_moran_index_default as default, moranIndex };\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// index.ts\nimport { clone } from \"@turf/clone\";\nimport { distance } from \"@turf/distance\";\nimport { featureEach } from \"@turf/meta\";\nfunction nearestPoint(targetPoint, points, options = {}) {\n  if (!targetPoint) throw new Error(\"targetPoint is required\");\n  if (!points) throw new Error(\"points is required\");\n  let minDist = Infinity;\n  let bestFeatureIndex = 0;\n  featureEach(points, (pt, featureIndex) => {\n    const distanceToPoint = distance(targetPoint, pt, options);\n    if (distanceToPoint < minDist) {\n      bestFeatureIndex = featureIndex;\n      minDist = distanceToPoint;\n    }\n  });\n  const nearestPoint2 = clone(points.features[bestFeatureIndex]);\n  return __spreadProps(__spreadValues({}, nearestPoint2), {\n    properties: __spreadProps(__spreadValues({}, nearestPoint2.properties), {\n      featureIndex: bestFeatureIndex,\n      distanceToPoint: minDist\n    })\n  });\n}\nvar turf_nearest_point_default = nearestPoint;\nexport { turf_nearest_point_default as default, nearestPoint };\n", "// index.ts\nimport { area } from \"@turf/area\";\nimport { bbox } from \"@turf/bbox\";\nimport { bboxPolygon } from \"@turf/bbox-polygon\";\nimport { centroid } from \"@turf/centroid\";\nimport { distance } from \"@turf/distance\";\nimport { nearestPoint } from \"@turf/nearest-point\";\nimport { featureEach } from \"@turf/meta\";\nimport { convertArea, featureCollection } from \"@turf/helpers\";\nfunction nearestNeighborAnalysis(dataset, options) {\n  options = options || {};\n  const studyArea = options.studyArea || bboxPolygon(bbox(dataset));\n  const properties = options.properties || {};\n  const units = options.units || \"kilometers\";\n  const features = [];\n  featureEach(dataset, feature => {\n    features.push(centroid(feature));\n  });\n  const n = features.length;\n  const observedMeanDistance = features.map((feature, index) => {\n    const otherFeatures = featureCollection(features.filter((f, i) => {\n      return i !== index;\n    }));\n    return distance(feature, nearestPoint(feature, otherFeatures).geometry.coordinates, {\n      units\n    });\n  }).reduce((sum, value) => {\n    return sum + value;\n  }, 0) / n;\n  const populationDensity = n / convertArea(area(studyArea), \"meters\", units);\n  const expectedMeanDistance = 1 / (2 * Math.sqrt(populationDensity));\n  const variance = 0.26136 / Math.sqrt(n * populationDensity);\n  properties.nearestNeighborAnalysis = {\n    units,\n    arealUnits: units + \"\\xB2\",\n    observedMeanDistance,\n    expectedMeanDistance,\n    nearestNeighborIndex: observedMeanDistance / expectedMeanDistance,\n    numberOfPoints: n,\n    zScore: (observedMeanDistance - expectedMeanDistance) / variance\n  };\n  studyArea.properties = properties;\n  return studyArea;\n}\nvar turf_nearest_neighbor_analysis_default = nearestNeighborAnalysis;\nexport { turf_nearest_neighbor_analysis_default as default, nearestNeighborAnalysis };\n", "// index.ts\nimport { convertLength, feature, lineString, point } from \"@turf/helpers\";\nimport { nearestPointOnLine } from \"@turf/nearest-point-on-line\";\nimport { featureOf } from \"@turf/invariant\";\nimport { segmentEach } from \"@turf/meta\";\nimport { rhumbDistance } from \"@turf/rhumb-distance\";\nfunction pointToLineDistance(pt, line, options = {}) {\n  var _a, _b;\n  const method = (_a = options.method) != null ? _a : \"geodesic\";\n  const units = (_b = options.units) != null ? _b : \"kilometers\";\n  if (!pt) {\n    throw new Error(\"pt is required\");\n  }\n  if (Array.isArray(pt)) {\n    pt = point(pt);\n  } else if (pt.type === \"Point\") {\n    pt = feature(pt);\n  } else {\n    featureOf(pt, \"Point\", \"point\");\n  }\n  if (!line) {\n    throw new Error(\"line is required\");\n  }\n  if (Array.isArray(line)) {\n    line = lineString(line);\n  } else if (line.type === \"LineString\") {\n    line = feature(line);\n  } else {\n    featureOf(line, \"LineString\", \"line\");\n  }\n  let distance = Infinity;\n  const p = pt.geometry.coordinates;\n  segmentEach(line, segment => {\n    if (segment) {\n      const a = segment.geometry.coordinates[0];\n      const b = segment.geometry.coordinates[1];\n      const d = distanceToSegment(p, a, b, {\n        method\n      });\n      if (d < distance) {\n        distance = d;\n      }\n    }\n  });\n  return convertLength(distance, \"degrees\", units);\n}\nfunction distanceToSegment(p, a, b, options) {\n  if (options.method === \"geodesic\") {\n    const nearest = nearestPointOnLine(lineString([a, b]).geometry, p, {\n      units: \"degrees\"\n    });\n    return nearest.properties.dist;\n  }\n  const v = [b[0] - a[0], b[1] - a[1]];\n  const w = [p[0] - a[0], p[1] - a[1]];\n  const c1 = dot(w, v);\n  if (c1 <= 0) {\n    return rhumbDistance(p, a, {\n      units: \"degrees\"\n    });\n  }\n  const c2 = dot(v, v);\n  if (c2 <= c1) {\n    return rhumbDistance(p, b, {\n      units: \"degrees\"\n    });\n  }\n  const b2 = c1 / c2;\n  const Pb = [a[0] + b2 * v[0], a[1] + b2 * v[1]];\n  return rhumbDistance(p, Pb, {\n    units: \"degrees\"\n  });\n}\nfunction dot(u, v) {\n  return u[0] * v[0] + u[1] * v[1];\n}\nvar turf_point_to_line_distance_default = pointToLineDistance;\nexport { turf_point_to_line_distance_default as default, pointToLineDistance };\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// index.ts\nimport { getType } from \"@turf/invariant\";\nimport { featureEach, geomEach } from \"@turf/meta\";\nimport { pointToLineDistance } from \"@turf/point-to-line-distance\";\nfunction nearestPointToLine(points, line, options = {}) {\n  const units = options.units;\n  const properties = options.properties || {};\n  const pts = normalize(points);\n  if (!pts.features.length) {\n    throw new Error(\"points must contain features\");\n  }\n  if (!line) {\n    throw new Error(\"line is required\");\n  }\n  if (getType(line) !== \"LineString\") {\n    throw new Error(\"line must be a LineString\");\n  }\n  let dist = Infinity;\n  let pt = null;\n  featureEach(pts, point => {\n    const d = pointToLineDistance(point, line, {\n      units\n    });\n    if (d < dist) {\n      dist = d;\n      pt = point;\n    }\n  });\n  if (pt) {\n    pt.properties = __spreadValues(__spreadValues(__spreadValues({}, {\n      dist\n    }), pt.properties), properties);\n  }\n  return pt;\n}\nfunction normalize(points) {\n  const features = [];\n  const type = points.geometry ? points.geometry.type : points.type;\n  switch (type) {\n    case \"GeometryCollection\":\n      geomEach(points, geom => {\n        if (geom.type === \"Point\") {\n          features.push({\n            type: \"Feature\",\n            properties: {},\n            geometry: geom\n          });\n        }\n      });\n      return {\n        type: \"FeatureCollection\",\n        features\n      };\n    case \"FeatureCollection\":\n      points.features = points.features.filter(feature => {\n        return feature.geometry.type === \"Point\";\n      });\n      return points;\n    default:\n      throw new Error(\"points must be a Point Collection\");\n  }\n}\nvar turf_nearest_point_to_line_default = nearestPointToLine;\nexport { turf_nearest_point_to_line_default as default, nearestPointToLine };\n", "// index.ts\nimport { getCoord, getGeom } from \"@turf/invariant\";\nfunction planepoint(point, triangle) {\n  const coord = getCoord(point);\n  const geom = getGeom(triangle);\n  const coords = geom.coordinates;\n  const outer = coords[0];\n  if (outer.length < 4) throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");\n  const properties = triangle.type === \"Feature\" && triangle.properties || {};\n  const a = properties.a;\n  const b = properties.b;\n  const c = properties.c;\n  const x = coord[0];\n  const y = coord[1];\n  const x1 = outer[0][0];\n  const y1 = outer[0][1];\n  const z1 = a !== void 0 ? a : outer[0][2];\n  const x2 = outer[1][0];\n  const y2 = outer[1][1];\n  const z2 = b !== void 0 ? b : outer[1][2];\n  const x3 = outer[2][0];\n  const y3 = outer[2][1];\n  const z3 = c !== void 0 ? c : outer[2][2];\n  const z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) - z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) / ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) - (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n  return z;\n}\nvar turf_planepoint_default = planepoint;\nexport { turf_planepoint_default as default, planepoint };\n", "// index.ts\nimport { explode } from \"@turf/explode\";\nimport { center as centroid } from \"@turf/center\";\nimport { nearestPoint } from \"@turf/nearest-point\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { featureCollection, feature, point } from \"@turf/helpers\";\nfunction pointOnFeature(geojson) {\n  const fc = normalize(geojson);\n  const cent = centroid(fc);\n  let onSurface = false;\n  let i = 0;\n  while (!onSurface && i < fc.features.length) {\n    const geom = fc.features[i].geometry;\n    let x, y, x1, y1, x2, y2;\n    let onLine = false;\n    if (geom.type === \"Point\") {\n      if (cent.geometry.coordinates[0] === geom.coordinates[0] && cent.geometry.coordinates[1] === geom.coordinates[1]) {\n        onSurface = true;\n      }\n    } else if (geom.type === \"MultiPoint\") {\n      let onMultiPoint = false;\n      let k = 0;\n      while (!onMultiPoint && k < geom.coordinates.length) {\n        if (cent.geometry.coordinates[0] === geom.coordinates[k][0] && cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n          onSurface = true;\n          onMultiPoint = true;\n        }\n        k++;\n      }\n    } else if (geom.type === \"LineString\") {\n      let k = 0;\n      while (!onLine && k < geom.coordinates.length - 1) {\n        x = cent.geometry.coordinates[0];\n        y = cent.geometry.coordinates[1];\n        x1 = geom.coordinates[k][0];\n        y1 = geom.coordinates[k][1];\n        x2 = geom.coordinates[k + 1][0];\n        y2 = geom.coordinates[k + 1][1];\n        if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n          onLine = true;\n          onSurface = true;\n        }\n        k++;\n      }\n    } else if (geom.type === \"MultiLineString\") {\n      let j = 0;\n      while (j < geom.coordinates.length) {\n        onLine = false;\n        let k = 0;\n        const line = geom.coordinates[j];\n        while (!onLine && k < line.length - 1) {\n          x = cent.geometry.coordinates[0];\n          y = cent.geometry.coordinates[1];\n          x1 = line[k][0];\n          y1 = line[k][1];\n          x2 = line[k + 1][0];\n          y2 = line[k + 1][1];\n          if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n            onLine = true;\n            onSurface = true;\n          }\n          k++;\n        }\n        j++;\n      }\n    } else if (geom.type === \"Polygon\" || geom.type === \"MultiPolygon\") {\n      if (booleanPointInPolygon(cent, geom)) {\n        onSurface = true;\n      }\n    }\n    i++;\n  }\n  if (onSurface) {\n    return cent;\n  } else {\n    const vertices = featureCollection([]);\n    for (let f = 0; f < fc.features.length; f++) {\n      vertices.features = vertices.features.concat(explode(fc.features[f]).features);\n    }\n    return point(nearestPoint(cent, vertices).geometry.coordinates);\n  }\n}\nfunction normalize(geojson) {\n  if (geojson.type !== \"FeatureCollection\") {\n    if (geojson.type !== \"Feature\") {\n      return featureCollection([feature(geojson)]);\n    }\n    return featureCollection([geojson]);\n  }\n  return geojson;\n}\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n  const ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n  const pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n  return ab === ap + pb;\n}\nvar turf_point_on_feature_default = pointOnFeature;\nexport { turf_point_on_feature_default as default, pointOnFeature };\n", "// index.ts\nimport { booleanPointInPolygon as pointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { featureCollection, multiPoint } from \"@turf/helpers\";\nimport { geomEach, featureEach, coordEach } from \"@turf/meta\";\nfunction pointsWithinPolygon(points, polygons) {\n  const results = [];\n  featureEach(points, function (point) {\n    let contained = false;\n    if (point.geometry.type === \"Point\") {\n      geomEach(polygons, function (polygon) {\n        if (pointInPolygon(point, polygon)) {\n          contained = true;\n        }\n      });\n      if (contained) {\n        results.push(point);\n      }\n    } else if (point.geometry.type === \"MultiPoint\") {\n      var pointsWithin = [];\n      geomEach(polygons, function (polygon) {\n        coordEach(point, function (pointCoord) {\n          if (pointInPolygon(pointCoord, polygon)) {\n            contained = true;\n            pointsWithin.push(pointCoord);\n          }\n        });\n      });\n      if (contained) {\n        results.push(multiPoint(pointsWithin, point.properties));\n      }\n    } else {\n      throw new Error(\"Input geometry must be a Point or MultiPoint\");\n    }\n  });\n  return featureCollection(results);\n}\nvar turf_points_within_polygon_default = pointsWithinPolygon;\nexport { turf_points_within_polygon_default as default, pointsWithinPolygon };\n", "// index.ts\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { pointToLineDistance } from \"@turf/point-to-line-distance\";\nimport { polygonToLine } from \"@turf/polygon-to-line\";\nimport { getGeom } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { polygon } from \"@turf/helpers\";\nfunction pointToPolygonDistance(point, polygonOrMultiPolygon, options = {}) {\n  var _a, _b;\n  const method = (_a = options.method) != null ? _a : \"geodesic\";\n  const units = (_b = options.units) != null ? _b : \"kilometers\";\n  if (!point) throw new Error(\"point is required\");\n  if (!polygonOrMultiPolygon) throw new Error(\"polygon or multi-polygon is required\");\n  const geom = getGeom(polygonOrMultiPolygon);\n  if (geom.type === \"MultiPolygon\") {\n    const distances = geom.coordinates.map(coords => pointToPolygonDistance(point, polygon(coords), {\n      method,\n      units\n    }));\n    return Math.min(...distances.map(Math.abs)) * (booleanPointInPolygon(point, polygonOrMultiPolygon) ? -1 : 1);\n  }\n  if (geom.coordinates.length > 1) {\n    const [exteriorDistance, ...interiorDistances] = geom.coordinates.map(coords => pointToPolygonDistance(point, polygon([coords]), {\n      method,\n      units\n    }));\n    if (exteriorDistance >= 0) return exteriorDistance;\n    const smallestInteriorDistance = Math.min(...interiorDistances);\n    if (smallestInteriorDistance < 0) return Math.abs(smallestInteriorDistance);\n    return Math.min(smallestInteriorDistance, Math.abs(exteriorDistance));\n  }\n  const lines = polygonToLine(geom);\n  let minDistance = Infinity;\n  flattenEach(lines, feature => {\n    minDistance = Math.min(minDistance, pointToLineDistance(point, feature, {\n      method,\n      units\n    }));\n  });\n  return booleanPointInPolygon(point, geom) ? -minDistance : minDistance;\n}\nvar turf_point_to_polygon_distance_default = pointToPolygonDistance;\nexport { turf_point_to_polygon_distance_default as default, pointToPolygonDistance };\n", "// index.ts\nimport { featureCollection } from \"@turf/helpers\";\n\n// lib/util.ts\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { point } from \"@turf/helpers\";\nfunction mathSign(x) {\n  return (x > 0) - (x < 0) || +x;\n}\nfunction orientationIndex(p1, p2, q) {\n  const dx1 = p2[0] - p1[0],\n    dy1 = p2[1] - p1[1],\n    dx2 = q[0] - p2[0],\n    dy2 = q[1] - p2[1];\n  return mathSign(dx1 * dy2 - dx2 * dy1);\n}\nfunction envelopeIsEqual(env1, env2) {\n  const envX1 = env1.geometry.coordinates[0].map(c => c[0]),\n    envY1 = env1.geometry.coordinates[0].map(c => c[1]),\n    envX2 = env2.geometry.coordinates[0].map(c => c[0]),\n    envY2 = env2.geometry.coordinates[0].map(c => c[1]);\n  return Math.max.apply(null, envX1) === Math.max.apply(null, envX2) && Math.max.apply(null, envY1) === Math.max.apply(null, envY2) && Math.min.apply(null, envX1) === Math.min.apply(null, envX2) && Math.min.apply(null, envY1) === Math.min.apply(null, envY2);\n}\nfunction envelopeContains(self, env) {\n  return env.geometry.coordinates[0].every(c => booleanPointInPolygon(point(c), self));\n}\nfunction coordinatesEqual(coord1, coord2) {\n  return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n}\n\n// lib/Node.ts\nvar Node = class _Node {\n  static buildId(coordinates) {\n    return coordinates.join(\",\");\n  }\n  constructor(coordinates) {\n    this.id = _Node.buildId(coordinates);\n    this.coordinates = coordinates;\n    this.innerEdges = [];\n    this.outerEdges = [];\n    this.outerEdgesSorted = false;\n  }\n  removeInnerEdge(edge) {\n    this.innerEdges = this.innerEdges.filter(e => e.from.id !== edge.from.id);\n  }\n  removeOuterEdge(edge) {\n    this.outerEdges = this.outerEdges.filter(e => e.to.id !== edge.to.id);\n  }\n  /**\n   * Outer edges are stored CCW order.\n   *\n   * @memberof Node\n   * @param {Edge} edge - Edge to add as an outerEdge.\n   */\n  addOuterEdge(edge) {\n    this.outerEdges.push(edge);\n    this.outerEdgesSorted = false;\n  }\n  /**\n   * Sorts outer edges in CCW way.\n   *\n   * @memberof Node\n   * @private\n   */\n  sortOuterEdges() {\n    if (!this.outerEdgesSorted) {\n      this.outerEdges.sort((a, b) => {\n        const aNode = a.to,\n          bNode = b.to;\n        if (aNode.coordinates[0] - this.coordinates[0] >= 0 && bNode.coordinates[0] - this.coordinates[0] < 0) return 1;\n        if (aNode.coordinates[0] - this.coordinates[0] < 0 && bNode.coordinates[0] - this.coordinates[0] >= 0) return -1;\n        if (aNode.coordinates[0] - this.coordinates[0] === 0 && bNode.coordinates[0] - this.coordinates[0] === 0) {\n          if (aNode.coordinates[1] - this.coordinates[1] >= 0 || bNode.coordinates[1] - this.coordinates[1] >= 0) return aNode.coordinates[1] - bNode.coordinates[1];\n          return bNode.coordinates[1] - aNode.coordinates[1];\n        }\n        const det = orientationIndex(this.coordinates, aNode.coordinates, bNode.coordinates);\n        if (det < 0) return 1;\n        if (det > 0) return -1;\n        const d1 = Math.pow(aNode.coordinates[0] - this.coordinates[0], 2) + Math.pow(aNode.coordinates[1] - this.coordinates[1], 2),\n          d2 = Math.pow(bNode.coordinates[0] - this.coordinates[0], 2) + Math.pow(bNode.coordinates[1] - this.coordinates[1], 2);\n        return d1 - d2;\n      });\n      this.outerEdgesSorted = true;\n    }\n  }\n  /**\n   * Retrieves outer edges.\n   *\n   * They are sorted if they aren't in the CCW order.\n   *\n   * @memberof Node\n   * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n   */\n  getOuterEdges() {\n    this.sortOuterEdges();\n    return this.outerEdges;\n  }\n  getOuterEdge(i) {\n    this.sortOuterEdges();\n    return this.outerEdges[i];\n  }\n  addInnerEdge(edge) {\n    this.innerEdges.push(edge);\n  }\n};\n\n// lib/Edge.ts\nimport { lineString } from \"@turf/helpers\";\nvar Edge = class _Edge {\n  /**\n   * Creates or get the symetric Edge.\n   *\n   * @returns {Edge} - Symetric Edge.\n   */\n  getSymetric() {\n    if (!this.symetric) {\n      this.symetric = new _Edge(this.to, this.from);\n      this.symetric.symetric = this;\n    }\n    return this.symetric;\n  }\n  /**\n   * @param {Node} from - start node of the Edge\n   * @param {Node} to - end node of the edge\n   */\n  constructor(from, to) {\n    this.from = from;\n    this.to = to;\n    this.next = void 0;\n    this.label = void 0;\n    this.symetric = void 0;\n    this.ring = void 0;\n    this.from.addOuterEdge(this);\n    this.to.addInnerEdge(this);\n  }\n  /**\n   * Removes edge from from and to nodes.\n   */\n  deleteEdge() {\n    this.from.removeOuterEdge(this);\n    this.to.removeInnerEdge(this);\n  }\n  /**\n   * Compares Edge equallity.\n   *\n   * An edge is equal to another, if the from and to nodes are the same.\n   *\n   * @param {Edge} edge - Another Edge\n   * @returns {boolean} - True if Edges are equal, False otherwise\n   */\n  isEqual(edge) {\n    return this.from.id === edge.from.id && this.to.id === edge.to.id;\n  }\n  toString() {\n    return `Edge { ${this.from.id} -> ${this.to.id} }`;\n  }\n  /**\n   * Returns a LineString representation of the Edge\n   *\n   * @returns {Feature<LineString>} - LineString representation of the Edge\n   */\n  toLineString() {\n    return lineString([this.from.coordinates, this.to.coordinates]);\n  }\n  /**\n   * Comparator of two edges.\n   *\n   * Implementation of geos::planargraph::DirectedEdge::compareTo.\n   *\n   * @param {Edge} edge - Another edge to compare with this one\n   * @returns {number} -1 if this Edge has a greater angle with the positive x-axis than b,\n   *          0 if the Edges are colinear,\n   *          1 otherwise\n   */\n  compareTo(edge) {\n    return orientationIndex(edge.from.coordinates, edge.to.coordinates, this.to.coordinates);\n  }\n};\n\n// lib/EdgeRing.ts\nimport { multiPoint, polygon, point as point2 } from \"@turf/helpers\";\nimport { envelope } from \"@turf/envelope\";\nimport { booleanPointInPolygon as booleanPointInPolygon2 } from \"@turf/boolean-point-in-polygon\";\nvar EdgeRing = class {\n  constructor() {\n    this.edges = [];\n    this.polygon = void 0;\n    this.envelope = void 0;\n  }\n  /**\n   * Add an edge to the ring, inserting it in the last position.\n   *\n   * @memberof EdgeRing\n   * @param {Edge} edge - Edge to be inserted\n   */\n  push(edge) {\n    this.edges.push(edge);\n    this.polygon = this.envelope = void 0;\n  }\n  /**\n   * Get Edge.\n   *\n   * @memberof EdgeRing\n   * @param {number} i - Index\n   * @returns {Edge} - Edge in the i position\n   */\n  get(i) {\n    return this.edges[i];\n  }\n  /**\n   * Getter of length property.\n   *\n   * @memberof EdgeRing\n   * @returns {number} - Length of the edge ring.\n   */\n  get length() {\n    return this.edges.length;\n  }\n  /**\n   * Similar to Array.prototype.forEach for the list of Edges in the EdgeRing.\n   *\n   * @memberof EdgeRing\n   * @param {Function} f - The same function to be passed to Array.prototype.forEach\n   */\n  forEach(f) {\n    this.edges.forEach(f);\n  }\n  /**\n   * Similar to Array.prototype.map for the list of Edges in the EdgeRing.\n   *\n   * @memberof EdgeRing\n   * @param {Function} f - The same function to be passed to Array.prototype.map\n   * @returns {Array} - The mapped values in the function\n   */\n  map(f) {\n    return this.edges.map(f);\n  }\n  /**\n   * Similar to Array.prototype.some for the list of Edges in the EdgeRing.\n   *\n   * @memberof EdgeRing\n   * @param {Function} f - The same function to be passed to Array.prototype.some\n   * @returns {boolean} - True if an Edge check the condition\n   */\n  some(f) {\n    return this.edges.some(f);\n  }\n  /**\n   * Check if the ring is valid in geomtry terms.\n   *\n   * A ring must have either 0 or 4 or more points. The first and the last must be\n   * equal (in 2D)\n   * geos::geom::LinearRing::validateConstruction\n   *\n   * @memberof EdgeRing\n   * @returns {boolean} - Validity of the EdgeRing\n   */\n  isValid() {\n    return true;\n  }\n  /**\n   * Tests whether this ring is a hole.\n   *\n   * A ring is a hole if it is oriented counter-clockwise.\n   * Similar implementation of geos::algorithm::CGAlgorithms::isCCW\n   *\n   * @memberof EdgeRing\n   * @returns {boolean} - true: if it is a hole\n   */\n  isHole() {\n    const hiIndex = this.edges.reduce((high, edge, i) => {\n        if (edge.from.coordinates[1] > this.edges[high].from.coordinates[1]) high = i;\n        return high;\n      }, 0),\n      iPrev = (hiIndex === 0 ? this.length : hiIndex) - 1,\n      iNext = (hiIndex + 1) % this.length,\n      disc = orientationIndex(this.edges[iPrev].from.coordinates, this.edges[hiIndex].from.coordinates, this.edges[iNext].from.coordinates);\n    if (disc === 0) return this.edges[iPrev].from.coordinates[0] > this.edges[iNext].from.coordinates[0];\n    return disc > 0;\n  }\n  /**\n   * Creates a MultiPoint representing the EdgeRing (discarts edges directions).\n   *\n   * @memberof EdgeRing\n   * @returns {Feature<MultiPoint>} - Multipoint representation of the EdgeRing\n   */\n  toMultiPoint() {\n    return multiPoint(this.edges.map(edge => edge.from.coordinates));\n  }\n  /**\n   * Creates a Polygon representing the EdgeRing.\n   *\n   * @memberof EdgeRing\n   * @returns {Feature<Polygon>} - Polygon representation of the Edge Ring\n   */\n  toPolygon() {\n    if (this.polygon) return this.polygon;\n    const coordinates = this.edges.map(edge => edge.from.coordinates);\n    coordinates.push(this.edges[0].from.coordinates);\n    return this.polygon = polygon([coordinates]);\n  }\n  /**\n   * Calculates the envelope of the EdgeRing.\n   *\n   * @memberof EdgeRing\n   * @returns {Feature<Polygon>} - envelope\n   */\n  getEnvelope() {\n    if (this.envelope) return this.envelope;\n    return this.envelope = envelope(this.toPolygon());\n  }\n  /**\n   * `geos::operation::polygonize::EdgeRing::findEdgeRingContaining`\n   *\n   * @param {EdgeRing} testEdgeRing - EdgeRing to look in the list\n   * @param {EdgeRing[]} shellList - List of EdgeRing in which to search\n   *\n   * @returns {EdgeRing} - EdgeRing which contains the testEdgeRing\n   */\n  static findEdgeRingContaining(testEdgeRing, shellList) {\n    const testEnvelope = testEdgeRing.getEnvelope();\n    let minEnvelope, minShell;\n    shellList.forEach(shell => {\n      const tryEnvelope = shell.getEnvelope();\n      if (minShell) minEnvelope = minShell.getEnvelope();\n      if (envelopeIsEqual(tryEnvelope, testEnvelope)) return;\n      if (envelopeContains(tryEnvelope, testEnvelope)) {\n        const testEdgeRingCoordinates = testEdgeRing.map(edge => edge.from.coordinates);\n        let testPoint;\n        for (const pt of testEdgeRingCoordinates) {\n          if (!shell.some(edge => coordinatesEqual(pt, edge.from.coordinates))) {\n            testPoint = pt;\n          }\n        }\n        if (testPoint && shell.inside(point2(testPoint))) {\n          if (!minShell || envelopeContains(minEnvelope, tryEnvelope)) minShell = shell;\n        }\n      }\n    });\n    return minShell;\n  }\n  /**\n   * Checks if the point is inside the edgeRing\n   *\n   * @param {Feature<Point>} pt - Point to check if it is inside the edgeRing\n   * @returns {boolean} - True if it is inside, False otherwise\n   */\n  inside(pt) {\n    return booleanPointInPolygon2(pt, this.toPolygon());\n  }\n};\n\n// lib/Graph.ts\nimport { flattenEach, coordReduce } from \"@turf/meta\";\nimport { featureOf } from \"@turf/invariant\";\nfunction validateGeoJson(geoJson) {\n  if (!geoJson) throw new Error(\"No geojson passed\");\n  if (geoJson.type !== \"FeatureCollection\" && geoJson.type !== \"GeometryCollection\" && geoJson.type !== \"MultiLineString\" && geoJson.type !== \"LineString\" && geoJson.type !== \"Feature\") throw new Error(`Invalid input type '${geoJson.type}'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature`);\n}\nvar Graph = class _Graph {\n  /**\n   * Creates a graph from a GeoJSON.\n   *\n   * @param {FeatureCollection<LineString>} geoJson - it must comply with the restrictions detailed in the index\n   * @returns {Graph} - The newly created graph\n   * @throws {Error} if geoJson is invalid.\n   */\n  static fromGeoJson(geoJson) {\n    validateGeoJson(geoJson);\n    const graph = new _Graph();\n    flattenEach(geoJson, feature => {\n      featureOf(feature, \"LineString\", \"Graph::fromGeoJson\");\n      coordReduce(feature, (prev, cur) => {\n        if (prev) {\n          const start = graph.getNode(prev),\n            end = graph.getNode(cur);\n          graph.addEdge(start, end);\n        }\n        return cur;\n      });\n    });\n    return graph;\n  }\n  /**\n   * Creates or get a Node.\n   *\n   * @param {number[]} coordinates - Coordinates of the node\n   * @returns {Node} - The created or stored node\n   */\n  getNode(coordinates) {\n    const id = Node.buildId(coordinates);\n    let node = this.nodes[id];\n    if (!node) node = this.nodes[id] = new Node(coordinates);\n    return node;\n  }\n  /**\n   * Adds an Edge and its symetricall.\n   *\n   * Edges are added symetrically, i.e.: we also add its symetric\n   *\n   * @param {Node} from - Node which starts the Edge\n   * @param {Node} to - Node which ends the Edge\n   */\n  addEdge(from, to) {\n    const edge = new Edge(from, to),\n      symetricEdge = edge.getSymetric();\n    this.edges.push(edge);\n    this.edges.push(symetricEdge);\n  }\n  constructor() {\n    this.edges = [];\n    this.nodes = {};\n  }\n  /**\n   * Removes Dangle Nodes (nodes with grade 1).\n   */\n  deleteDangles() {\n    Object.keys(this.nodes).map(id => this.nodes[id]).forEach(node => this._removeIfDangle(node));\n  }\n  /**\n   * Check if node is dangle, if so, remove it.\n   *\n   * It calls itself recursively, removing a dangling node might cause another dangling node\n   *\n   * @param {Node} node - Node to check if it's a dangle\n   */\n  _removeIfDangle(node) {\n    if (node.innerEdges.length <= 1) {\n      const outerNodes = node.getOuterEdges().map(e => e.to);\n      this.removeNode(node);\n      outerNodes.forEach(n => this._removeIfDangle(n));\n    }\n  }\n  /**\n   * Delete cut-edges (bridge edges).\n   *\n   * The graph will be traversed, all the edges will be labeled according the ring\n   * in which they are. (The label is a number incremented by 1). Edges with the same\n   * label are cut-edges.\n   */\n  deleteCutEdges() {\n    this._computeNextCWEdges();\n    this._findLabeledEdgeRings();\n    this.edges.forEach(edge => {\n      if (edge.label === edge.symetric.label) {\n        this.removeEdge(edge.symetric);\n        this.removeEdge(edge);\n      }\n    });\n  }\n  /**\n   * Set the `next` property of each Edge.\n   *\n   * The graph will be transversed in a CW form, so, we set the next of the symetrical edge as the previous one.\n   * OuterEdges are sorted CCW.\n   *\n   * @param {Node} [node] - If no node is passed, the function calls itself for every node in the Graph\n   */\n  _computeNextCWEdges(node) {\n    if (typeof node === \"undefined\") {\n      Object.keys(this.nodes).forEach(id => this._computeNextCWEdges(this.nodes[id]));\n    } else {\n      node.getOuterEdges().forEach((edge, i) => {\n        node.getOuterEdge((i === 0 ? node.getOuterEdges().length : i) - 1).symetric.next = edge;\n      });\n    }\n  }\n  /**\n   * Computes the next edge pointers going CCW around the given node, for the given edgering label.\n   *\n   * This algorithm has the effect of converting maximal edgerings into minimal edgerings\n   *\n   * XXX: method literally transcribed from `geos::operation::polygonize::PolygonizeGraph::computeNextCCWEdges`,\n   * could be written in a more javascript way.\n   *\n   * @param {Node} node - Node\n   * @param {number} label - Ring's label\n   */\n  _computeNextCCWEdges(node, label) {\n    const edges = node.getOuterEdges();\n    let firstOutDE, prevInDE;\n    for (let i = edges.length - 1; i >= 0; --i) {\n      let de = edges[i],\n        sym = de.symetric,\n        outDE,\n        inDE;\n      if (de.label === label) outDE = de;\n      if (sym.label === label) inDE = sym;\n      if (!outDE || !inDE) continue;\n      if (inDE) prevInDE = inDE;\n      if (outDE) {\n        if (prevInDE) {\n          prevInDE.next = outDE;\n          prevInDE = void 0;\n        }\n        if (!firstOutDE) firstOutDE = outDE;\n      }\n    }\n    if (prevInDE) prevInDE.next = firstOutDE;\n  }\n  /**\n   * Finds rings and labels edges according to which rings are.\n   *\n   * The label is a number which is increased for each ring.\n   *\n   * @returns {Edge[]} edges that start rings\n   */\n  _findLabeledEdgeRings() {\n    const edgeRingStarts = [];\n    let label = 0;\n    this.edges.forEach(edge => {\n      if (edge.label >= 0) return;\n      edgeRingStarts.push(edge);\n      let e = edge;\n      do {\n        e.label = label;\n        e = e.next;\n      } while (!edge.isEqual(e));\n      label++;\n    });\n    return edgeRingStarts;\n  }\n  /**\n   * Computes the EdgeRings formed by the edges in this graph.\n   *\n   * @returns {EdgeRing[]} - A list of all the EdgeRings in the graph.\n   */\n  getEdgeRings() {\n    this._computeNextCWEdges();\n    this.edges.forEach(edge => {\n      edge.label = void 0;\n    });\n    this._findLabeledEdgeRings().forEach(edge => {\n      this._findIntersectionNodes(edge).forEach(node => {\n        this._computeNextCCWEdges(node, edge.label);\n      });\n    });\n    const edgeRingList = [];\n    this.edges.forEach(edge => {\n      if (edge.ring) return;\n      edgeRingList.push(this._findEdgeRing(edge));\n    });\n    return edgeRingList;\n  }\n  /**\n   * Find all nodes in a Maxima EdgeRing which are self-intersection nodes.\n   *\n   * @param {Node} startEdge - Start Edge of the Ring\n   * @returns {Node[]} - intersection nodes\n   */\n  _findIntersectionNodes(startEdge) {\n    const intersectionNodes = [];\n    let edge = startEdge;\n    do {\n      let degree = 0;\n      edge.from.getOuterEdges().forEach(e => {\n        if (e.label === startEdge.label) ++degree;\n      });\n      if (degree > 1) intersectionNodes.push(edge.from);\n      edge = edge.next;\n    } while (!startEdge.isEqual(edge));\n    return intersectionNodes;\n  }\n  /**\n   * Get the edge-ring which starts from the provided Edge.\n   *\n   * @param {Edge} startEdge - starting edge of the edge ring\n   * @returns {EdgeRing} - EdgeRing which start Edge is the provided one.\n   */\n  _findEdgeRing(startEdge) {\n    let edge = startEdge;\n    const edgeRing = new EdgeRing();\n    do {\n      edgeRing.push(edge);\n      edge.ring = edgeRing;\n      edge = edge.next;\n    } while (!startEdge.isEqual(edge));\n    return edgeRing;\n  }\n  /**\n   * Removes a node from the Graph.\n   *\n   * It also removes edges asociated to that node\n   * @param {Node} node - Node to be removed\n   */\n  removeNode(node) {\n    node.getOuterEdges().forEach(edge => this.removeEdge(edge));\n    node.innerEdges.forEach(edge => this.removeEdge(edge));\n    delete this.nodes[node.id];\n  }\n  /**\n   * Remove edge from the graph and deletes the edge.\n   *\n   * @param {Edge} edge - Edge to be removed\n   */\n  removeEdge(edge) {\n    this.edges = this.edges.filter(e => !e.isEqual(edge));\n    edge.deleteEdge();\n  }\n};\n\n// index.ts\nfunction polygonize(geoJson) {\n  const graph = Graph.fromGeoJson(geoJson);\n  graph.deleteDangles();\n  graph.deleteCutEdges();\n  const holes = [],\n    shells = [];\n  graph.getEdgeRings().filter(edgeRing => edgeRing.isValid()).forEach(edgeRing => {\n    if (edgeRing.isHole()) holes.push(edgeRing);else shells.push(edgeRing);\n  });\n  holes.forEach(hole => {\n    if (EdgeRing.findEdgeRingContaining(hole, shells)) shells.push(hole);\n  });\n  return featureCollection(shells.map(shell => shell.toPolygon()));\n}\nvar turf_polygonize_default = polygonize;\nexport { turf_polygonize_default as default, polygonize };\n", "// index.ts\nimport { featureCollection, multiPolygon, polygon } from \"@turf/helpers\";\nimport { coordEach, geomEach } from \"@turf/meta\";\nfunction polygonSmooth(inputPolys, options) {\n  options = options || {};\n  options.iterations = options.iterations || 1;\n  const {\n    iterations\n  } = options;\n  const outPolys = [];\n  if (!inputPolys) throw new Error(\"inputPolys is required\");\n  geomEach(inputPolys, function (geom, geomIndex, properties) {\n    if (geom.type === \"Polygon\") {\n      let outCoords = [[]];\n      for (let i = 0; i < iterations; i++) {\n        let tempOutput = [];\n        let poly = geom;\n        if (i > 0) {\n          poly = polygon(outCoords).geometry;\n        }\n        processPolygon(poly, tempOutput);\n        outCoords = tempOutput.slice(0);\n      }\n      outPolys.push(polygon(outCoords, properties));\n    } else if (geom.type === \"MultiPolygon\") {\n      let outCoords = [[[]]];\n      for (let y = 0; y < iterations; y++) {\n        let tempOutput = [];\n        let poly = geom;\n        if (y > 0) {\n          poly = multiPolygon(outCoords).geometry;\n        }\n        processMultiPolygon(poly, tempOutput);\n        outCoords = tempOutput.slice(0);\n      }\n      outPolys.push(multiPolygon(outCoords, properties));\n    } else {\n      throw new Error(\"geometry is invalid, must be Polygon or MultiPolygon\");\n    }\n  });\n  return featureCollection(outPolys);\n}\nfunction processPolygon(poly, tempOutput) {\n  var previousCoord;\n  var previousGeometryIndex;\n  coordEach(poly, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n    if (previousGeometryIndex !== geometryIndex) {\n      tempOutput.push([]);\n    } else {\n      var p0x = previousCoord[0];\n      var p0y = previousCoord[1];\n      var p1x = currentCoord[0];\n      var p1y = currentCoord[1];\n      tempOutput[geometryIndex].push([0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y]);\n      tempOutput[geometryIndex].push([0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y]);\n    }\n    previousCoord = currentCoord;\n    previousGeometryIndex = geometryIndex;\n  }, false);\n  tempOutput.forEach(function (ring) {\n    ring.push(ring[0]);\n  });\n}\nfunction processMultiPolygon(poly, tempOutput) {\n  let previousCoord;\n  let previousMultiFeatureIndex;\n  let previousGeometryIndex;\n  coordEach(poly, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n    if (previousMultiFeatureIndex !== multiFeatureIndex) {\n      tempOutput.push([[]]);\n    } else if (previousGeometryIndex !== geometryIndex) {\n      tempOutput[multiFeatureIndex].push([]);\n    } else {\n      var p0x = previousCoord[0];\n      var p0y = previousCoord[1];\n      var p1x = currentCoord[0];\n      var p1y = currentCoord[1];\n      tempOutput[multiFeatureIndex][geometryIndex].push([0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y]);\n      tempOutput[multiFeatureIndex][geometryIndex].push([0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y]);\n    }\n    previousCoord = currentCoord;\n    previousMultiFeatureIndex = multiFeatureIndex;\n    previousGeometryIndex = geometryIndex;\n  }, false);\n  tempOutput.forEach(function (poly2) {\n    poly2.forEach(function (ring) {\n      ring.push(ring[0]);\n    });\n  });\n}\nvar turf_polygon_smooth_default = polygonSmooth;\nexport { turf_polygon_smooth_default as default, polygonSmooth };\n", "// index.ts\nimport { getCoords, getType } from \"@turf/invariant\";\nimport { point, featureCollection } from \"@turf/helpers\";\nimport { bbox as calcBbox } from \"@turf/bbox\";\nimport { explode } from \"@turf/explode\";\nimport { nearestPoint } from \"@turf/nearest-point\";\nfunction polygonTangents(pt, polygon) {\n  const pointCoords = getCoords(pt);\n  const polyCoords = getCoords(polygon);\n  let rtan = [];\n  let ltan = [];\n  let eprev;\n  const bbox = calcBbox(polygon);\n  let nearestPtIndex = 0;\n  let nearest = null;\n  if (pointCoords[0] > bbox[0] && pointCoords[0] < bbox[2] && pointCoords[1] > bbox[1] && pointCoords[1] < bbox[3]) {\n    nearest = nearestPoint(pt, explode(polygon));\n    nearestPtIndex = nearest.properties.featureIndex;\n  }\n  const type = getType(polygon);\n  switch (type) {\n    case \"Polygon\":\n      rtan = polyCoords[0][nearestPtIndex];\n      ltan = polyCoords[0][0];\n      if (nearest !== null) {\n        if (nearest.geometry.coordinates[1] < pointCoords[1]) ltan = polyCoords[0][nearestPtIndex];\n      }\n      eprev = isLeft(polyCoords[0][0], polyCoords[0][polyCoords[0].length - 1], pointCoords);\n      [rtan, ltan] = processPolygon(polyCoords[0], pointCoords, eprev, rtan, ltan);\n      break;\n    case \"MultiPolygon\":\n      var closestFeature = 0;\n      var closestVertex = 0;\n      var verticesCounted = 0;\n      for (var i = 0; i < polyCoords[0].length; i++) {\n        closestFeature = i;\n        var verticeFound = false;\n        for (var i2 = 0; i2 < polyCoords[0][i].length; i2++) {\n          closestVertex = i2;\n          if (verticesCounted === nearestPtIndex) {\n            verticeFound = true;\n            break;\n          }\n          verticesCounted++;\n        }\n        if (verticeFound) break;\n      }\n      rtan = polyCoords[0][closestFeature][closestVertex];\n      ltan = polyCoords[0][closestFeature][closestVertex];\n      eprev = isLeft(polyCoords[0][0][0], polyCoords[0][0][polyCoords[0][0].length - 1], pointCoords);\n      polyCoords.forEach(function (ring) {\n        [rtan, ltan] = processPolygon(ring[0], pointCoords, eprev, rtan, ltan);\n      });\n      break;\n  }\n  return featureCollection([point(rtan), point(ltan)]);\n}\nfunction processPolygon(polygonCoords, ptCoords, eprev, rtan, ltan) {\n  for (let i = 0; i < polygonCoords.length; i++) {\n    const currentCoords = polygonCoords[i];\n    let nextCoordPair = polygonCoords[i + 1];\n    if (i === polygonCoords.length - 1) {\n      nextCoordPair = polygonCoords[0];\n    }\n    const enext = isLeft(currentCoords, nextCoordPair, ptCoords);\n    if (eprev <= 0 && enext > 0) {\n      if (!isBelow(ptCoords, currentCoords, rtan)) {\n        rtan = currentCoords;\n      }\n    } else if (eprev > 0 && enext <= 0) {\n      if (!isAbove(ptCoords, currentCoords, ltan)) {\n        ltan = currentCoords;\n      }\n    }\n    eprev = enext;\n  }\n  return [rtan, ltan];\n}\nfunction isAbove(point1, point2, point3) {\n  return isLeft(point1, point2, point3) > 0;\n}\nfunction isBelow(point1, point2, point3) {\n  return isLeft(point1, point2, point3) < 0;\n}\nfunction isLeft(point1, point2, point3) {\n  return (point2[0] - point1[0]) * (point3[1] - point1[1]) - (point3[0] - point1[0]) * (point2[1] - point1[1]);\n}\nvar turf_polygon_tangents_default = polygonTangents;\nexport { turf_polygon_tangents_default as default, polygonTangents };\n", "// index.ts\nimport { coordEach } from \"@turf/meta\";\nimport { isNumber } from \"@turf/helpers\";\nimport { clone } from \"@turf/clone\";\nfunction toMercator(geojson, options = {}) {\n  return convert(geojson, \"mercator\", options);\n}\nfunction toWgs84(geojson, options = {}) {\n  return convert(geojson, \"wgs84\", options);\n}\nfunction convert(geojson, projection, options = {}) {\n  options = options || {};\n  var mutate = options.mutate;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (Array.isArray(geojson) && isNumber(geojson[0])) geojson = projection === \"mercator\" ? convertToMercator(geojson) : convertToWgs84(geojson);else {\n    if (mutate !== true) geojson = clone(geojson);\n    coordEach(geojson, function (coord) {\n      var newCoord = projection === \"mercator\" ? convertToMercator(coord) : convertToWgs84(coord);\n      coord[0] = newCoord[0];\n      coord[1] = newCoord[1];\n    });\n  }\n  return geojson;\n}\nfunction convertToMercator(lonLat) {\n  var D2R = Math.PI / 180,\n    A = 6378137,\n    MAXEXTENT = 20037508342789244e-9;\n  var adjusted = Math.abs(lonLat[0]) <= 180 ? lonLat[0] : lonLat[0] - sign(lonLat[0]) * 360;\n  var xy = [A * adjusted * D2R, A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * lonLat[1] * D2R))];\n  if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n  if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n  if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n  if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n  return xy;\n}\nfunction convertToWgs84(xy) {\n  var R2D = 180 / Math.PI;\n  var A = 6378137;\n  return [xy[0] * R2D / A, (Math.PI * 0.5 - 2 * Math.atan(Math.exp(-xy[1] / A))) * R2D];\n}\nfunction sign(x) {\n  return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\nexport { toMercator, toWgs84 };\n", "// index.ts\nimport { area } from \"@turf/area\";\nimport { bbox as turfBBox } from \"@turf/bbox\";\nimport { bboxPolygon } from \"@turf/bbox-polygon\";\nimport { getCoord } from \"@turf/invariant\";\nimport { squareGrid } from \"@turf/square-grid\";\nfunction quadratAnalysis(pointFeatureSet, options) {\n  options = options || {};\n  const studyBbox = options.studyBbox || turfBBox(pointFeatureSet);\n  const confidenceLevel = options.confidenceLevel || 20;\n  const points = pointFeatureSet.features;\n  const numOfPoints = points.length;\n  const sizeOfArea = area(bboxPolygon(studyBbox));\n  const lengthOfSide = Math.sqrt(sizeOfArea / numOfPoints * 2);\n  const grid = squareGrid(studyBbox, lengthOfSide, {\n    units: \"meters\"\n  });\n  const quadrats = grid.features;\n  const quadratIdDict = {};\n  for (let i = 0; i < quadrats.length; i++) {\n    quadratIdDict[i] = {\n      box: turfBBox(quadrats[i]),\n      cnt: 0\n    };\n  }\n  let sumOfPoint = 0;\n  for (const pt of points) {\n    for (const key of Object.keys(quadratIdDict)) {\n      const box = quadratIdDict[key].box;\n      if (inBBox(getCoord(pt), box)) {\n        quadratIdDict[key].cnt += 1;\n        sumOfPoint += 1;\n        break;\n      }\n    }\n  }\n  let maxCnt = 0;\n  for (const key of Object.keys(quadratIdDict)) {\n    const cnt = quadratIdDict[key].cnt;\n    if (cnt > maxCnt) {\n      maxCnt = cnt;\n    }\n  }\n  const expectedDistribution = [];\n  const numOfQuadrat = Object.keys(quadratIdDict).length;\n  const lambda = sumOfPoint / numOfQuadrat;\n  let cumulativeProbility = 0;\n  for (let x = 0; x < maxCnt + 1; x++) {\n    cumulativeProbility += Math.exp(-lambda) * Math.pow(lambda, x) / factorial(x);\n    expectedDistribution.push(cumulativeProbility);\n  }\n  const observedDistribution = [];\n  let cumulativeObservedQuads = 0;\n  for (let x = 0; x < maxCnt + 1; x++) {\n    for (const key of Object.keys(quadratIdDict)) {\n      if (quadratIdDict[key].cnt === x) {\n        cumulativeObservedQuads += 1;\n      }\n    }\n    const p = cumulativeObservedQuads / numOfQuadrat;\n    observedDistribution.push(p);\n  }\n  let maxDifference = 0;\n  for (let x = 0; x < maxCnt + 1; x++) {\n    const difference = Math.abs(expectedDistribution[x] - observedDistribution[x]);\n    if (difference > maxDifference) {\n      maxDifference = difference;\n    }\n  }\n  const k = K_TABLE[confidenceLevel];\n  const criticalValue = k / Math.sqrt(numOfQuadrat);\n  const result = {\n    criticalValue,\n    isRandom: true,\n    maxAbsoluteDifference: maxDifference,\n    observedDistribution\n  };\n  if (maxDifference > criticalValue) {\n    result.isRandom = false;\n  }\n  return result;\n}\nvar K_TABLE = {\n  20: 1.07275,\n  15: 1.13795,\n  10: 1.22385,\n  5: 1.3581,\n  2: 1.51743,\n  1: 1.62762\n};\nfunction inBBox(pt, bbox) {\n  return bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1];\n}\nfunction factorial(num) {\n  const f = [];\n  function inner(n) {\n    if (n === 0 || n === 1) {\n      return 1;\n    }\n    if (f[n] > 0) {\n      return f[n];\n    }\n    return f[n] = inner(n - 1) * n;\n  }\n  return inner(num);\n}\nvar turf_quadrat_analysis_default = quadratAnalysis;\nexport { turf_quadrat_analysis_default as default, quadratAnalysis };\n", "// index.ts\nimport { featureCollection, isNumber, isObject, lineString, point, polygon, validateBBox } from \"@turf/helpers\";\nfunction randomPosition(bbox) {\n  checkBBox(bbox);\n  return randomPositionUnchecked(bbox);\n}\nfunction randomPositionUnchecked(bbox) {\n  if (Array.isArray(bbox)) {\n    return coordInBBox(bbox);\n  }\n  if (bbox && bbox.bbox) {\n    return coordInBBox(bbox.bbox);\n  }\n  return [lon(), lat()];\n}\nfunction checkBBox(bbox) {\n  if (bbox == null) {\n    return;\n  } else if (Array.isArray(bbox)) {\n    validateBBox(bbox);\n  } else if (bbox.bbox != null) {\n    validateBBox(bbox.bbox);\n  }\n}\nfunction randomPoint(count, options = {}) {\n  checkBBox(options.bbox);\n  if (count === void 0 || count === null) {\n    count = 1;\n  }\n  const features = [];\n  for (let i = 0; i < count; i++) {\n    features.push(point(randomPositionUnchecked(options.bbox)));\n  }\n  return featureCollection(features);\n}\nfunction randomPolygon(count, options = {}) {\n  checkBBox(options.bbox);\n  if (count === void 0 || count === null) {\n    count = 1;\n  }\n  if (options.bbox === void 0 || options.bbox === null) {\n    options.bbox = [-180, -90, 180, 90];\n  }\n  if (!isNumber(options.num_vertices) || options.num_vertices === void 0) {\n    options.num_vertices = 10;\n  }\n  if (!isNumber(options.max_radial_length) || options.max_radial_length === void 0) {\n    options.max_radial_length = 10;\n  }\n  const bboxWidth = Math.abs(options.bbox[0] - options.bbox[2]);\n  const bboxHeight = Math.abs(options.bbox[1] - options.bbox[3]);\n  const maxRadius = Math.min(bboxWidth / 2, bboxHeight / 2);\n  if (options.max_radial_length > maxRadius) {\n    throw new Error(\"max_radial_length is greater than the radius of the bbox\");\n  }\n  const paddedBbox = [options.bbox[0] + options.max_radial_length, options.bbox[1] + options.max_radial_length, options.bbox[2] - options.max_radial_length, options.bbox[3] - options.max_radial_length];\n  const features = [];\n  for (let i = 0; i < count; i++) {\n    let vertices = [];\n    const circleOffsets = [...Array(options.num_vertices + 1)].map(Math.random);\n    circleOffsets.forEach((cur, index, arr) => {\n      arr[index] = index > 0 ? cur + arr[index - 1] : cur;\n    });\n    circleOffsets.forEach(cur => {\n      cur = cur * 2 * Math.PI / circleOffsets[circleOffsets.length - 1];\n      const radialScaler = Math.random();\n      vertices.push([radialScaler * (options.max_radial_length || 10) * Math.sin(cur), radialScaler * (options.max_radial_length || 10) * Math.cos(cur)]);\n    });\n    vertices[vertices.length - 1] = vertices[0];\n    vertices = vertices.reverse().map(vertexToCoordinate(randomPositionUnchecked(paddedBbox)));\n    features.push(polygon([vertices]));\n  }\n  return featureCollection(features);\n}\nfunction randomLineString(count, options = {}) {\n  options = options || {};\n  if (!isObject(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  const bbox = options.bbox;\n  checkBBox(bbox);\n  let num_vertices = options.num_vertices;\n  let max_length = options.max_length;\n  let max_rotation = options.max_rotation;\n  if (count === void 0 || count === null) {\n    count = 1;\n  }\n  if (!isNumber(num_vertices) || num_vertices === void 0 || num_vertices < 2) {\n    num_vertices = 10;\n  }\n  if (!isNumber(max_length) || max_length === void 0) {\n    max_length = 1e-4;\n  }\n  if (!isNumber(max_rotation) || max_rotation === void 0) {\n    max_rotation = Math.PI / 8;\n  }\n  const features = [];\n  for (let i = 0; i < count; i++) {\n    const startingPoint = randomPositionUnchecked(bbox);\n    const vertices = [startingPoint];\n    for (let j = 0; j < num_vertices - 1; j++) {\n      const priorAngle = j === 0 ? Math.random() * 2 * Math.PI : Math.tan((vertices[j][1] - vertices[j - 1][1]) / (vertices[j][0] - vertices[j - 1][0]));\n      const angle = priorAngle + (Math.random() - 0.5) * max_rotation * 2;\n      const distance = Math.random() * max_length;\n      vertices.push([vertices[j][0] + distance * Math.cos(angle), vertices[j][1] + distance * Math.sin(angle)]);\n    }\n    features.push(lineString(vertices));\n  }\n  return featureCollection(features);\n}\nfunction vertexToCoordinate(hub) {\n  return cur => {\n    return [cur[0] + hub[0], cur[1] + hub[1]];\n  };\n}\nfunction rnd() {\n  return Math.random() - 0.5;\n}\nfunction lon() {\n  return rnd() * 360;\n}\nfunction lat() {\n  return rnd() * 180;\n}\nfunction coordInBBox(bbox) {\n  return [Math.random() * (bbox[2] - bbox[0]) + bbox[0], Math.random() * (bbox[3] - bbox[1]) + bbox[1]];\n}\nexport { randomLineString, randomPoint, randomPolygon, randomPosition };\n", "// index.ts\nimport { clone } from \"@turf/clone\";\nimport { booleanClockwise } from \"@turf/boolean-clockwise\";\nimport { geomEach, featureEach } from \"@turf/meta\";\nimport { getCoords } from \"@turf/invariant\";\nimport { featureCollection, isObject } from \"@turf/helpers\";\nfunction rewind(geojson, options = {}) {\n  var _a, _b;\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const mutate = (_a = options.mutate) != null ? _a : false;\n  const reverse = (_b = options.reverse) != null ? _b : false;\n  if (!geojson) throw new Error(\"<geojson> is required\");\n  if (typeof reverse !== \"boolean\") throw new Error(\"<reverse> must be a boolean\");\n  if (typeof mutate !== \"boolean\") throw new Error(\"<mutate> must be a boolean\");\n  if (!mutate && geojson.type !== \"Point\" && geojson.type !== \"MultiPoint\") {\n    geojson = clone(geojson);\n  }\n  const results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        rewindFeature(geometry, reverse);\n      });\n      return geojson;\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        const rewoundFeature = rewindFeature(feature, reverse);\n        featureEach(rewoundFeature, function (result) {\n          results.push(result);\n        });\n      });\n      return featureCollection(results);\n  }\n  return rewindFeature(geojson, reverse);\n}\nfunction rewindFeature(geojson, reverse) {\n  const type = geojson.type === \"Feature\" ? geojson.geometry.type : geojson.type;\n  switch (type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        rewindFeature(geometry, reverse);\n      });\n      return geojson;\n    case \"LineString\":\n      rewindLineString(getCoords(geojson), reverse);\n      return geojson;\n    case \"Polygon\":\n      rewindPolygon(getCoords(geojson), reverse);\n      return geojson;\n    case \"MultiLineString\":\n      getCoords(geojson).forEach(function (lineCoords) {\n        rewindLineString(lineCoords, reverse);\n      });\n      return geojson;\n    case \"MultiPolygon\":\n      getCoords(geojson).forEach(function (lineCoords) {\n        rewindPolygon(lineCoords, reverse);\n      });\n      return geojson;\n    case \"Point\":\n    case \"MultiPoint\":\n      return geojson;\n  }\n}\nfunction rewindLineString(coords, reverse) {\n  if (booleanClockwise(coords) === reverse) coords.reverse();\n}\nfunction rewindPolygon(coords, reverse) {\n  if (booleanClockwise(coords[0]) !== reverse) {\n    coords[0].reverse();\n  }\n  for (let i = 1; i < coords.length; i++) {\n    if (booleanClockwise(coords[i]) === reverse) {\n      coords[i].reverse();\n    }\n  }\n}\nvar turf_rewind_default = rewind;\nexport { turf_rewind_default as default, rewind };\n", "// index.ts\nimport { featureCollection } from \"@turf/helpers\";\nfunction sample(fc, num) {\n  if (!fc) throw new Error(\"fc is required\");\n  if (num === null || num === void 0) throw new Error(\"num is required\");\n  if (typeof num !== \"number\") throw new Error(\"num must be a number\");\n  var outFC = featureCollection(getRandomSubarray(fc.features, num));\n  return outFC;\n}\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n  return shuffled.slice(min);\n}\nvar turf_sample_default = sample;\nexport { turf_sample_default as default, sample };\n", "// index.ts\nimport { circle } from \"@turf/circle\";\nimport { lineArc } from \"@turf/line-arc\";\nimport { coordEach } from \"@turf/meta\";\nimport { isObject, polygon } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nfunction sector(center, radius, bearing1, bearing2, options = {}) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const properties = options.properties;\n  if (!center) throw new Error(\"center is required\");\n  if (bearing1 === void 0 || bearing1 === null) throw new Error(\"bearing1 is required\");\n  if (bearing2 === void 0 || bearing2 === null) throw new Error(\"bearing2 is required\");\n  if (!radius) throw new Error(\"radius is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (convertAngleTo360(bearing1) === convertAngleTo360(bearing2)) {\n    return circle(center, radius, options);\n  }\n  const coords = getCoords(center);\n  const arc = lineArc(center, radius, bearing1, bearing2, options);\n  const sliceCoords = [[coords]];\n  coordEach(arc, function (currentCoords) {\n    sliceCoords[0].push(currentCoords);\n  });\n  sliceCoords[0].push(coords);\n  return polygon(sliceCoords, properties);\n}\nfunction convertAngleTo360(alpha) {\n  let beta = alpha % 360;\n  if (beta < 0) {\n    beta += 360;\n  }\n  return beta;\n}\nvar turf_sector_default = sector;\nexport { turf_sector_default as default, sector };\n", "// index.ts\nimport { clone } from \"@turf/clone\";\nimport { center } from \"@turf/center\";\nimport { centroid } from \"@turf/centroid\";\nimport { bbox as turfBBox } from \"@turf/bbox\";\nimport { rhumbBearing } from \"@turf/rhumb-bearing\";\nimport { rhumbDistance } from \"@turf/rhumb-distance\";\nimport { rhumbDestination } from \"@turf/rhumb-destination\";\nimport { coordEach, featureEach } from \"@turf/meta\";\nimport { point, isObject } from \"@turf/helpers\";\nimport { getCoord, getCoords, getType } from \"@turf/invariant\";\nfunction transformScale(geojson, factor, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const origin = options.origin || \"centroid\";\n  const mutate = options.mutate || false;\n  if (!geojson) throw new Error(\"geojson required\");\n  if (typeof factor !== \"number\" || factor <= 0) throw new Error(\"invalid factor\");\n  const originIsPoint = Array.isArray(origin) || typeof origin === \"object\";\n  if (mutate !== true) geojson = clone(geojson);\n  if (geojson.type === \"FeatureCollection\" && !originIsPoint) {\n    featureEach(geojson, function (feature, index) {\n      geojson.features[index] = scale(feature, factor, origin);\n    });\n    return geojson;\n  }\n  return scale(geojson, factor, origin);\n}\nfunction scale(feature, factor, origin) {\n  const isPoint = getType(feature) === \"Point\";\n  const originCoord = defineOrigin(feature, origin);\n  if (factor === 1 || isPoint) return feature;\n  coordEach(feature, function (coord) {\n    const originalDistance = rhumbDistance(originCoord, coord);\n    const bearing = rhumbBearing(originCoord, coord);\n    const newDistance = originalDistance * factor;\n    const newCoord = getCoords(rhumbDestination(originCoord, newDistance, bearing));\n    coord[0] = newCoord[0];\n    coord[1] = newCoord[1];\n    if (coord.length === 3) coord[2] *= factor;\n  });\n  delete feature.bbox;\n  return feature;\n}\nfunction defineOrigin(geojson, origin) {\n  if (origin === void 0 || origin === null) origin = \"centroid\";\n  if (Array.isArray(origin) || typeof origin === \"object\") return getCoord(origin);\n  const bbox = geojson.bbox ? geojson.bbox : turfBBox(geojson, {\n    recompute: true\n  });\n  const west = bbox[0];\n  const south = bbox[1];\n  const east = bbox[2];\n  const north = bbox[3];\n  switch (origin) {\n    case \"sw\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"southwest\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"westsouth\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"bottomleft\":\n      return point([west, south]);\n    case \"se\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"southeast\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"eastsouth\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"bottomright\":\n      return point([east, south]);\n    case \"nw\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"northwest\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"westnorth\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"topleft\":\n      return point([west, north]);\n    case \"ne\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"northeast\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"eastnorth\":\n    // @ts-expect-error undocumented, to be removed for v8 #techdebt\n    case \"topright\":\n      return point([east, north]);\n    case \"center\":\n      return center(geojson);\n    case void 0:\n    case null:\n    case \"centroid\":\n      return centroid(geojson);\n    default:\n      throw new Error(\"invalid origin\");\n  }\n}\nvar turf_transform_scale_default = transformScale;\nexport { turf_transform_scale_default as default, transformScale };\n", "// index.ts\nimport { bbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { distance } from \"@turf/distance\";\nimport { transformScale as scale } from \"@turf/transform-scale\";\nimport { cleanCoords } from \"@turf/clean-coords\";\nimport { bboxPolygon } from \"@turf/bbox-polygon\";\nimport { getCoord, getGeom } from \"@turf/invariant\";\nimport { point, isNumber, lineString, isObject, featureCollection, feature } from \"@turf/helpers\";\n\n// lib/javascript-astar.js\nfunction pathTo(node) {\n  var curr = node,\n    path = [];\n  while (curr.parent) {\n    path.unshift(curr);\n    curr = curr.parent;\n  }\n  return path;\n}\nfunction getHeap() {\n  return new BinaryHeap(function (node) {\n    return node.f;\n  });\n}\nvar astar = {\n  /**\n   * Perform an A* Search on a graph given a start and end node.\n   *\n   * @private\n   * @memberof astar\n   * @param {Graph} graph Graph\n   * @param {GridNode} start Start\n   * @param {GridNode} end End\n   * @param {Object} [options] Options\n   * @param {bool} [options.closest] Specifies whether to return the path to the closest node if the target is unreachable.\n   * @param {Function} [options.heuristic] Heuristic function (see astar.heuristics).\n   * @returns {Object} Search\n   */\n  search: function (graph, start, end, options) {\n    var _a;\n    graph.cleanDirty();\n    options = options || {};\n    var heuristic = options.heuristic || astar.heuristics.manhattan,\n      closest = (_a = options.closest) != null ? _a : false;\n    var openHeap = getHeap(),\n      closestNode = start;\n    start.h = heuristic(start, end);\n    openHeap.push(start);\n    while (openHeap.size() > 0) {\n      var currentNode = openHeap.pop();\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n      currentNode.closed = true;\n      var neighbors = graph.neighbors(currentNode);\n      for (var i = 0, il = neighbors.length; i < il; ++i) {\n        var neighbor = neighbors[i];\n        if (neighbor.closed || neighbor.isWall()) {\n          continue;\n        }\n        var gScore = currentNode.g + neighbor.getCost(currentNode),\n          beenVisited = neighbor.visited;\n        if (!beenVisited || gScore < neighbor.g) {\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markDirty(neighbor);\n          if (closest) {\n            if (neighbor.h < closestNode.h || neighbor.h === closestNode.h && neighbor.g < closestNode.g) {\n              closestNode = neighbor;\n            }\n          }\n          if (!beenVisited) {\n            openHeap.push(neighbor);\n          } else {\n            openHeap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n    if (closest) {\n      return pathTo(closestNode);\n    }\n    return [];\n  },\n  // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n  heuristics: {\n    manhattan: function (pos0, pos1) {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    },\n    diagonal: function (pos0, pos1) {\n      var D = 1;\n      var D2 = Math.sqrt(2);\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n    }\n  },\n  cleanNode: function (node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\nfunction Graph(gridIn, options) {\n  options = options || {};\n  this.nodes = [];\n  this.diagonal = !!options.diagonal;\n  this.grid = [];\n  for (var x = 0; x < gridIn.length; x++) {\n    this.grid[x] = [];\n    for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n      var node = new GridNode(x, y, row[y]);\n      this.grid[x][y] = node;\n      this.nodes.push(node);\n    }\n  }\n  this.init();\n}\nGraph.prototype.init = function () {\n  this.dirtyNodes = [];\n  for (var i = 0; i < this.nodes.length; i++) {\n    astar.cleanNode(this.nodes[i]);\n  }\n};\nGraph.prototype.cleanDirty = function () {\n  for (var i = 0; i < this.dirtyNodes.length; i++) {\n    astar.cleanNode(this.dirtyNodes[i]);\n  }\n  this.dirtyNodes = [];\n};\nGraph.prototype.markDirty = function (node) {\n  this.dirtyNodes.push(node);\n};\nGraph.prototype.neighbors = function (node) {\n  var ret = [],\n    x = node.x,\n    y = node.y,\n    grid = this.grid;\n  if (grid[x - 1] && grid[x - 1][y]) {\n    ret.push(grid[x - 1][y]);\n  }\n  if (grid[x + 1] && grid[x + 1][y]) {\n    ret.push(grid[x + 1][y]);\n  }\n  if (grid[x] && grid[x][y - 1]) {\n    ret.push(grid[x][y - 1]);\n  }\n  if (grid[x] && grid[x][y + 1]) {\n    ret.push(grid[x][y + 1]);\n  }\n  if (this.diagonal) {\n    if (grid[x - 1] && grid[x - 1][y - 1]) {\n      ret.push(grid[x - 1][y - 1]);\n    }\n    if (grid[x + 1] && grid[x + 1][y - 1]) {\n      ret.push(grid[x + 1][y - 1]);\n    }\n    if (grid[x - 1] && grid[x - 1][y + 1]) {\n      ret.push(grid[x - 1][y + 1]);\n    }\n    if (grid[x + 1] && grid[x + 1][y + 1]) {\n      ret.push(grid[x + 1][y + 1]);\n    }\n  }\n  return ret;\n};\nGraph.prototype.toString = function () {\n  var graphString = [],\n    nodes = this.grid,\n    rowDebug,\n    row,\n    y,\n    l;\n  for (var x = 0, len = nodes.length; x < len; x++) {\n    rowDebug = [];\n    row = nodes[x];\n    for (y = 0, l = row.length; y < l; y++) {\n      rowDebug.push(row[y].weight);\n    }\n    graphString.push(rowDebug.join(\" \"));\n  }\n  return graphString.join(\"\\n\");\n};\nfunction GridNode(x, y, weight) {\n  this.x = x;\n  this.y = y;\n  this.weight = weight;\n}\nGridNode.prototype.toString = function () {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n};\nGridNode.prototype.getCost = function (fromNeighbor) {\n  if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n    return this.weight * 1.41421;\n  }\n  return this.weight;\n};\nGridNode.prototype.isWall = function () {\n  return this.weight === 0;\n};\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\nBinaryHeap.prototype = {\n  push: function (element) {\n    this.content.push(element);\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function () {\n    var result = this.content[0];\n    var end = this.content.pop();\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function (node) {\n    var i = this.content.indexOf(node);\n    var end = this.content.pop();\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function () {\n    return this.content.length;\n  },\n  rescoreElement: function (node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function (n) {\n    var element = this.content[n];\n    while (n > 0) {\n      var parentN = (n + 1 >> 1) - 1,\n        parent = this.content[parentN];\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        n = parentN;\n      } else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function (n) {\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n    while (true) {\n      var child2N = n + 1 << 1,\n        child1N = child2N - 1;\n      var swap = null,\n        child1Score;\n      if (child1N < length) {\n        var child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      } else {\n        break;\n      }\n    }\n  }\n};\n\n// index.ts\nfunction shortestPath(start, end, options = {}) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  let obstacles = options.obstacles || featureCollection([]);\n  let resolution = options.resolution || 100;\n  if (!start) throw new Error(\"start is required\");\n  if (!end) throw new Error(\"end is required\");\n  if (resolution && (!isNumber(resolution) || resolution <= 0)) throw new Error(\"options.resolution must be a number, greater than 0\");\n  const startCoord = getCoord(start);\n  const endCoord = getCoord(end);\n  start = point(startCoord);\n  end = point(endCoord);\n  if (obstacles.type === \"FeatureCollection\") {\n    if (obstacles.features.length === 0) {\n      return lineString([startCoord, endCoord]);\n    }\n  } else if (obstacles.type === \"Polygon\") {\n    obstacles = featureCollection([feature(getGeom(obstacles))]);\n  } else {\n    throw new Error(\"invalid obstacles\");\n  }\n  const collection = obstacles;\n  collection.features.push(start);\n  collection.features.push(end);\n  const box = bbox(scale(bboxPolygon(bbox(collection)), 1.15));\n  const [west, south, east, north] = box;\n  const width = distance([west, south], [east, south], options);\n  const division = width / resolution;\n  collection.features.pop();\n  collection.features.pop();\n  const xFraction = division / distance([west, south], [east, south], options);\n  const cellWidth = xFraction * (east - west);\n  const yFraction = division / distance([west, south], [west, north], options);\n  const cellHeight = yFraction * (north - south);\n  const bboxHorizontalSide = east - west;\n  const bboxVerticalSide = north - south;\n  const columns = Math.floor(bboxHorizontalSide / cellWidth);\n  const rows = Math.floor(bboxVerticalSide / cellHeight);\n  const deltaX = (bboxHorizontalSide - columns * cellWidth) / 2;\n  const deltaY = (bboxVerticalSide - rows * cellHeight) / 2;\n  const pointMatrix = [];\n  const matrix = [];\n  let closestToStart;\n  let closestToEnd;\n  let minDistStart = Infinity;\n  let minDistEnd = Infinity;\n  let currentY = north - deltaY;\n  let r = 0;\n  while (currentY >= south) {\n    const matrixRow = [];\n    const pointMatrixRow = [];\n    let currentX = west + deltaX;\n    let c = 0;\n    while (currentX <= east) {\n      const pt = point([currentX, currentY]);\n      const isInsideObstacle = isInside(pt, obstacles);\n      matrixRow.push(isInsideObstacle ? 0 : 1);\n      pointMatrixRow.push(currentX + \"|\" + currentY);\n      const distStart = distance(pt, start);\n      if (!isInsideObstacle && distStart < minDistStart) {\n        minDistStart = distStart;\n        closestToStart = {\n          x: c,\n          y: r\n        };\n      }\n      const distEnd = distance(pt, end);\n      if (!isInsideObstacle && distEnd < minDistEnd) {\n        minDistEnd = distEnd;\n        closestToEnd = {\n          x: c,\n          y: r\n        };\n      }\n      currentX += cellWidth;\n      c++;\n    }\n    matrix.push(matrixRow);\n    pointMatrix.push(pointMatrixRow);\n    currentY -= cellHeight;\n    r++;\n  }\n  const graph = new Graph(matrix, {\n    diagonal: true\n  });\n  const startOnMatrix = graph.grid[closestToStart.y][closestToStart.x];\n  const endOnMatrix = graph.grid[closestToEnd.y][closestToEnd.x];\n  const result = astar.search(graph, startOnMatrix, endOnMatrix);\n  const path = [startCoord];\n  result.forEach(function (coord) {\n    const coords = pointMatrix[coord.x][coord.y].split(\"|\");\n    path.push([+coords[0], +coords[1]]);\n  });\n  path.push(endCoord);\n  return cleanCoords(lineString(path));\n}\nfunction isInside(pt, polygons) {\n  for (let i = 0; i < polygons.features.length; i++) {\n    if (booleanPointInPolygon(pt, polygons.features[i])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar turf_shortest_path_default = shortestPath;\nexport { turf_shortest_path_default as default, shortestPath };\n", "// index.ts\nimport { cleanCoords } from \"@turf/clean-coords\";\nimport { clone } from \"@turf/clone\";\nimport { geomEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\n\n// lib/simplify.js\nfunction getSqDist(p1, p2) {\n  var dx = p1[0] - p2[0],\n    dy = p1[1] - p2[1];\n  return dx * dx + dy * dy;\n}\nfunction getSqSegDist(p, p1, p2) {\n  var x = p1[0],\n    y = p1[1],\n    dx = p2[0] - x,\n    dy = p2[1] - y;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n  }\n  dx = p[0] - x;\n  dy = p[1] - y;\n  return dx * dx + dy * dy;\n}\nfunction simplifyRadialDist(points, sqTolerance) {\n  var prevPoint = points[0],\n    newPoints = [prevPoint],\n    point;\n  for (var i = 1, len = points.length; i < len; i++) {\n    point = points[i];\n    if (getSqDist(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n  if (prevPoint !== point) newPoints.push(point);\n  return newPoints;\n}\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n  var maxSqDist = sqTolerance,\n    index;\n  for (var i = first + 1; i < last; i++) {\n    var sqDist = getSqSegDist(points[i], points[first], points[last]);\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n    simplified.push(points[index]);\n    if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n  }\n}\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n  var last = points.length - 1;\n  var simplified = [points[0]];\n  simplifyDPStep(points, 0, last, sqTolerance, simplified);\n  simplified.push(points[last]);\n  return simplified;\n}\nfunction simplify(points, tolerance, highestQuality) {\n  if (points.length <= 2) return points;\n  var sqTolerance = tolerance !== void 0 ? tolerance * tolerance : 1;\n  points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n  points = simplifyDouglasPeucker(points, sqTolerance);\n  return points;\n}\n\n// index.ts\nfunction simplify2(geojson, options = {}) {\n  var _a, _b, _c;\n  options = options != null ? options : {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const tolerance = (_a = options.tolerance) != null ? _a : 1;\n  const highQuality = (_b = options.highQuality) != null ? _b : false;\n  const mutate = (_c = options.mutate) != null ? _c : false;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (tolerance && tolerance < 0) throw new Error(\"invalid tolerance\");\n  if (mutate !== true) geojson = clone(geojson);\n  geomEach(geojson, function (geom) {\n    simplifyGeom(geom, tolerance, highQuality);\n  });\n  return geojson;\n}\nfunction simplifyGeom(geometry, tolerance, highQuality) {\n  const type = geometry.type;\n  if (type === \"Point\" || type === \"MultiPoint\") return geometry;\n  cleanCoords(geometry, {\n    mutate: true\n  });\n  if (type !== \"GeometryCollection\") {\n    switch (type) {\n      case \"LineString\":\n        geometry.coordinates = simplify(geometry.coordinates, tolerance, highQuality);\n        break;\n      case \"MultiLineString\":\n        geometry.coordinates = geometry.coordinates.map(lines => simplify(lines, tolerance, highQuality));\n        break;\n      case \"Polygon\":\n        geometry.coordinates = simplifyPolygon(geometry.coordinates, tolerance, highQuality);\n        break;\n      case \"MultiPolygon\":\n        geometry.coordinates = geometry.coordinates.map(rings => simplifyPolygon(rings, tolerance, highQuality));\n    }\n  }\n  return geometry;\n}\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n  return coordinates.map(function (ring) {\n    if (ring.length < 4) {\n      throw new Error(\"invalid polygon\");\n    }\n    let ringTolerance = tolerance;\n    let simpleRing = simplify(ring, ringTolerance, highQuality);\n    while (!checkValidity(simpleRing)) {\n      ringTolerance -= ringTolerance * 0.01;\n      simpleRing = simplify(ring, ringTolerance, highQuality);\n    }\n    if (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0] || simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1]) {\n      simpleRing.push(simpleRing[0]);\n    }\n    return simpleRing;\n  });\n}\nfunction checkValidity(ring) {\n  if (ring.length < 3) return false;\n  return !(ring.length === 3 && ring[2][0] === ring[0][0] && ring[2][1] === ring[0][1]);\n}\nvar turf_simplify_default = simplify2;\nexport { turf_simplify_default as default, simplify2 as simplify };\n", "// index.ts\nimport { coordAll, featureEach } from \"@turf/meta\";\nimport { getCoords } from \"@turf/invariant\";\nimport { featureCollection, isObject, isNumber } from \"@turf/helpers\";\nimport { centerMean } from \"@turf/center-mean\";\nimport { pointsWithinPolygon } from \"@turf/points-within-polygon\";\nimport { ellipse } from \"@turf/ellipse\";\nfunction standardDeviationalEllipse(points, options) {\n  var _a;\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const steps = options.steps || 64;\n  const weightTerm = options.weight;\n  const properties = options.properties || {};\n  if (!isNumber(steps)) throw new Error(\"steps must be a number\");\n  if (!isObject(properties)) throw new Error(\"properties must be a number\");\n  const numberOfFeatures = coordAll(points).length;\n  const meanCenter = centerMean(points, {\n    weight: weightTerm\n  });\n  let xDeviationSquaredSum = 0;\n  let yDeviationSquaredSum = 0;\n  let xyDeviationSum = 0;\n  featureEach(points, function (point) {\n    var _a2;\n    const weight = weightTerm ? ((_a2 = point.properties) == null ? void 0 : _a2[weightTerm]) || 1 : 1;\n    const deviation = getDeviations(getCoords(point), getCoords(meanCenter));\n    xDeviationSquaredSum += Math.pow(deviation.x, 2) * weight;\n    yDeviationSquaredSum += Math.pow(deviation.y, 2) * weight;\n    xyDeviationSum += deviation.x * deviation.y * weight;\n  });\n  const bigA = xDeviationSquaredSum - yDeviationSquaredSum;\n  const bigB = Math.sqrt(Math.pow(bigA, 2) + 4 * Math.pow(xyDeviationSum, 2));\n  const bigC = 2 * xyDeviationSum;\n  const theta = Math.atan((bigA + bigB) / bigC);\n  const thetaDeg = theta * 180 / Math.PI;\n  let sigmaXsum = 0;\n  let sigmaYsum = 0;\n  let weightsum = 0;\n  featureEach(points, function (point) {\n    var _a2;\n    const weight = weightTerm ? ((_a2 = point.properties) == null ? void 0 : _a2[weightTerm]) || 1 : 1;\n    const deviation = getDeviations(getCoords(point), getCoords(meanCenter));\n    sigmaXsum += Math.pow(deviation.x * Math.cos(theta) - deviation.y * Math.sin(theta), 2) * weight;\n    sigmaYsum += Math.pow(deviation.x * Math.sin(theta) + deviation.y * Math.cos(theta), 2) * weight;\n    weightsum += weight;\n  });\n  const sigmaX = Math.sqrt(2 * sigmaXsum / weightsum);\n  const sigmaY = Math.sqrt(2 * sigmaYsum / weightsum);\n  const theEllipse = ellipse(meanCenter, sigmaX, sigmaY, {\n    units: \"degrees\",\n    angle: thetaDeg,\n    steps,\n    properties\n  });\n  const pointsWithinEllipse = pointsWithinPolygon(points, featureCollection([theEllipse]));\n  const standardDeviationalEllipseProperties = {\n    meanCenterCoordinates: getCoords(meanCenter),\n    semiMajorAxis: sigmaX,\n    semiMinorAxis: sigmaY,\n    numberOfFeatures,\n    angle: thetaDeg,\n    percentageWithinEllipse: 100 * coordAll(pointsWithinEllipse).length / numberOfFeatures\n  };\n  theEllipse.properties = (_a = theEllipse.properties) != null ? _a : {};\n  theEllipse.properties.standardDeviationalEllipse = standardDeviationalEllipseProperties;\n  return theEllipse;\n}\nfunction getDeviations(coordinates, center) {\n  return {\n    x: coordinates[0] - center[0],\n    y: coordinates[1] - center[1]\n  };\n}\nvar turf_standard_deviational_ellipse_default = standardDeviationalEllipse;\nexport { turf_standard_deviational_ellipse_default as default, standardDeviationalEllipse };\n", "// index.ts\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { clone } from \"@turf/clone\";\nimport { featureEach } from \"@turf/meta\";\nfunction tag(points, polygons, field, outField) {\n  points = clone(points);\n  polygons = clone(polygons);\n  featureEach(points, function (pt) {\n    if (!pt.properties) pt.properties = {};\n    featureEach(polygons, function (poly) {\n      if (pt.properties && poly.properties) {\n        if (pt.properties[outField] === void 0) {\n          if (booleanPointInPolygon(pt, poly)) pt.properties[outField] = poly.properties[field];\n        }\n      }\n    });\n  });\n  return points;\n}\nvar turf_tag_default = tag;\nexport { turf_tag_default as default, tag };\n", "// index.ts\nimport earcut from \"earcut\";\nimport { polygon } from \"@turf/helpers\";\nfunction tesselate(poly) {\n  if (!poly.geometry || poly.geometry.type !== \"Polygon\" && poly.geometry.type !== \"MultiPolygon\") {\n    throw new Error(\"input must be a Polygon or MultiPolygon\");\n  }\n  const fc = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  if (poly.geometry.type === \"Polygon\") {\n    fc.features = processPolygon(poly.geometry.coordinates);\n  } else {\n    poly.geometry.coordinates.forEach(function (coordinates) {\n      fc.features = fc.features.concat(processPolygon(coordinates));\n    });\n  }\n  return fc;\n}\nfunction processPolygon(coordinates) {\n  const data = flattenCoords(coordinates);\n  const dim = 2;\n  const result = earcut(data.vertices, data.holes, dim);\n  const features = [];\n  const vertices = [];\n  result.forEach(function (vert, i2) {\n    const index = result[i2];\n    vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n  });\n  for (var i = 0; i < vertices.length; i += 3) {\n    const coords = vertices.slice(i, i + 3);\n    coords.push(vertices[i]);\n    features.push(polygon([coords]));\n  }\n  return features;\n}\nfunction flattenCoords(data) {\n  const dim = data[0][0].length,\n    result = {\n      vertices: [],\n      holes: [],\n      dimensions: dim\n    };\n  let holeIndex = 0;\n  for (let i = 0; i < data.length; i++) {\n    for (let j = 0; j < data[i].length; j++) {\n      for (let d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n    }\n    if (i > 0) {\n      holeIndex += data[i - 1].length;\n      result.holes.push(holeIndex);\n    }\n  }\n  return result;\n}\nvar turf_tesselate_default = tesselate;\nexport { turf_tesselate_default as default, tesselate };\n", "// index.ts\nimport { coordEach } from \"@turf/meta\";\nimport { isObject } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { clone } from \"@turf/clone\";\nimport { rhumbDestination } from \"@turf/rhumb-destination\";\nfunction transformTranslate(geojson, distance, direction, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n  var zTranslation = options.zTranslation;\n  var mutate = options.mutate;\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (distance === void 0 || distance === null || isNaN(distance)) throw new Error(\"distance is required\");\n  if (zTranslation && typeof zTranslation !== \"number\" && isNaN(zTranslation)) throw new Error(\"zTranslation is not a number\");\n  zTranslation = zTranslation !== void 0 ? zTranslation : 0;\n  if (distance === 0 && zTranslation === 0) return geojson;\n  if (direction === void 0 || direction === null || isNaN(direction)) throw new Error(\"direction is required\");\n  if (distance < 0) {\n    distance = -distance;\n    direction = direction + 180;\n  }\n  if (mutate === false || mutate === void 0) geojson = clone(geojson);\n  coordEach(geojson, function (pointCoords) {\n    var newCoords = getCoords(rhumbDestination(pointCoords, distance, direction, {\n      units\n    }));\n    pointCoords[0] = newCoords[0];\n    pointCoords[1] = newCoords[1];\n    if (zTranslation && pointCoords.length === 3) pointCoords[2] += zTranslation;\n  });\n  return geojson;\n}\nvar turf_transform_translate_default = transformTranslate;\nexport { turf_transform_translate_default as default, transformTranslate };\n", "// index.ts\nimport * as polyclip from \"polyclip-ts\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\nimport { geomEach } from \"@turf/meta\";\nfunction union2(features, options = {}) {\n  const geoms = [];\n  geomEach(features, geom => {\n    geoms.push(geom.coordinates);\n  });\n  if (geoms.length < 2) {\n    throw new Error(\"Must have at least 2 geometries\");\n  }\n  const unioned = polyclip.union(geoms[0], ...geoms.slice(1));\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return polygon(unioned[0], options.properties);else return multiPolygon(unioned, options.properties);\n}\nvar turf_union_default = union2;\nexport { turf_union_default as default, union2 as union };\n", "// index.ts\nimport { flattenEach, featureEach } from \"@turf/meta\";\nimport { polygon as polygon2, featureCollection as featureCollection2 } from \"@turf/helpers\";\n\n// lib/geojson-polygon-self-intersections.js\nimport rbush from \"rbush\";\nfunction geojsonPolygonSelfIntersections(feature, filterFn, useSpatialIndex) {\n  if (feature.geometry.type !== \"Polygon\") throw new Error(\"The input feature must be a Polygon\");\n  if (useSpatialIndex === void 0) useSpatialIndex = 1;\n  var coord = feature.geometry.coordinates;\n  var output = [];\n  var seen = {};\n  if (useSpatialIndex) {\n    var allEdgesAsRbushTreeItems = [];\n    for (var ring0 = 0; ring0 < coord.length; ring0++) {\n      for (var edge0 = 0; edge0 < coord[ring0].length - 1; edge0++) {\n        allEdgesAsRbushTreeItems.push(rbushTreeItem(ring0, edge0));\n      }\n    }\n    var tree = new rbush();\n    tree.load(allEdgesAsRbushTreeItems);\n  }\n  for (var ringA = 0; ringA < coord.length; ringA++) {\n    for (var edgeA = 0; edgeA < coord[ringA].length - 1; edgeA++) {\n      if (useSpatialIndex) {\n        var bboxOverlaps = tree.search(rbushTreeItem(ringA, edgeA));\n        bboxOverlaps.forEach(function (bboxIsect) {\n          var ring12 = bboxIsect.ring;\n          var edge12 = bboxIsect.edge;\n          ifIsectAddToOutput(ringA, edgeA, ring12, edge12);\n        });\n      } else {\n        for (var ring1 = 0; ring1 < coord.length; ring1++) {\n          for (var edge1 = 0; edge1 < coord[ring1].length - 1; edge1++) {\n            ifIsectAddToOutput(ringA, edgeA, ring1, edge1);\n          }\n        }\n      }\n    }\n  }\n  if (!filterFn) output = {\n    type: \"Feature\",\n    geometry: {\n      type: \"MultiPoint\",\n      coordinates: output\n    }\n  };\n  return output;\n  function ifIsectAddToOutput(ring02, edge02, ring12, edge12) {\n    var start0 = coord[ring02][edge02];\n    var end0 = coord[ring02][edge02 + 1];\n    var start1 = coord[ring12][edge12];\n    var end1 = coord[ring12][edge12 + 1];\n    var isect = intersect(start0, end0, start1, end1);\n    if (isect === null) return;\n    var frac0;\n    var frac1;\n    if (end0[0] !== start0[0]) {\n      frac0 = (isect[0] - start0[0]) / (end0[0] - start0[0]);\n    } else {\n      frac0 = (isect[1] - start0[1]) / (end0[1] - start0[1]);\n    }\n    if (end1[0] !== start1[0]) {\n      frac1 = (isect[0] - start1[0]) / (end1[0] - start1[0]);\n    } else {\n      frac1 = (isect[1] - start1[1]) / (end1[1] - start1[1]);\n    }\n    if (frac0 >= 1 || frac0 <= 0 || frac1 >= 1 || frac1 <= 0) return;\n    var key = isect;\n    var unique = !seen[key];\n    if (unique) {\n      seen[key] = true;\n    }\n    if (filterFn) {\n      output.push(filterFn(isect, ring02, edge02, start0, end0, frac0, ring12, edge12, start1, end1, frac1, unique));\n    } else {\n      output.push(isect);\n    }\n  }\n  function rbushTreeItem(ring, edge) {\n    var start = coord[ring][edge];\n    var end = coord[ring][edge + 1];\n    var minX;\n    var maxX;\n    var minY;\n    var maxY;\n    if (start[0] < end[0]) {\n      minX = start[0];\n      maxX = end[0];\n    } else {\n      minX = end[0];\n      maxX = start[0];\n    }\n    if (start[1] < end[1]) {\n      minY = start[1];\n      maxY = end[1];\n    } else {\n      minY = end[1];\n      maxY = start[1];\n    }\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      ring,\n      edge\n    };\n  }\n}\nfunction intersect(start0, end0, start1, end1) {\n  if (equalArrays(start0, start1) || equalArrays(start0, end1) || equalArrays(end0, start1) || equalArrays(end1, start1)) return null;\n  var x0 = start0[0],\n    y0 = start0[1],\n    x1 = end0[0],\n    y1 = end0[1],\n    x2 = start1[0],\n    y2 = start1[1],\n    x3 = end1[0],\n    y3 = end1[1];\n  var denom = (x0 - x1) * (y2 - y3) - (y0 - y1) * (x2 - x3);\n  if (denom === 0) return null;\n  var x4 = ((x0 * y1 - y0 * x1) * (x2 - x3) - (x0 - x1) * (x2 * y3 - y2 * x3)) / denom;\n  var y4 = ((x0 * y1 - y0 * x1) * (y2 - y3) - (y0 - y1) * (x2 * y3 - y2 * x3)) / denom;\n  return [x4, y4];\n}\nfunction equalArrays(array1, array2) {\n  if (!array1 || !array2) return false;\n  if (array1.length !== array2.length) return false;\n  for (var i = 0, l = array1.length; i < l; i++) {\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\n      if (!equalArrays(array1[i], array2[i])) return false;\n    } else if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// lib/simplepolygon.js\nimport { area } from \"@turf/area\";\nimport { featureCollection, polygon } from \"@turf/helpers\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport rbush2 from \"rbush\";\nfunction simplepolygon(feature) {\n  if (feature.type != \"Feature\") throw new Error(\"The input must a geojson object of type Feature\");\n  if (feature.geometry === void 0 || feature.geometry == null) throw new Error(\"The input must a geojson object with a non-empty geometry\");\n  if (feature.geometry.type != \"Polygon\") throw new Error(\"The input must be a geojson Polygon\");\n  var numRings = feature.geometry.coordinates.length;\n  var vertices = [];\n  for (var i = 0; i < numRings; i++) {\n    var ring = feature.geometry.coordinates[i];\n    if (!equalArrays2(ring[0], ring[ring.length - 1])) {\n      ring.push(ring[0]);\n    }\n    for (var j = 0; j < ring.length - 1; j++) {\n      vertices.push(ring[j]);\n    }\n  }\n  if (!isUnique(vertices)) throw new Error(\"The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)\");\n  var numvertices = vertices.length;\n  var selfIsectsData = geojsonPolygonSelfIntersections(feature, function filterFn(isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique) {\n    return [isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique];\n  });\n  var numSelfIsect = selfIsectsData.length;\n  if (numSelfIsect == 0) {\n    var outputFeatureArray = [];\n    for (var i = 0; i < numRings; i++) {\n      outputFeatureArray.push(polygon([feature.geometry.coordinates[i]], {\n        parent: -1,\n        winding: windingOfRing(feature.geometry.coordinates[i])\n      }));\n    }\n    var output = featureCollection(outputFeatureArray);\n    determineParents();\n    setNetWinding();\n    return output;\n  }\n  var pseudoVtxListByRingAndEdge = [];\n  var isectList = [];\n  for (var i = 0; i < numRings; i++) {\n    pseudoVtxListByRingAndEdge.push([]);\n    for (var j = 0; j < feature.geometry.coordinates[i].length - 1; j++) {\n      pseudoVtxListByRingAndEdge[i].push([new PseudoVtx(feature.geometry.coordinates[i][modulo(j + 1, feature.geometry.coordinates[i].length - 1)], 1, [i, j], [i, modulo(j + 1, feature.geometry.coordinates[i].length - 1)], void 0)]);\n      isectList.push(new Isect(feature.geometry.coordinates[i][j], [i, modulo(j - 1, feature.geometry.coordinates[i].length - 1)], [i, j], void 0, void 0, false, true));\n    }\n  }\n  for (var i = 0; i < numSelfIsect; i++) {\n    pseudoVtxListByRingAndEdge[selfIsectsData[i][1]][selfIsectsData[i][2]].push(new PseudoVtx(selfIsectsData[i][0], selfIsectsData[i][5], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], void 0));\n    if (selfIsectsData[i][11]) isectList.push(new Isect(selfIsectsData[i][0], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], void 0, void 0, true, true));\n  }\n  var numIsect = isectList.length;\n  for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n    for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n      pseudoVtxListByRingAndEdge[i][j].sort(function (a, b) {\n        return a.param < b.param ? -1 : 1;\n      });\n    }\n  }\n  var allIsectsAsIsectRbushTreeItem = [];\n  for (var i = 0; i < numIsect; i++) {\n    allIsectsAsIsectRbushTreeItem.push({\n      minX: isectList[i].coord[0],\n      minY: isectList[i].coord[1],\n      maxX: isectList[i].coord[0],\n      maxY: isectList[i].coord[1],\n      index: i\n    });\n  }\n  var isectRbushTree = new rbush2();\n  isectRbushTree.load(allIsectsAsIsectRbushTreeItem);\n  for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n    for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n      for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n        var coordToFind;\n        if (k == pseudoVtxListByRingAndEdge[i][j].length - 1) {\n          coordToFind = pseudoVtxListByRingAndEdge[i][modulo(j + 1, feature.geometry.coordinates[i].length - 1)][0].coord;\n        } else {\n          coordToFind = pseudoVtxListByRingAndEdge[i][j][k + 1].coord;\n        }\n        var IsectRbushTreeItemFound = isectRbushTree.search({\n          minX: coordToFind[0],\n          minY: coordToFind[1],\n          maxX: coordToFind[0],\n          maxY: coordToFind[1]\n        })[0];\n        pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn = IsectRbushTreeItemFound.index;\n      }\n    }\n  }\n  for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n    for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n      for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n        var coordToFind = pseudoVtxListByRingAndEdge[i][j][k].coord;\n        var IsectRbushTreeItemFound = isectRbushTree.search({\n          minX: coordToFind[0],\n          minY: coordToFind[1],\n          maxX: coordToFind[0],\n          maxY: coordToFind[1]\n        })[0];\n        var l = IsectRbushTreeItemFound.index;\n        if (l < numvertices) {\n          isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n        } else {\n          if (equalArrays2(isectList[l].ringAndEdge1, pseudoVtxListByRingAndEdge[i][j][k].ringAndEdgeIn)) {\n            isectList[l].nxtIsectAlongRingAndEdge1 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n          } else {\n            isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n          }\n        }\n      }\n    }\n  }\n  var queue = [];\n  var i = 0;\n  for (var j = 0; j < numRings; j++) {\n    var leftIsect = i;\n    for (var k = 0; k < feature.geometry.coordinates[j].length - 1; k++) {\n      if (isectList[i].coord[0] < isectList[leftIsect].coord[0]) {\n        leftIsect = i;\n      }\n      i++;\n    }\n    var isectAfterLeftIsect = isectList[leftIsect].nxtIsectAlongRingAndEdge2;\n    for (var k = 0; k < isectList.length; k++) {\n      if (isectList[k].nxtIsectAlongRingAndEdge1 == leftIsect || isectList[k].nxtIsectAlongRingAndEdge2 == leftIsect) {\n        var isectBeforeLeftIsect = k;\n        break;\n      }\n    }\n    var windingAtIsect = isConvex([isectList[isectBeforeLeftIsect].coord, isectList[leftIsect].coord, isectList[isectAfterLeftIsect].coord], true) ? 1 : -1;\n    queue.push({\n      isect: leftIsect,\n      parent: -1,\n      winding: windingAtIsect\n    });\n  }\n  queue.sort(function (a, b) {\n    return isectList[a.isect].coord > isectList[b.isect].coord ? -1 : 1;\n  });\n  var outputFeatureArray = [];\n  while (queue.length > 0) {\n    var popped = queue.pop();\n    var startIsect = popped.isect;\n    var currentOutputRingParent = popped.parent;\n    var currentOutputRingWinding = popped.winding;\n    var currentOutputRing = outputFeatureArray.length;\n    var currentOutputRingCoords = [isectList[startIsect].coord];\n    var currentIsect = startIsect;\n    if (isectList[startIsect].ringAndEdge1Walkable) {\n      var walkingRingAndEdge = isectList[startIsect].ringAndEdge1;\n      var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge1;\n    } else {\n      var walkingRingAndEdge = isectList[startIsect].ringAndEdge2;\n      var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge2;\n    }\n    while (!equalArrays2(isectList[startIsect].coord, isectList[nxtIsect].coord)) {\n      currentOutputRingCoords.push(isectList[nxtIsect].coord);\n      var nxtIsectInQueue = void 0;\n      for (var i = 0; i < queue.length; i++) {\n        if (queue[i].isect == nxtIsect) {\n          nxtIsectInQueue = i;\n          break;\n        }\n      }\n      if (nxtIsectInQueue != void 0) {\n        queue.splice(nxtIsectInQueue, 1);\n      }\n      if (equalArrays2(walkingRingAndEdge, isectList[nxtIsect].ringAndEdge1)) {\n        walkingRingAndEdge = isectList[nxtIsect].ringAndEdge2;\n        isectList[nxtIsect].ringAndEdge2Walkable = false;\n        if (isectList[nxtIsect].ringAndEdge1Walkable) {\n          var pushing = {\n            isect: nxtIsect\n          };\n          if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge2].coord], currentOutputRingWinding == 1)) {\n            pushing.parent = currentOutputRingParent;\n            pushing.winding = -currentOutputRingWinding;\n          } else {\n            pushing.parent = currentOutputRing;\n            pushing.winding = currentOutputRingWinding;\n          }\n          queue.push(pushing);\n        }\n        currentIsect = nxtIsect;\n        nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge2;\n      } else {\n        walkingRingAndEdge = isectList[nxtIsect].ringAndEdge1;\n        isectList[nxtIsect].ringAndEdge1Walkable = false;\n        if (isectList[nxtIsect].ringAndEdge2Walkable) {\n          var pushing = {\n            isect: nxtIsect\n          };\n          if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge1].coord], currentOutputRingWinding == 1)) {\n            pushing.parent = currentOutputRingParent;\n            pushing.winding = -currentOutputRingWinding;\n          } else {\n            pushing.parent = currentOutputRing;\n            pushing.winding = currentOutputRingWinding;\n          }\n          queue.push(pushing);\n        }\n        currentIsect = nxtIsect;\n        nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge1;\n      }\n    }\n    currentOutputRingCoords.push(isectList[nxtIsect].coord);\n    outputFeatureArray.push(polygon([currentOutputRingCoords], {\n      index: currentOutputRing,\n      parent: currentOutputRingParent,\n      winding: currentOutputRingWinding,\n      netWinding: void 0\n    }));\n  }\n  var output = featureCollection(outputFeatureArray);\n  determineParents();\n  setNetWinding();\n  function determineParents() {\n    var featuresWithoutParent = [];\n    for (var i2 = 0; i2 < output.features.length; i2++) {\n      if (output.features[i2].properties.parent == -1) featuresWithoutParent.push(i2);\n    }\n    if (featuresWithoutParent.length > 1) {\n      for (var i2 = 0; i2 < featuresWithoutParent.length; i2++) {\n        var parent = -1;\n        var parentArea = Infinity;\n        for (var j2 = 0; j2 < output.features.length; j2++) {\n          if (featuresWithoutParent[i2] == j2) continue;\n          if (booleanPointInPolygon(output.features[featuresWithoutParent[i2]].geometry.coordinates[0][0], output.features[j2], {\n            ignoreBoundary: true\n          })) {\n            if (area(output.features[j2]) < parentArea) {\n              parent = j2;\n            }\n          }\n        }\n        output.features[featuresWithoutParent[i2]].properties.parent = parent;\n      }\n    }\n  }\n  function setNetWinding() {\n    for (var i2 = 0; i2 < output.features.length; i2++) {\n      if (output.features[i2].properties.parent == -1) {\n        var netWinding = output.features[i2].properties.winding;\n        output.features[i2].properties.netWinding = netWinding;\n        setNetWindingOfChildren(i2, netWinding);\n      }\n    }\n  }\n  function setNetWindingOfChildren(parent, ParentNetWinding) {\n    for (var i2 = 0; i2 < output.features.length; i2++) {\n      if (output.features[i2].properties.parent == parent) {\n        var netWinding = ParentNetWinding + output.features[i2].properties.winding;\n        output.features[i2].properties.netWinding = netWinding;\n        setNetWindingOfChildren(i2, netWinding);\n      }\n    }\n  }\n  return output;\n}\nvar PseudoVtx = function (coord, param, ringAndEdgeIn, ringAndEdgeOut, nxtIsectAlongEdgeIn) {\n  this.coord = coord;\n  this.param = param;\n  this.ringAndEdgeIn = ringAndEdgeIn;\n  this.ringAndEdgeOut = ringAndEdgeOut;\n  this.nxtIsectAlongEdgeIn = nxtIsectAlongEdgeIn;\n};\nvar Isect = function (coord, ringAndEdge1, ringAndEdge2, nxtIsectAlongRingAndEdge1, nxtIsectAlongRingAndEdge2, ringAndEdge1Walkable, ringAndEdge2Walkable) {\n  this.coord = coord;\n  this.ringAndEdge1 = ringAndEdge1;\n  this.ringAndEdge2 = ringAndEdge2;\n  this.nxtIsectAlongRingAndEdge1 = nxtIsectAlongRingAndEdge1;\n  this.nxtIsectAlongRingAndEdge2 = nxtIsectAlongRingAndEdge2;\n  this.ringAndEdge1Walkable = ringAndEdge1Walkable;\n  this.ringAndEdge2Walkable = ringAndEdge2Walkable;\n};\nfunction isConvex(pts, righthanded) {\n  if (typeof righthanded === \"undefined\") righthanded = true;\n  if (pts.length != 3) throw new Error(\"This function requires an array of three points [x,y]\");\n  var d = (pts[1][0] - pts[0][0]) * (pts[2][1] - pts[0][1]) - (pts[1][1] - pts[0][1]) * (pts[2][0] - pts[0][0]);\n  return d >= 0 == righthanded;\n}\nfunction windingOfRing(ring) {\n  var leftVtx = 0;\n  for (var i = 0; i < ring.length - 1; i++) {\n    if (ring[i][0] < ring[leftVtx][0]) leftVtx = i;\n  }\n  if (isConvex([ring[modulo(leftVtx - 1, ring.length - 1)], ring[leftVtx], ring[modulo(leftVtx + 1, ring.length - 1)]], true)) {\n    var winding = 1;\n  } else {\n    var winding = -1;\n  }\n  return winding;\n}\nfunction equalArrays2(array1, array2) {\n  if (!array1 || !array2) return false;\n  if (array1.length != array2.length) return false;\n  for (var i = 0, l = array1.length; i < l; i++) {\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\n      if (!equalArrays2(array1[i], array2[i])) return false;\n    } else if (array1[i] != array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction modulo(n, m) {\n  return (n % m + m) % m;\n}\nfunction isUnique(array) {\n  var u = {};\n  var isUnique2 = 1;\n  for (var i = 0, l = array.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(u, array[i])) {\n      isUnique2 = 0;\n      break;\n    }\n    u[array[i]] = 1;\n  }\n  return isUnique2;\n}\n\n// index.ts\nfunction unkinkPolygon(geojson) {\n  var features = [];\n  flattenEach(geojson, function (feature) {\n    if (feature.geometry.type !== \"Polygon\") return;\n    featureEach(simplepolygon(feature), function (poly) {\n      features.push(polygon2(poly.geometry.coordinates, feature.properties));\n    });\n  });\n  return featureCollection2(features);\n}\nvar turf_unkink_polygon_default = unkinkPolygon;\nexport { turf_unkink_polygon_default as default, unkinkPolygon };\n", "export default function (x) {\n  return function () {\n    return x;\n  };\n}", "export function x(d) {\n  return d[0];\n}\nexport function y(d) {\n  return d[1];\n}", "function RedBlackTree() {\n  this._ = null; // root node\n}\nexport function RedBlackNode(node) {\n  node.U =\n  // parent node\n  node.C =\n  // color - true for red, false for black\n  node.L =\n  // left node\n  node.R =\n  // right node\n  node.P =\n  // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function (after, node) {\n    var parent, grandpa, uncle;\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n  remove: function (node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n      sibling,\n      left = node.L,\n      right = node.R,\n      next,\n      red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n    if (node) node.C = false;\n  }\n};\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n    q = node.R,\n    parent = p.U;\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n    q = node.L,\n    parent = p.U;\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\nexport default RedBlackTree;", "import { cells, edges, epsilon } from \"./Diagram\";\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n    index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n    b = edge[1],\n    ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1],\n    t0 = 0,\n    t1 = 1,\n    dx = bx - ax,\n    dy = by - ay,\n    r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n  var v0 = edge[0],\n    left = edge.left,\n    right = edge.right,\n    lx = left[0],\n    ly = left[1],\n    rx = right[0],\n    ry = right[1],\n    fx = (lx + rx) / 2,\n    fy = (ly + ry) / 2,\n    fm,\n    fb;\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n    edge;\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}", "import { createBorderEdge } from \"./Edge\";\nimport { cells, edges, epsilon } from \"./Diagram\";\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n    va = edge.left,\n    vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n        array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function (i, j) {\n        return array[j] - array[i];\n      });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n    iCell,\n    cell,\n    site,\n    iHalfedge,\n    halfedges,\n    nHalfedges,\n    start,\n    startX,\n    startY,\n    end,\n    endX,\n    endY,\n    cover = true;\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1] : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1] : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0] : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0] : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx,\n      dy,\n      d2,\n      dc = Infinity;\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n    if (cover) {\n      var v00 = [x0, y0],\n        v01 = [x0, y1],\n        v11 = [x1, y1],\n        v10 = [x1, y0];\n      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}", "import { RedBlackNode } from \"./RedBlackTree\";\nimport { circles, epsilon2 } from \"./Diagram\";\nvar circlePool = [];\nexport var firstCircle;\nfunction Circle() {\n  RedBlackNode(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n    rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n    cSite = arc.site,\n    rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n    by = cSite[1],\n    ax = lSite[0] - bx,\n    ay = lSite[1] - by,\n    cx = rSite[0] - bx,\n    cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n  var ha = ax * ax + ay * ay,\n    hc = cx * cx + cy * cy,\n    x = (cy * ha - ay * hc) / d,\n    y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n    node = circles._;\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}", "import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n    x = circle.x,\n    y = circle.cy,\n    vertex = [x, y],\n    previous = beach.P,\n    next = beach.N,\n    disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n    iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n    directrix = site[1],\n    lArc,\n    rArc,\n    dxl,\n    dxr,\n    node = beaches._;\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n    ax = lSite[0],\n    ay = lSite[1],\n    bx = site[0] - ax,\n    by = site[1] - ay,\n    rSite = rArc.site,\n    cx = rSite[0] - ax,\n    cy = rSite[1] - ay,\n    d = 2 * (bx * cy - by * cx),\n    hb = bx * bx + by * by,\n    hc = cx * cx + cy * cy,\n    vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n    rfocx = site[0],\n    rfocy = site[1],\n    pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n    lfocy = site[1],\n    plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n    aby2 = 1 / pby2 - 1 / plby2,\n    b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}", "import { addBeach, removeBeach } from \"./Beach\";\nimport { sortCellHalfedges, cellHalfedgeStart, clipCells } from \"./Cell\";\nimport { firstCircle } from \"./Circle\";\nimport { clipEdges } from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\nfunction lexicographic(a, b) {\n  return b[1] - a[1] || b[0] - a[0];\n}\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n    x,\n    y,\n    circle;\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree();\n  circles = new RedBlackTree();\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n  sortCellHalfedges();\n  if (extent) {\n    var x0 = +extent[0][0],\n      y0 = +extent[0][1],\n      x1 = +extent[1][0],\n      y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n  this.edges = edges;\n  this.cells = cells;\n  beaches = circles = edges = cells = null;\n}\nDiagram.prototype = {\n  constructor: Diagram,\n  polygons: function () {\n    var edges = this.edges;\n    return this.cells.map(function (cell) {\n      var polygon = cell.halfedges.map(function (i) {\n        return cellHalfedgeStart(cell, edges[i]);\n      });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n  triangles: function () {\n    var triangles = [],\n      edges = this.edges;\n    this.cells.forEach(function (cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n        halfedges,\n        j = -1,\n        m,\n        s0,\n        e1 = edges[halfedges[m - 1]],\n        s1 = e1.left === site ? e1.right : e1.left;\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n    return triangles;\n  },\n  links: function () {\n    return this.edges.filter(function (edge) {\n      return edge.right;\n    }).map(function (edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n  find: function (x, y, radius) {\n    var that = this,\n      i0,\n      i1 = that._found || 0,\n      n = that.cells.length,\n      cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0],\n      dy = y - cell.site[1],\n      d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function (e) {\n        var edge = that.edges[e],\n          v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n          vy = y - v[1],\n          v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n    that._found = i0;\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};", "import constant from \"./constant\";\nimport { x as pointX, y as pointY } from \"./point\";\nimport Diagram, { epsilon } from \"./Diagram\";\nexport default function () {\n  var x = pointX,\n    y = pointY,\n    extent = null;\n  function voronoi(data) {\n    return new Diagram(data.map(function (d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n  voronoi.polygons = function (data) {\n    return voronoi(data).polygons();\n  };\n  voronoi.links = function (data) {\n    return voronoi(data).links();\n  };\n  voronoi.triangles = function (data) {\n    return voronoi(data).triangles();\n  };\n  voronoi.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n  voronoi.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n  voronoi.extent = function (_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n  voronoi.size = function (_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n  return voronoi;\n}", "// index.ts\nimport { polygon, featureCollection, isObject } from \"@turf/helpers\";\nimport { collectionOf } from \"@turf/invariant\";\nimport { cloneProperties } from \"@turf/clone\";\nimport * as d3voronoi from \"d3-voronoi\";\nfunction coordsToPolygon(coords) {\n  coords = coords.slice();\n  coords.push(coords[0]);\n  return polygon([coords]);\n}\nfunction voronoi2(points, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const bbox = options.bbox || [-180, -85, 180, 85];\n  if (!points) throw new Error(\"points is required\");\n  if (!Array.isArray(bbox)) throw new Error(\"bbox is invalid\");\n  collectionOf(points, \"Point\", \"points\");\n  return featureCollection(d3voronoi.voronoi().x(feature => feature.geometry.coordinates[0]).y(feature => feature.geometry.coordinates[1]).extent([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]).polygons(points.features).map(function (coords, index) {\n    return Object.assign(coordsToPolygon(coords), {\n      properties: cloneProperties(points.features[index].properties)\n    });\n  }));\n}\nvar turf_voronoi_default = voronoi2;\nexport { turf_voronoi_default as default, voronoi2 as voronoi };\n"],
  "mappings": "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",
  "names": ["compare", "defaultCompare", "compare", "bbox", "area", "bbox2", "equal", "length", "t", "e", "n", "i", "u", "r", "v", "y", "s", "a", "o", "x", "l", "D", "B", "h", "c", "f", "g", "d", "_", "p", "m", "k", "I", "E", "N", "T", "S", "L", "C", "R", "w", "ce", "de", "pi", "TinyQueue", "defaultCompare", "compare", "point", "x", "y", "intersect", "point", "x", "y", "intersect", "pointInPolygon", "point", "t", "e", "n", "r", "o", "f", "i", "u", "c", "s", "a", "d", "l", "y", "x", "p", "b", "h", "M", "j", "m", "v", "B", "D", "RBush", "pointInPolygon", "concaveman", "points", "a", "b", "getSqDist", "concave", "bbox", "edges", "intersects", "cross", "x", "y", "x0", "y0", "x1", "y1", "D", "sqrt", "sum", "map", "distance", "rnd", "MAX", "v", "skmeans", "dist", "sum", "earcut", "x", "y", "equals", "area", "x0", "y0", "x1", "y1", "intersects", "tan", "sign", "Node", "polygonArea", "sum", "precision", "radians", "distance", "bearing", "angle", "degrees", "length", "area", "bbox", "esm_exports", "feature", "featureCollection", "distance", "bearing", "radians", "lat", "distance", "B", "esm_exports", "geometry", "featureId", "bbox", "points", "bbox", "feature", "bbox", "points", "sum", "polygon", "sign", "B", "u3", "u", "bc", "ca", "ab", "u", "abt", "bct", "cat", "_8", "_16", "fin", "fin2", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "polygon", "u2", "x", "y", "point", "polygon", "bbox", "epsilon", "x", "y", "x1", "y1", "x2", "y2", "cross", "multiPolygon", "polygon", "multiPoint", "lineString", "bbox2", "compare", "e2", "featureId", "ringId", "eventId", "x1", "y1", "x", "y", "intersection", "sweeplineIntersections", "removeDuplicates", "intersection", "multiPoint", "lineString", "isPointOnLineSegment", "polygon", "cross", "compareCoords", "isLineOnLine", "isLineInPoly", "isPolyInPoly", "lineString", "isPointOnLineSegment", "polygon", "cross", "_GeojsonEquality", "isObject", "object", "polygons", "points", "isPointOnLineSegment", "point", "x", "y", "cross", "precision", "feature", "equals", "bbox", "feature", "geometry", "bbox", "x1", "y1", "__defProp", "length", "v", "angle", "lat", "x", "y", "B", "D", "equal", "getType", "point", "compareCoords", "feature", "point", "isPointInMultiPoint", "isMultiPointInMultiPoint", "isMultiPointOnLine", "isMultiPointInPoly", "isLineOnLine", "isLineInPoly", "isPolyInPoly", "point", "multiPoint", "compareCoords", "lineString", "polygon", "isInside", "doBBoxOverlap", "midpoint", "getMidpoint", "bbox2", "x", "y", "y", "x", "epsilon", "x", "geometry", "object", "cartesian", "spherical", "x", "y", "x", "y", "point", "epsilon", "x", "y", "x0", "y0", "x1", "y1", "epsilon", "point", "points", "compareIntersection", "interpolate", "n", "x", "array", "compare", "x", "array", "x0", "y0", "x1", "y1", "x", "y", "interpolate", "epsilon", "compareIntersection", "ca", "polygon", "point", "ring", "visible", "v", "sum", "polygon", "point", "angle", "sign", "intersection", "epsilon", "identity_default", "x", "areaSum", "areaRingSum", "x", "y", "x", "y", "lengthSum", "x", "y", "interpolate", "polygon", "point", "epsilon", "epsilon", "epsilon", "interpolate", "v", "intersect", "B", "u", "delta", "code", "x", "y", "projection", "object", "x", "y", "x", "y", "x0", "y0", "x1", "y1", "epsilon", "point", "x", "y", "x0", "y0", "x1", "y1", "identity_default", "projection", "point", "object", "center", "scale", "x", "y", "angle", "cc", "x", "y", "x", "y", "x", "y", "epsilon", "x", "y", "x", "y", "x", "y", "jsts", "geometry", "geometry2", "projection", "distance", "feature", "points", "concaveman", "pi", "area", "circle", "center", "feature", "geometry", "esm_exports", "feature", "points", "point", "x", "y", "bbox", "points", "skmeans", "point", "rbush", "polygons", "points", "bbox", "geometry", "points", "point", "B", "D", "edges", "epsilon", "identity_default", "x", "transform_default", "identity_default", "x0", "y0", "array", "transform_default", "points", "point", "arcs", "polygon", "geometry", "o", "fragmentByEnd", "fragmentByStart", "area", "merge_default", "polygons", "geometry", "polygon", "bounds_default", "x0", "y0", "x1", "y1", "geometry", "x", "y", "equal", "mask", "add", "values", "i", "equal", "mask", "set", "keys", "i", "buffer", "point", "i", "previousIndex", "currentIndex", "nextIndex", "indexes", "n", "j", "array", "i", "n", "point", "point", "x0", "y0", "x1", "y1", "geometry", "rings", "bbox", "x0", "y0", "x1", "y1", "n", "pi", "x", "y", "bbox", "bounds_default", "geometry", "e2", "merge_default", "points", "esm_exports", "clone", "BigNumber", "v", "x", "round", "sum", "sign", "y", "temp", "compare", "format", "exp", "compare", "compare", "v", "object", "u", "set", "constant_default", "x", "identity_default", "v", "bbox", "point", "y", "x1", "y1", "Segment", "isLeft", "points", "feature", "dissolve", "feature", "feature", "sum", "distance", "bearing", "destination", "destination", "distance", "angle", "distance", "center", "angle", "x", "y", "explode", "points", "feature", "x", "y", "lon", "lat", "collect", "B", "x", "y", "pair", "points", "intersect", "intersection2", "bbox", "angle", "x", "y", "isOdd", "intersect", "center", "bbox", "bbox", "bbox", "bbox", "intersect", "points", "point", "v", "x", "y", "polygons", "cc", "point", "cells", "i", "x2", "x1", "x0", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "flip", "point", "points", "lat", "pointGrid", "x0", "y0", "x", "explode", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "gridToMatrix", "flip", "sortPointsByLatLng", "point", "points", "lat", "pointGrid", "x0", "y0", "feature", "intersection", "length", "center", "angle2", "circle", "slice", "reverse", "feature", "length", "ab", "crossProduct", "add", "v", "cross", "intersection2", "isParallel", "intersection", "distance", "feature", "intersects", "bbox", "precision", "splitter", "point", "feature", "area", "calculateArea", "x1", "y1", "bbox", "polygon", "esm_exports", "y", "feature", "sum", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "points", "feature", "sum", "variance", "distance", "v", "dot", "u", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "points", "point", "feature", "point", "x", "y", "x1", "y1", "x2", "y2", "normalize", "x", "y", "x1", "y1", "x2", "y2", "explode", "ab", "points", "polygons", "point", "polygon", "point", "feature", "x", "self", "feature", "edges", "de", "y", "polygon", "bbox", "explode", "processPolygon", "esm_exports", "projection", "D2R", "sign", "R2D", "x", "points", "inBBox", "x", "difference", "bbox", "esm_exports", "bbox", "angle", "distance", "reverse", "geometry", "feature", "temp", "center", "convertAngleTo360", "circle", "feature", "scale", "bearing", "bbox", "D", "D2", "Graph", "x", "y", "length", "swap", "isInside", "polygons", "x", "y", "points", "point", "geometry", "points", "point", "center", "points", "polygons", "processPolygon", "earcut", "distance", "feature", "intersect", "x0", "y0", "x1", "y1", "array", "u", "constant_default", "x", "x0", "y0", "x1", "y1", "epsilon", "array", "i", "j", "x0", "y0", "x1", "y1", "epsilon", "epsilon2", "x", "y", "circle", "circle", "x", "y", "epsilon", "epsilon", "epsilon2", "x", "y", "circle", "x0", "y0", "x1", "y1", "edges", "polygon", "v", "v2", "x", "y", "epsilon", "constant_default", "points", "bbox", "feature"]
}
